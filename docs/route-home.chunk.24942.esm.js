(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"+1Jk":function(e,t,n){"use strict";n.r(t),function(e){var r=n("FA6U"),a=n("QRet"),s=n("KTLW");n("UQrs");const i=n("m1w8");t.default=()=>{const[t,n]=Object(a.b)(!1),[o,u]=Object(a.b)(!0),[c,l]=Object(a.b)([2,2]),[d,h]=Object(a.b)([]),[p,f]=Object(a.b)(i.create("BROWSER_FFT"));let[m,b]=c;return Object(a.a)((async()=>{await(async()=>{await p.ensureModelLoaded(),h(p.wordLabels())})(),u(!1)}),[c]),e("div",{class:r.a.home},o&&e("span",null,"Loading..."),!o&&e("p",{style:{marginBottom:"3em"}},'Click on "Start Recording" and being speaking commands. Recognized commands = ',e("em",null,"UP"),", ",e("em",null,"DOWN"),", ",e("em",null,"LEFT"),", ",e("em",null,"RIGHT")," "),!o&&e(s.a,{size:5,position:c}),!o&&!t&&e("span",{class:r.a.recording,onClick:()=>(n(!0),void(p.isListening()||p.listen((e=>{const t=Math.max(...e.scores),n=e.scores.indexOf(t);switch(console.log("Recognized Word:",d[n]),console.log("current position:",[m,b]),d[n]){case"left":m>0&&(m-=1);break;case"right":m<4&&(m+=1);break;case"up":b>0&&(b-=1);break;case"down":b<4&&(b+=1)}l([m,b]),console.log("next position:",[m,b])}),{includeSpectrogram:!1,probabilityThreshold:.75})))},"Start Recording"),!o&&t&&e("span",{class:r.a.recording+" "+r.a.stop,onClick:()=>(p.isListening()&&p.stopListening(),void n(!1))},"Stop Recording"))}}.call(this,n("hosL").h)},"+VIV":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("VncX"),u=n("6D6q");const c=Object(u.b)({less_:function(e,t){let n=Object(i.a)(e,"a","less","string_or_numeric"),u=Object(i.a)(t,"b","less","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.Ab,{a:n,b:u})}})},"+gnc":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({broadcastArgs_:function(e,t){const n=Object(s.a)(e,"s0","broadcastArgs","int32"),i=Object(s.a)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==i.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${i.rank}`);return r.a.runKernel(a.v,{s0:n,s1:i})}})},"+tZ4":function(e,t,n){"use strict";function r(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function a(e){return r(e,"int32")}var s,i,o,u,c;n.d(t,"a",(function(){return s})),n.d(t,"c",(function(){return r})),n.d(t,"b",(function(){return a})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(o||(o={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(u||(u={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(c||(c={}));const l={float32:u,int32:i,bool:o,complex64:c}},"/0Av":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({floor_:function(e){const t=Object(s.a)(e,"x","floor","float32");return r.a.runKernel(a.hb,{x:t})}})},"/2Wz":function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n("qCmv"),a=n("bsxM"),s=n("PurG"),i=n("393e"),o=n("6D6q"),u=n("9oR1"),c=n("6RbH"),l=n("O7pG"),d=n("Km0G"),h=n("cuXz"),p=n("ZRUZ"),f=n("Vs/U");const m=Object(o.b)({rfft_:function(e,t){Object(r.b)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((()=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=Object(l.a)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=Object(s.a)([e,Object(h.a)(r)],e.shape.length-1),n=t}else m=e;const b=Object(p.a)(m),g=Object(c.a)(Object(a.a)(m,b),[o,n]),y=Object(f.a)(g),x=Math.floor(n/2)+1,v=Object(u.a)(y),w=Object(i.a)(y),O=Object(d.a)(v,[x,n-x],v.shape.length-1),k=Object(d.a)(w,[x,n-x],w.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=x,Object(c.a)(Object(a.a)(O[0],k[0]),I)}})},"/Exp":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},"/TlD":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("6D6q"),i=n("6RbH");const o=Object(s.b)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,o,u=[1,1],c){let l=t,d=!1;3===t.rank&&(d=!0,l=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h=r.a.runKernel(a.R,{dy:l,filter:n},{strides:s,pad:o,dimRoundingMode:c,dilations:u,inputShape:e});return d?Object(i.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},"/en9":function(e,t,n){"use strict";function r(e,t,n,r){if(null==r&&(r=Object(s.r)(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(s.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(s.c)(t);const e=Object(s.O)(t),r=Object(s.O)(n);Object(s.b)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==Object(s.O)(t.slice(e));Object(s.b)(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Object(s.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Object(i.toTypedArray)(e,r):Object(s.m)(e,[],!0),a.a.makeTensor(e,t,r)}n.d(t,"a",(function(){return r}));var a=n("QCRY"),s=n("qCmv"),i=n("Mxc4")},"/nzz":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({abs_:function(e){const t=Object(s.a)(e,"x","abs");if("complex64"===t.dtype){return r.a.runKernel(a.B,{x:t})}return r.a.runKernel(a.a,{x:t})}})},0:function(){},"0L9A":function(e,t,n){"use strict";function r(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(c.c)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function a(e,t){Object(l.b)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function s(e,t){return t.some((t=>t.id===e.id))}function i(e){const t=[];return o(e,t,new Set),t}function o(e,t,n){if(null==e)return;if(e instanceof u.a)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),o(r,t,n))}}n.r(t),n.d(t,"makeTypesMatch",(function(){return r})),n.d(t,"assertTypesMatch",(function(){return a})),n.d(t,"isTensorInList",(function(){return s})),n.d(t,"getTensorsInContainer",(function(){return i}));var u=n("Vloo"),c=n("+tZ4"),l=n("qCmv")},"0hhO":function(e,t,n){"use strict";function r(){return null==ha&&(ha=Object(da.Ud)().epsilon()),ha}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function s(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function i(e,t){if(!e)throw new ga(t)}function o(e,t){let n=0;for(const r of e)r===t&&n++;return n}function u(e){return 1===e.length?e[0]:e}function c(e){return Array.isArray(e)?e:[e]}function l(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function d(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}function h(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function p(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>p(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?p(t):e[n]=t.value)}}}function f(e,t={},n={},r="object",s=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in ya)s=ya[a];else if(s=t[a],null==s)throw new ma(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const i=e;if(null==i.className||null==i.config)throw new ma(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const o=i.className;let u,c;if(o in n?[u,c]=n[o]:o in ya?[u,c]=ya.className:o in t&&([u,c]=t[o]),null==u)throw new ma(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=c){const e={};for(const t of Object.keys(ya))e[t]=ya[t];for(const t of Object.keys(n))e[t]=n[t];i.config.customObjects=e;const t=a({},ya);for(const e of Object.keys(n))ya[e]=n[e];p(i.config);const r=c(u,i.config,n,s);return ya=a({},t),r}{const e=a({},ya);for(const e of Object.keys(n))ya[e]=n[e];const t=new u(i.config);return ya=a({},e),t}}}function m(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function b(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function g(e){if(null==e)throw new ma(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function y(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ma(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function x(e,t,n=0,r=1/0){return i(n>=0),i(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function v(e,t){Array.isArray(e)?(da.si.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>v(e,`element ${n+1} of ${t}`)))):da.si.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${w(e)}.`))}function w(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>w(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function O(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function k(e,t){return Object(da.fi)((()=>da.Jh(da.Sh(da.og(e,e),t,!0))))}function I(e){return h(e)}function S(e,t={}){return f(e,da.nh.SerializationMap.getMap().classNameMap,t,"constraint")}function j(e){if(null==e)return null;if("string"==typeof e){return S({className:e in Ia?Ia[e]:e,config:{}})}return e instanceof xa?e:S(e)}function N(e){return new va(e)}function T(e){return new wa(e)}function C(){return new Oa}function E(e){return new ka(e)}function A(e){y(Sa,"DataFormat",e)}function $(e){y(Na,"PaddingMode",e)}function R(e){y(Ta,"PoolMode",e)}function D(e,t){Aa.push(e);try{const e=t();return Aa.pop(),e}catch(e){throw Aa.pop(),e}}function F(e){if(!M(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Aa.length?"":Aa.join("/")+"/")+e}function _(e){if(!M(e))throw new Error("Not a valid tensor name: '"+e+"'");Ea.has(e)||Ea.set(e,0);const t=Ea.get(e);if(Ea.set(e,Ea.get(e)+1),t>0){const n=`${e}_${t}`;return Ea.set(n,1),n}return e}function M(e){return!!e.match($a)}function z(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function L(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function P(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function B(e,t){if(t<e)throw new ma(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function V(e,t){return da.je(e,t)}function W(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),da.Zg(e,n)}function U(e,t,n){return Object(da.fi)((()=>{switch(e.rank){case 1:return da.xh(e,t,n);case 2:return da.yh(e,[t,0],[n,e.shape[1]]);case 3:return da.zh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return da.Ah(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return da.wh(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return da.wh(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ma(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function G(e,t,n){return Object(da.fi)((()=>{switch(e.rank){case 1:return da.xh(e,t,n);case 2:return da.yh(e,[0,t],[e.shape[0],n]);case 3:return da.zh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return da.Ah(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ma(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function q(e,t,n,r){return Object(da.fi)((()=>{switch(e.rank){case 1:return da.xh(e,t,n);case 2:switch(r){case 1:return U(e,t,n);case 2:return G(e,t,n);default:throw new ma(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return U(e,t,n);case 2:return da.zh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return G(e,t,n);default:throw new ma(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return U(e,t,n);case 2:return da.Ah(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return da.Ah(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return G(e,t,n);default:throw new ma(`The axis is not within the rank of the tensor ${r}`)}default:throw new ma(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function H(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),da.oe(e,t)}function Y(e,t){switch(e.rank){case 1:return da.pe([e,t]);case 2:return da.qe([e,t],0);case 3:return da.re([e,t],0);case 4:return da.se([e,t],0);default:throw new ma(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function K(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ma(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return da.gi(e,t)}function X(e,t=0,n=1,r,a){return da.Ng(e,t,n,r,a)}function Z(e,t,n,r){if(e.rank<2||t.rank<2)throw new ba(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ba(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return da.lf.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?ee(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=da.Zg(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),c=[...i,o],l=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=da.Zg(da.ki(t,l),[u,-1]);const d=[...a,...c];return da.Zg(da.lf.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?ee(e.rank,r,"channelsLast"):null,activation:n}),d)}}function Q(e,t,n){return Object(da.fi)((()=>(t=Array.isArray(t)?Object(da.Xh)(t,"int32"):da.je(t,"int32"),da.mf(e,t,n))))}function J(e){return da.og(e,e)}function ee(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ma(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return da.Zg(t,1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return da.Zg(t,1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===e){if("channelsFirst"===n)return da.Zg(t,1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===n)return da.Zg(t,1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===e){if("channelsFirst"===n)return da.Zg(t,1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===n)return da.Zg(t,1===r.length?[1,1,r[0]]:[1].concat(r))}else if(e<3)return t;throw new ma(`Unsupported input rank by biasAdd: ${t.rank}`)}function te(e,t,n){return Object(da.fi)((()=>(null==n&&(n="channelsLast"),A(n),da.Hd(e,ee(e.rank,t,n)))))}function ne(e,t,n,r){return Object(da.fi)((()=>da.Re(e,t,n,r)))}function re(e,t,n=!1){return n?e():t()}function ae(e,t={}){return f(e,da.nh.SerializationMap.getMap().classNameMap,t,"initializer")}function se(e){return h(e)}function ie(e){if("string"==typeof e){const t=e in Za?Za[e]:e;if("GlorotNormal"===t)return new Ga;if("GlorotUniform"===t)return new Ua;if("HeNormal"===t)return new qa;if("HeUniform"===t)return new Ha;if("LeCunNormal"===t)return new Ya;if("LeCunUniform"===t)return new Ka;{const e={};return e.className=t,e.config={},ae(e)}}return e instanceof Fa?e:ae(e)}function oe(){return new _a}function ue(){return new Ma}function ce(e){return new za(e)}function le(e){return new La(e)}function de(e){return new Pa(e)}function he(e){return new Ba(e)}function pe(e){return new Va(e)}function fe(e){return new Wa(e)}function me(e){return new Ua(e)}function be(e){return new Ga(e)}function ge(e){return new qa(e)}function ye(e){return new Ha(e)}function xe(e){return new Ya(e)}function ve(e){return new Ka(e)}function we(e){return new Xa(e)}function Oe(){return Qa++}function ke(e=""){return e in Ja||(Ja[e]=0),Ja[e]+=1,e+Ja[e].toString()}function Ie(e){return Array.isArray(e)&&Array.isArray(e[0])}function Se(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function je(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ma(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ne(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new ma(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Te(e){let t=0;for(const n of e)t+=0===n.shape.length?1:n.shape.reduce(((e,t)=>e*t));return t}function Ce(e){return e.map((e=>e.read()))}function Ee(e){e.forEach((e=>{e[0].write(e[1])}))}function Ae(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Ae(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}function $e(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ma("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new us({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Re(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Object(da.Me)(r)}}function De(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}function Fe(e,t){if(null==e&&(e={}),e instanceof ls)return[e];if(Array.isArray(e)&&e[0]instanceof ls)return e;return c(e).map((e=>new fs(e,t)))}function _e(e,t,n,r,a,s,i,o,u){const c=new ps,l=[new hs,...ms.createCallbacks(t)];null!=e&&l.push(...e),l.push(c);const d=new ds(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:c}}function Me(e,t={},n=!1){return f(e,da.nh.SerializationMap.getMap().classNameMap,t,"layer",n)}function ze(e,t){return Object(da.fi)((()=>{"float32"!==e.dtype&&(e=da.je(e,"float32"));const n=da.Sh(J(e),t,!0),a=da.gf(n.shape,r()),s=da.Jh(da.eg(n,a));return da.Oe(e,s)}))}function Le(e,t){return Object(da.fi)((()=>da.fg(J(da.Rh(t,e)),-1)))}function Pe(e,t){return Object(da.fi)((()=>da.fg(da.Ed(da.Rh(t,e)),-1)))}function Be(e,t){return Object(da.fi)((()=>{const n=da.Rh(e,t),a=da.le(da.Ed(e),r(),Number.MAX_VALUE),s=da.Ed(da.Oe(n,a));return da.og(100,da.fg(s,-1))}))}function Ve(e,t){return Object(da.fi)((()=>{const n=da.le(t,r(),Number.MAX_VALUE),a=da.Of(da.Hd(1,n)),s=da.le(e,r(),Number.MAX_VALUE),i=da.Of(da.Hd(1,s));return da.fg(J(da.Rh(a,i)),-1)}))}function We(e,t,n=!1){return Object(da.fi)((()=>{if(n)t=da.Ch(t);else{const e=da.Sh(t,t.shape.length-1,!0);t=da.Oe(t,e)}return t=da.le(t,r(),1-r()),da.rg(da.Sh(da.og(da.je(e,"float32"),da.Of(t)),t.shape.length-1))}))}function Ue(e,t,n=!1){return Object(da.fi)((()=>{const a=da.je(da.jf(function(e){const t=[z(e.shape)];return da.Zg(e,t)}(e)),"int32"),s=(t=da.le(t,r(),1-r())).shape;return We(da.Zg(da.vg(a,s[s.length-1]),s),t,n)}))}function Ge(e,t){return Object(da.fi)((()=>{let n;return n=da.le(t,r(),1-r()),n=da.Of(da.Oe(n,da.Rh(1,n))),da.fg(function(e,t){if(!da.si.arraysEqual(e.shape,t.shape))throw new ma(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Object(da.fi)((()=>{const n=da.Wg(t),r=da.rg(da.Ed(t));return da.Hd(da.Rh(n,da.og(t,e)),da.Pf(da.bf(r)))}))}(e,n),-1)}))}function qe(e,t){return Object(da.fi)((()=>{const n=da.le(e,r(),1),a=da.le(t,r(),1);return da.Sh(da.og(e,da.Of(da.Oe(n,a))),-1)}))}function He(e,t){return Object(da.fi)((()=>{const n=ze(e,-1),r=ze(t,-1),a=da.og(n,r);return da.rg(da.Sh(a,-1))}))}function Ye(e){if("string"==typeof e){if(e in bs)return bs[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ma(t)}return e}function Ke(e,t){return Object(da.fi)((()=>{const n=da.og(.5,da.xg(t)),r=V(da.vf(t,n),e.dtype);return da.fg(da.Ze(e,r),-1)}))}function Xe(e,t){return Object(da.fi)((()=>V(da.Ze(da.Ld(e,-1),da.Ld(t,-1)),"float32")))}function Ze(e,t){return Object(da.fi)((()=>da.je(da.Sh(da.Tf(da.Ze(e,1),da.Ze(t,1))),"float32")))}function Qe(e,t){return Object(da.fi)((()=>{const n=Ze(e,t),r=function(e,t){return Object(da.fi)((()=>da.je(da.Sh(da.Tf(da.Ze(e,0),da.Ze(t,1))),"float32")))}(e,t),a=da.Hd(n,r);return da.je(da.yi(da.vf(a,0),da.Oe(n,a),0),"float32")}))}function Je(e,t){return Object(da.fi)((()=>{const n=Ze(e,t),r=function(e,t){return Object(da.fi)((()=>da.je(da.Sh(da.Tf(da.Ze(e,1),da.Ze(t,0))),"float32")))}(e,t),a=da.Hd(n,r);return da.je(da.yi(da.vf(a,0),da.Oe(n,a),0),"float32")}))}function et(e,t){return Ge(e,t)}function tt(e,t){return e.rank===t.rank&&(e=da.Mh(e,[e.rank-1])),(t=da.Ld(t,-1)).dtype!==e.dtype&&(t=da.je(t,e.dtype)),da.je(da.Ze(e,t),"float32")}function nt(e){if("string"==typeof e&&e in xs)return xs[e];if("string"!=typeof e&&null!=e)return e;throw new ma(`Unknown metric ${e}`)}function rt(e){if(i(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(bs))if(bs[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(xs))if(xs[n]===e){t=n;break}return void 0!==t?t:e.name}}function at(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!st(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>vs&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function st(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!st(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!st(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function it(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),ot(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?ut(o[e],n,r):ct(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=Te(null!=e.collectedTrainableWeights?e.collectedTrainableWeights:e.trainableWeights);return t}(e),c=Te(e.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(t))}function ot(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function ut(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}ot([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function ct(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){s.push(`${t.inboundLayers[e].name}[${t.nodeIndices[e]}][${t.tensorIndices[e]}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];ot([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)ot(["","","",s[e]],t,r)}function lt(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function dt(e,t){if(null===e)return null;if("string"==typeof e)return d(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];lt(t,a,r)?n.push(r):n.push(dt(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=d(n);t[e]=dt(r,e)}}return t}}function ht(e,t){if(null==e)return null;if("string"==typeof e)return l(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];lt(t,a,r)?n.push(r):n.push(ht(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],a=l(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?ht(r,n):r}return t}}function pt(){return pt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},pt.apply(this,arguments)}function ft(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=o.join(",")+"|"+t.names().join(",");let h,p;if(null==ks[d]){const e=function(e,t){da.si.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=bt(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=bt(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:mt(r)}}(i,t);h=e.sorted,p=e.recipientCounts,ks[d]=h,Is[d]=p}h=ks[d],p={},a||pt(p,Is[d]);const f=new Os(t);for(let e=0;e<h.length;++e){if(null!=r){const e=Object(da.gg)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=h[e],i=s.sourceLayer;if(i instanceof us)continue;const l=[],d=[],m=[];let b=!1;for(const e of s.inputs){const n=f.getValue(e),r=f.getMask(e);l.push(n),d.push(r),null!=r&&(b=!0),a||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||m.push(n))}b&&((n=n||{}).mask=d[0]);const g=c(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,d));const x=gt(s),v=Array.isArray(x)?x:[x];for(let e=0;e<v.length;++e){f.hasKey(v[e])||f.add(v[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(v[e].name);-1!==t&&(u[t]=g[e])}a||Object(da.Me)(m)}return f.disposeMasks(),s?u:u[0]}function mt(e){const t={};for(const n in e)t[n]=e[n].size;return t}function bt(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function gt(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function yt(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((()=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{n.push(t in e?e[t]:null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function xt(e,t){return yt(e,t,"classWeight")}async function vt(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Object(da.fi)((()=>{if(1===e.shape.length)return Object(da.me)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return Object(da.Ld)(e,t)}if(1===e.shape[1])return Object(da.Zg)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Object(da.Me)(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Object(da.Xh)(a,"float32")}return null}function wt(e,t){return Object(da.og)(e,t)}function Ot(e,t){let n,r;n=t.xs,r=t.ys,da.si.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=kt("input",e.inputNames,n),s=kt("output",e.outputNames,r),i=a[0].shape[0];da.si.assert(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),da.si.assert(s.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)da.si.assert(a[t].shape[0]===i,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));for(let t=0;t<s.length;t++)da.si.assert(s[t].shape[0]===i,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${s[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));return{xs:a,ys:s}}function kt(e,t,n){if(n instanceof da.sd)return[n];if(Array.isArray(n))return da.si.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new ma(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function It(e,t,n){const r=null!=n.batchesPerEpoch;if(da.si.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),da.si.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),da.si.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),da.si.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),da.si.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(St(n.validationData))da.si.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new ba("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const d=Fe(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=_e(d,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,l);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,b=await t.iterator();for(;m<n.epochs;){const l={};await p.onEpochBegin(m);let d=0,h=0;for(r||(b=await t.iterator());!r||d<n.batchesPerEpoch;){const t=await b.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=Ot(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=xt(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await vt(a[e],null,t[e]))}const c=r.concat(a).concat(i),l=o(c);da.Me(c);for(let e=0;e<u.length;++e){const t=l[e];s[u[e]]=t,da.Gf(t)}await p.onBatchEnd(h,s),De(s),h++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(a){let t;t=St(n.validationData)?c(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):c(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,l),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function St(e){return"function"==typeof e.iterator}function jt(e){da.si.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Nt(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>U(e,t,n-t))):U(e,t,n-t)}function Tt(e,t){return da.fi((()=>null==e?null:Array.isArray(e)?e.map((e=>Tt(e,t))):Q(e,"int32"===t.dtype?t:da.je(t,"int32"))))}function Ct(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function Et(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,c,l,d,h;e.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;jt(p);const f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,p);a=m[0],s=m[1],h=m[2];let b,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ba("validationData including sample weights is not supported yet."):new ma(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],c=r.validationData[1];const t=!0,n=await e.standardizeUserData(u,c,null,null,t,p);l=n[0],d=n[1],b=l.concat(d)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];l=Nt(a,e,t),i=a,a=Nt(a,0,e),d=Nt(s,e,t),o=s,s=Nt(s,0,e),b=l.concat(d)}else null!=r.validationSteps&&(g=!0);const y=a.concat(s).concat(h);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let w,O;g?(e.makeTestFunction(),w=e.testFunction,O=v.slice().concat(v.map((e=>"val_"+e)))):(w=null,b=[],O=v.slice());const k=Fe(r.callbacks,r.yieldEvery),I=await async function(e,t,n,r,a,s,i,o,u,c,l,d,h,p,f){null==a&&(a=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let m=!1;if(null!=u&&null!=c&&(m=!0),null!=f&&(m=!0,null==p))throw new ma("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const b=e.checkNumSamples(n,a,p,"steps_per_epoch");let g;null!=b&&(g=B(0,b)),null==i&&(i=1);const{callbackList:y,history:x}=_e(o,i,s,h,b,p,a,m,d);y.setModel(e),e.history=x,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=h;i<s;++i){await y.onEpochBegin(i);const s={};if(null!=p)throw new ba("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new ba("batch shuffling is not implemneted yet");l&&da.si.shuffle(g);const i=Object(da.Xh)(g),o=Ct(b,a);for(let l=0;l<o.length;++l){const d={};if(await y.onBatchBegin(l,d),da.fi((()=>{const h=o[l][0],p=o[l][1],f=U(i,h,p-h);d.batch=l,d.size=p-h;const b=Tt(n,f),g=t(b);for(let e=0;e<r.length;++e){const t=g[e];d[r[e]]=t,da.Gf(t)}if(l===o.length-1&&m){const t=e.testLoop(u,c,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];da.Gf(a),s["val_"+n]=a}}})),await y.onBatchEnd(l,d),De(d),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,s),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,x,y,v,p,r.epochs,r.verbose,k,w,b,r.shuffle,O,r.initialEpoch,null,null);return I}finally{e.isTraining=!1,$t(a,t),$t(s,n),$t(i,t),$t(o,n),$t(l,u),$t(d,c),null!=h&&da.Me(h)}}function At(e){const t=[];e instanceof da.sd&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(W(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function $t(e,t){if(null==e)return;const n=[];if(t instanceof da.sd)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){n.push(t[e].id)}const r=[];if(e instanceof da.sd)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Rt(e){return Array.isArray(e)}function Dt(e){return!function(e){return e instanceof da.sd}(e)&&!Rt(e)}function Ft(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Rt(e)&&e.length>0)t=!0;else if(Dt(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ma(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((()=>null));let s;if(Dt(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new ma(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Rt(e)){if((e=e).length!==t.length)throw new ma(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new ma(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=At(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new ma(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new ma(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function _t(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new ma(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new ma(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new ma(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new ma(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}async function Mt(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=Me(dt(n),t);if(null!=e.weightsManifest){const t=await da.Bf.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Object(da.Me)(t)}return r}async function zt(e,t){if(null==t&&(t={}),"string"==typeof e){const n=da.Bf.getLoadHandlers(e,t);if(0===n.length)n.push(da.Bf.browserHTTPRequest(e,t));else if(n.length>1)throw new ma(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new ma("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Me(dt(a),t,i),u=r.trainingConfig;null!=u&&o.loadTrainingConfig(u);null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata);if(null!=r.weightData){if(null==r.weightSpecs)throw new ma("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=da.Bf.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Object(da.Me)(e),Object(da.Me)(t.map((e=>e.tensor)))}return o}(e,void 0,t)}function Lt(e){return new js(e)}function Pt(e){return new Ts(e)}function Bt(e,t){return null==t&&(t={}),zt(e,t)}function Vt(e){return $e(e)}function Wt(e,t){ms.registerCallbackConstructor(e,t)}function Ut(e){return e.getClassName()}function Gt(e,t={}){return f(e,da.nh.SerializationMap.getMap().classNameMap,t,"activation")}function qt(e){if(null==e){const e={className:"linear",config:{}};return Gt(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},Gt(t)}return e instanceof Cs?e:Gt(e)}function Ht(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}function Yt(e){return h(e)}function Kt(e,t={}){return f(e,da.nh.SerializationMap.getMap().classNameMap,t,"regularizer")}function Xt(e){if(null==e)return null;if("string"==typeof e){return Kt({className:e in qs?qs[e]:e,config:{}})}return e instanceof Us?e:Kt(e)}function Zt(){return Zt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Zt.apply(this,arguments)}function Qt(e,t,n){if("number"==typeof e)return s(e,t);if(e.length!==t)throw new ma(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new ma(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function Jt(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function en(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+P([n-t,0]);else{if("same"!==r)throw new ma(`Unsupport padding mode: ${r}.`);e*=t}return e}function tn(){return tn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},tn.apply(this,arguments)}function nn(e,t){return Object(da.fi)((()=>(A(t),"channelsFirst"===t?da.ki(e,[0,2,3,1]):e)))}function rn(e,t){return Object(da.fi)((()=>(A(t),"channelsFirst"===t?da.ki(e,[0,2,3,4,1]):e)))}function an(e,t,n,r=1,a="valid",s,i=1){return Object(da.fi)((()=>{if(null==s&&(s="channelsLast"),A(s),3!==e.shape.length)throw new ma(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ma(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ma(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=da.ki(e,[0,2,1])),"causal"===a)throw new ba("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=da.te(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=te(o,n)),o}))}function sn(e,t,n,r=[1,1],a="valid",s,i,o=null){return Object(da.fi)((()=>{if(null==s&&(s="channelsLast"),A(s),3!==e.rank&&4!==e.rank)throw new ma(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ma(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=nn(e,s);if("causal"===a)throw new ba("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=da.lf.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=da.ki(u,[0,3,1,2])),u}))}function on(e,t,n,r=[1,1,1],a="valid",s,i){return Object(da.fi)((()=>{if(null==s&&(s="channelsLast"),A(s),4!==e.rank&&5!==e.rank)throw new ma(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ma(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=rn(e,s);if("causal"===a)throw new ba("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=da.we(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=te(o,n)),"channelsFirst"===s&&(o=da.ki(o,[0,4,1,2,3])),o}))}function un(){return un=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},un.apply(this,arguments)}function cn(e,t,n,r){function a(e){return null==e||Array.isArray(e)?e:[e]}if(Array.isArray(e)){if(null!=t||null!=n)throw new ma("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function ln(e,t,n,r=!1,a,s,i=!1,o=!1){return da.fi((()=>{const u=t.shape.length;if(u<3)throw new ma(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(B(2,u));if(t=da.ki(t,c),null!=s)throw new ba("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=da.je(da.je(a,"bool"),"float32")).rank===u-1&&(a=da.cf(a,-1)),a=da.ki(a,c)),r&&(t=da.ah(t,0),null!=a&&(a=da.ah(a,0)));const l=[];let d,h=n;const p=t.shape[0],f=da.qi(t);let m,b;null!=a&&(m=da.qi(a));for(let t=0;t<p;++t){const n=f[t],r=da.fi((()=>e(n,h)));if(null==a)d=r[0],h=r[1];else{const e=da.fi((()=>{const e=m[t],n=da.Rh(da.xg(e),e);return{output:da.Hd(da.og(r[0],e),da.og(h[0],n)),newStates:h.map(((t,a)=>da.Hd(da.og(r[1][a],e),da.og(t,n))))}}));d=e.output,h=e.newStates}o&&l.push(d)}if(o){b=da.Nh(l,1)}return[d,b,h]}))}function dn(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):ne(t(),n),o=()=>re(i,t,r);if(!a||a<=1)return da.Gf(o().clone());return Array(a).fill(void 0).map(o).map((e=>da.Gf(e.clone())))}function hn(){return hn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},hn.apply(this,arguments)}function pn(){return pn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},pn.apply(this,arguments)}function fn(){return fn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},fn.apply(this,arguments)}function mn(){return mn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},mn.apply(this,arguments)}function bn(e,t){for(;e<0;)e+=t;return e}function gn(){return gn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},gn.apply(this,arguments)}function yn(){return yn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},yn.apply(this,arguments)}function xn(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=da.Yd(e,t,n,r,a,s);else if(3===e.rank)i=da.Zd(e,t,n,r,a,s);else{if(4!==e.rank)throw new ba(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=da.ae(e,t,n,r,a,s)}return i}function vn(e,t,n,r,a=.001){return da.si.arraysEqual(r.slice().sort(),B(0,e.rank-1))?function(e,t,n,r,a=.001){return Object(da.fi)((()=>{const s=da.mg(e,r),i=s.mean,o=s.variance;return[xn(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return Object(da.fi)((()=>{const s=da.mg(e,r),i=s.mean,o=s.variance,u=[];for(const t of B(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=Object(da.Zg)(i,u),l=Object(da.Zg)(o,u),d=null==t?null:Object(da.Zg)(t,u),h=null==n?null:Object(da.Zg)(n,u);return[xn(e,c,l,h,d,a),i,o]}))}(e,t,n,r,a)}function wn(){return wn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},wn.apply(this,arguments)}function On(){return On=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},On.apply(this,arguments)}function kn(e,t,n,r,a,s){return Object(da.fi)((()=>{let i;A(a),R(s),$(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=nn(e,a);const o="same"===r?"same":"valid";return i="max"===s?da.bg(e,t,n,o):da.Sd(e,t,n,o),"channelsFirst"===a&&(i=da.ki(i,[0,3,1,2])),i}))}function In(e,t,n,r,a,s){return Object(da.fi)((()=>{let i;A(a),R(s),$(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=rn(e,a);const o="same"===r?"same":"valid";return i="max"===s?da.cg(e,t,n,o):da.Td(e,t,n,o),"channelsFirst"===a&&(i=da.ki(i,[0,4,1,2,3])),i}))}function Sn(){return Sn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Sn.apply(this,arguments)}function jn(e){return new us(e)}function Nn(e){return new Xs(e)}function Tn(e){return new Hs(e)}function Cn(e){return new Ys(e)}function En(e){return new Ks(e)}function An(e){return new Qs(e)}function $n(e){return new Zs(e)}function Rn(e){return new oi(e)}function Dn(e){return new ti(e)}function Fn(e){return new ri(e)}function _n(e){return new ni(e)}function Mn(e){return new ai(e)}function zn(e){return new ii(e)}function Ln(e){return new ui(e)}function Pn(e){return new ci(e)}function Bn(e){return new li(e)}function Vn(e){return new Ti(e)}function Wn(e){return new ji(e)}function Un(e){return new Ii(e)}function Gn(e){return new Si(e)}function qn(e){return new Ni(e)}function Hn(e){return new Ci(e)}function Yn(e){return new Ei(e)}function Kn(e){return new Ai(e)}function Xn(e){return new Ri(e)}function Zn(e){return new Fi(e)}function Qn(e){return new Mi(e)}function Jn(e){return new Pi(e)}function er(e){return new zi(e)}function tr(e){return new Li(e)}function nr(e){return new _i(e)}function rr(e){return new Bi(e)}function ar(e){return new Gi(e)}function sr(e){return new qi(e)}function ir(e){return new Hi(e)}function or(e){return new Xi(e)}function ur(e){return or(e)}function cr(e){return or(e)}function lr(e){return new Ji(e)}function dr(e){return lr(e)}function hr(e){return lr(e)}function pr(e){return new no(e)}function fr(e){return pr(e)}function mr(e){return pr(e)}function br(e){return new ao(e)}function gr(e){return new oo(e)}function yr(e){return new so(e)}function xr(e){return new uo(e)}function vr(e){return new Ki(e)}function wr(e){return new Qi(e)}function Or(e){return new to(e)}function kr(e){return new bi(e)}function Ir(e){return new mi(e)}function Sr(e){return new yi(e)}function jr(e){return new gi(e)}function Nr(e){return new fi(e)}function Tr(e){return new pi(e)}function Cr(e){return new ki(e)}function Er(e){return new Oi(e)}function Ar(e){return new di(e)}function $r(e){return new xi(e)}function Rr(e){return new ho(e)}function Dr(e){return new lo(e)}function Fr(e){return new Vi(e)}function _r(e){return new Wi(e)}function Mr(e){return new Ui(e)}function zr(e){return new $i(e)}function Lr(e,t){return Ke(e,t)}function Pr(e,t){return et(e,t)}function Br(e,t){return tt(e,t)}function Vr(e,t){return Xe(e,t)}function Wr(e,t){return gs(e,t)}function Ur(e,t){return Qe(e,t)}function Gr(e,t){return Je(e,t)}function qr(e,t){return He(e,t)}function Hr(e,t){return Pe(e,t)}function Yr(e,t){return Be(e,t)}function Kr(e,t){return Be(e,t)}function Xr(e,t){return Be(e,t)}function Zr(e,t){return Le(e,t)}function Qr(e,t){return Le(e,t)}function Jr(e,t){return Le(e,t)}function ea(e){return new Gs(e)}function ta(e){return Ht(t=e),new Gs({l1:null!=t?t.l1:null,l2:0});var t}function na(e){return Ht(t=e),new Gs({l2:null!=t?t.l2:null,l1:0});var t}function ra(e,t){return e<t}function aa(e,t){return e>t}n.d(t,"b",(function(){return ds})),n.d(t,"c",(function(){return fs})),n.d(t,"e",(function(){return ps})),n.d(t,"a",(function(){return go})),n.d(t,"l",(function(){return xo})),n.d(t,"d",(function(){return yo})),n.d(t,"f",(function(){return ns})),n.d(t,"k",(function(){return rs})),n.d(t,"h",(function(){return js})),n.d(t,"o",(function(){return Vt})),n.d(t,"q",(function(){return Bt})),n.d(t,"s",(function(){return Lt})),n.d(t,"u",(function(){return Wt})),n.d(t,"w",(function(){return Pt})),n.d(t,"i",(function(){return di})),n.d(t,"j",(function(){return Ts})),n.d(t,"g",(function(){return ts})),n.d(t,"x",(function(){return ws})),n.d(t,"m",(function(){return sa})),n.d(t,"n",(function(){return ia})),n.d(t,"p",(function(){return oa})),n.d(t,"r",(function(){return ua})),n.d(t,"t",(function(){return ca})),n.d(t,"v",(function(){return la}));var sa={};n.r(sa),n.d(sa,"maxNorm",(function(){return N})),n.d(sa,"unitNorm",(function(){return T})),n.d(sa,"nonNeg",(function(){return C})),n.d(sa,"minMaxNorm",(function(){return E}));var ia={};n.r(ia),n.d(ia,"zeros",(function(){return oe})),n.d(ia,"ones",(function(){return ue})),n.d(ia,"constant",(function(){return ce})),n.d(ia,"randomUniform",(function(){return le})),n.d(ia,"randomNormal",(function(){return de})),n.d(ia,"truncatedNormal",(function(){return he})),n.d(ia,"identity",(function(){return pe})),n.d(ia,"varianceScaling",(function(){return fe})),n.d(ia,"glorotUniform",(function(){return me})),n.d(ia,"glorotNormal",(function(){return be})),n.d(ia,"heNormal",(function(){return ge})),n.d(ia,"heUniform",(function(){return ye})),n.d(ia,"leCunNormal",(function(){return xe})),n.d(ia,"leCunUniform",(function(){return ve})),n.d(ia,"orthogonal",(function(){return we}));var oa={};n.r(oa),n.d(oa,"inputLayer",(function(){return jn})),n.d(oa,"elu",(function(){return Nn})),n.d(oa,"reLU",(function(){return Tn})),n.d(oa,"leakyReLU",(function(){return Cn})),n.d(oa,"prelu",(function(){return En})),n.d(oa,"softmax",(function(){return An})),n.d(oa,"thresholdedReLU",(function(){return $n})),n.d(oa,"conv1d",(function(){return Rn})),n.d(oa,"conv2d",(function(){return Dn})),n.d(oa,"conv2dTranspose",(function(){return Fn})),n.d(oa,"conv3d",(function(){return _n})),n.d(oa,"conv3dTranspose",(function(){return Mn})),n.d(oa,"separableConv2d",(function(){return zn})),n.d(oa,"cropping2D",(function(){return Ln})),n.d(oa,"upSampling2d",(function(){return Pn})),n.d(oa,"depthwiseConv2d",(function(){return Bn})),n.d(oa,"activation",(function(){return Vn})),n.d(oa,"dense",(function(){return Wn})),n.d(oa,"dropout",(function(){return Un})),n.d(oa,"spatialDropout1d",(function(){return Gn})),n.d(oa,"flatten",(function(){return qn})),n.d(oa,"repeatVector",(function(){return Hn})),n.d(oa,"reshape",(function(){return Yn})),n.d(oa,"permute",(function(){return Kn})),n.d(oa,"embedding",(function(){return Xn})),n.d(oa,"add",(function(){return Zn})),n.d(oa,"average",(function(){return Qn})),n.d(oa,"concatenate",(function(){return Jn})),n.d(oa,"maximum",(function(){return er})),n.d(oa,"minimum",(function(){return tr})),n.d(oa,"multiply",(function(){return nr})),n.d(oa,"dot",(function(){return rr})),n.d(oa,"batchNormalization",(function(){return ar})),n.d(oa,"layerNormalization",(function(){return sr})),n.d(oa,"zeroPadding2d",(function(){return ir})),n.d(oa,"averagePooling1d",(function(){return or})),n.d(oa,"avgPool1d",(function(){return ur})),n.d(oa,"avgPooling1d",(function(){return cr})),n.d(oa,"averagePooling2d",(function(){return lr})),n.d(oa,"avgPool2d",(function(){return dr})),n.d(oa,"avgPooling2d",(function(){return hr})),n.d(oa,"averagePooling3d",(function(){return pr})),n.d(oa,"avgPool3d",(function(){return fr})),n.d(oa,"avgPooling3d",(function(){return mr})),n.d(oa,"globalAveragePooling1d",(function(){return br})),n.d(oa,"globalAveragePooling2d",(function(){return gr})),n.d(oa,"globalMaxPooling1d",(function(){return yr})),n.d(oa,"globalMaxPooling2d",(function(){return xr})),n.d(oa,"maxPooling1d",(function(){return vr})),n.d(oa,"maxPooling2d",(function(){return wr})),n.d(oa,"maxPooling3d",(function(){return Or})),n.d(oa,"gru",(function(){return kr})),n.d(oa,"gruCell",(function(){return Ir})),n.d(oa,"lstm",(function(){return Sr})),n.d(oa,"lstmCell",(function(){return jr})),n.d(oa,"simpleRNN",(function(){return Nr})),n.d(oa,"simpleRNNCell",(function(){return Tr})),n.d(oa,"convLstm2d",(function(){return Cr})),n.d(oa,"convLstm2dCell",(function(){return Er})),n.d(oa,"rnn",(function(){return Ar})),n.d(oa,"stackedRNNCells",(function(){return $r})),n.d(oa,"bidirectional",(function(){return Rr})),n.d(oa,"timeDistributed",(function(){return Dr})),n.d(oa,"globalMaxPool1d",(function(){return po})),n.d(oa,"globalMaxPool2d",(function(){return fo})),n.d(oa,"maxPool1d",(function(){return mo})),n.d(oa,"maxPool2d",(function(){return bo})),n.d(oa,"Layer",(function(){return os})),n.d(oa,"RNN",(function(){return di})),n.d(oa,"RNNCell",(function(){return hi})),n.d(oa,"input",(function(){return Vt})),n.d(oa,"gaussianNoise",(function(){return Fr})),n.d(oa,"gaussianDropout",(function(){return _r})),n.d(oa,"alphaDropout",(function(){return Mr})),n.d(oa,"masking",(function(){return zr}));var ua={};n.r(ua),n.d(ua,"binaryAccuracy",(function(){return Lr})),n.d(ua,"binaryCrossentropy",(function(){return Pr})),n.d(ua,"sparseCategoricalAccuracy",(function(){return Br})),n.d(ua,"categoricalAccuracy",(function(){return Vr})),n.d(ua,"categoricalCrossentropy",(function(){return Wr})),n.d(ua,"precision",(function(){return Ur})),n.d(ua,"recall",(function(){return Gr})),n.d(ua,"cosineProximity",(function(){return qr})),n.d(ua,"meanAbsoluteError",(function(){return Hr})),n.d(ua,"meanAbsolutePercentageError",(function(){return Yr})),n.d(ua,"MAPE",(function(){return Kr})),n.d(ua,"mape",(function(){return Xr})),n.d(ua,"meanSquaredError",(function(){return Zr})),n.d(ua,"MSE",(function(){return Qr})),n.d(ua,"mse",(function(){return Jr}));var ca={};n.r(ca),n.d(ca,"modelFromJSON",(function(){return Mt}));var la={};n.r(la),n.d(la,"l1l2",(function(){return ea})),n.d(la,"l1",(function(){return ta})),n.d(la,"l2",(function(){return na}));var da=n("HIu9");n("n7g5");let ha;class pa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pa.prototype)}}class fa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fa.prototype)}}class ma extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ma.prototype)}}class ba extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ba.prototype)}}class ga extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ga.prototype)}}Error;let ya={};class xa extends da.nh.Serializable{getConfig(){return{}}}class va extends xa{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(da.fi)((()=>{const t=k(e,this.axis),n=da.le(t,0,this.maxValue);return da.og(e,da.Oe(n,da.Hd(r(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}va.className="MaxNorm",da.nh.registerClass(va);class wa extends xa{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(da.fi)((()=>da.Oe(e,da.Hd(r(),k(e,this.axis)))))}getConfig(){return{axis:this.axis}}}wa.className="UnitNorm",da.nh.registerClass(wa);class Oa extends xa{apply(e){return da.Wg(e)}}Oa.className="NonNeg",da.nh.registerClass(Oa);class ka extends xa{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(da.fi)((()=>{const t=k(e,this.axis),n=da.Hd(da.og(this.rate,da.le(t,this.minValue,this.maxValue)),da.og(1-this.rate,t));return da.og(e,da.Oe(n,da.Hd(r(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ka.className="MinMaxNorm",da.nh.registerClass(ka);const Ia={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"},Sa=["channelsFirst","channelsLast"],ja=["nearest","bilinear"],Na=["valid","same","causal"],Ta=["max","avg"],Ca=["sum","mul","concat","ave"],Ea=new Map,Aa=[],$a=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);const Ra=["fanIn","fanOut","fanAvg"],Da=["normal","uniform","truncatedNormal"];class Fa extends da.nh.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class _a extends Fa{apply(e,t){return Object(da.Ai)(e,t)}}_a.className="Zeros",da.nh.registerClass(_a);class Ma extends Fa{apply(e,t){return Object(da.wg)(e,t)}}Ma.className="Ones",da.nh.registerClass(Ma);class za extends Fa{constructor(e){if(super(),"object"!=typeof e)throw new ma(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ma(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Object(da.fi)((()=>Object(da.og)(Object(da.ih)(this.value),Object(da.wg)(e,t))))}getConfig(){return{value:this.value}}}za.className="Constant",da.nh.registerClass(za);class La extends Fa{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Object(da.Og)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}La.className="RandomUniform",da.nh.registerClass(La);class Pa extends Fa{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ba(`randomNormal does not support dType ${t}.`);return X(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Pa.className="RandomNormal",da.nh.registerClass(Pa);class Ba extends Fa{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ba(`truncatedNormal does not support dType ${t}.`);return Object(da.li)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ba.className="TruncatedNormal",da.nh.registerClass(Ba);class Va extends Fa{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Object(da.fi)((()=>{if(2!==e.length||e[0]!==e[1])throw new ma("Identity matrix initializer can only be used for 2D square matrices.");return Object(da.og)(this.gain,Object(da.ef)(e[0]))}))}getConfig(){return{gain:this.gain}}}Va.className="Identity",da.nh.registerClass(Va);class Wa extends Fa{constructor(e){if(super(),e.scale<0)throw new ma(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,y(Ra,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){y(Da,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(A(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=z(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=z(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=z(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if(s/="fanIn"===this.mode?Math.max(1,r):"fanOut"===this.mode?Math.max(1,a):Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ba(`${this.getClassName()} does not support dType ${t}.`);return Object(da.li)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Object(da.Og)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Wa.className="VarianceScaling",da.nh.registerClass(Wa);class Ua extends Wa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}Ua.className="GlorotUniform",da.nh.registerClass(Ua);class Ga extends Wa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}Ga.className="GlorotNormal",da.nh.registerClass(Ga);class qa extends Wa{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}qa.className="HeNormal",da.nh.registerClass(qa);class Ha extends Wa{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}Ha.className="HeUniform",da.nh.registerClass(Ha);class Ya extends Wa{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}Ya.className="LeCunNormal",da.nh.registerClass(Ya);class Ka extends Wa{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}Ka.className="LeCunNormal",da.nh.registerClass(Ka);class Xa extends Fa{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ba("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Object(da.fi)((()=>{if(e.length<2)throw new ba("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=X(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=da.Lf.gramSchmidt(t);return e[0]>e[1]&&(n=Object(da.ki)(n)),Object(da.og)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Xa.className="Orthogonal",da.nh.registerClass(Xa);const Za={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};let Qa=0;const Ja={},es="Variable";class ts{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Oe(),this.originalName=F(n=null==n?es:n),this.name=_(this.originalName),this.trainable_=r,this.constraint=a,this.val=da.vi(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}class ns{constructor(e){this.dtype=e.dtype,this.shape=e.shape,this.ndim=null!=e.shape?e.shape.length:e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class rs{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Oe(),null!=s&&(this.originalName=F(s),this.name=_(this.originalName)),this.rank=t.length}}let as=0;class ss{constructor(e,t){this.callArgs=t,this.id=as++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)e.push(null!=t?t.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let is=0;class os extends da.nh.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=is++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=l(e)+"_"+ke(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}this.initialWeights=null!=e.weights?e.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new fa(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ma(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return u(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return u(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new pa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new pa(`Layer ${this.name} is not connected, no input to return.`);return u(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new pa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new pa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return u(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=c(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=c(this.inputSpec);if(e.length!==t.length)throw new ma(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new ma(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new ma(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new ma(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new ma(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new ma(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new ma(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=c(e);let r=!0;for(const e of n)if(!(e instanceof rs)){r=!1;break}let a=!0;for(const e of n)if(e instanceof rs){a=!1;break}if(r===a)throw new ma("Arguments to apply() must be all SymbolicTensors or all Tensors");return D(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of c(e))t.push(n.shape);this.build(u(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=c(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=u(s),null!=this.activityRegularizer)throw new ba("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=c(e);const t=[];for(const n of e)t.push(n.shape);return u(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new rs(s,n,this,c(e),t,this.name,r))):new rs(s,r,this,c(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new ba("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new pa(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new pa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new fa(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Te(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ce(e?this.trainableWeights:this.weights)}setWeights(e){Object(da.fi)((()=>{const t=this.weights;if(t.length!==e.length)throw new ma(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Ce(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!da.si.arraysEqual(s.shape,o.shape))throw new ma(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Ee(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ma(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():ie("zeros"));const u=r.apply(t,n),c=new ts(u,n,e,s,i);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(c.read()))),null==s&&(s=!0),s?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=c(e),null!=this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=c(e);t=c(t),n=c(n),r=c(r),a=Se(a),s=Se(s);const u=[],l=[],d=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),d.push(e.tensorIndex);new ss({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class us extends os{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:ke("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ma("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ma("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ma("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new rs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new ss({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ma(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}var cs;us.className="InputLayer",da.nh.registerClass(us),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(cs||(cs={}));class ls{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class ds{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class hs extends ls{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=Object(da.fi)((()=>Object(da.Hd)(this.totals[e],Object(da.og)(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Object(da.fi)((()=>{const n=Object(da.og)(Object(da.Oe)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Object(da.Gf)(t[e])})))}}class ps extends ls{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){e.push(a[s].data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class fs extends ls{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||da.sg,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");da.si.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():da.si.now();return(...s)=>{const i=null!=n?n():da.si.now();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Re(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Re(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Re(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Re(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Re(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):da.si.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Re(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Re(e),await this.trainEnd(e))}}class ms{constructor(){}static registerCallbackConstructor(e,t){da.si.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),ms.checkForDuplicate(t),null==ms.constructors[e]&&(ms.constructors[e]=[]),ms.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ms.constructors){ms.constructors[+t].forEach((t=>{if(t===e)throw new ma("Duplicate callback constructor.")}))}}static clear(){ms.constructors={}}static createCallbacks(e){const t=[];for(const n in ms.constructors){const r=+n;e>=r&&t.push(...ms.constructors[r])}return t.map((e=>new e))}}ms.constructors={};const bs={meanSquaredError:Le,meanAbsoluteError:Pe,meanAbsolutePercentageError:Be,meanSquaredLogarithmicError:Ve,squaredHinge:function(e,t){return Object(da.fi)((()=>{const n=da.eg(0,da.Rh(1,da.og(e,t)));return da.fg(J(n),-1)}))},hinge:function(e,t){return Object(da.fi)((()=>{const n=da.eg(0,da.Rh(1,da.og(e,t)));return da.fg(n,-1)}))},categoricalHinge:function(e,t){return Object(da.fi)((()=>{const n=da.Sh(da.og(e,t),-1),r=da.ag(da.og(da.Rh(1,e),t),-1);return da.eg(0,da.Hd(1,da.Rh(r,n)))}))},logcosh:function(e,t){return Object(da.fi)((()=>{const n=Math.log(2),r=da.Rh(t,e),a=da.Rh(da.Hd(r,da.Dh(da.og(-2,r))),n);return da.fg(a,-1)}))},categoricalCrossentropy:We,sparseCategoricalCrossentropy:Ue,binaryCrossentropy:Ge,kullbackLeiblerDivergence:qe,poisson:function(e,t){return Object(da.fi)((()=>{const n=da.Of(da.Hd(r(),t));return da.fg(da.Rh(t,da.og(e,n)),-1)}))},cosineProximity:He},gs=We,ys=Ue,xs={binaryAccuracy:Ke,categoricalAccuracy:Xe,precision:Qe,categoricalCrossentropy:gs,sparseCategoricalCrossentropy:ys,mse:Le,MSE:Le,mae:Pe,MAE:Pe,mape:Be,MAPE:Be,cosine:He},vs=1048576,ws="3.13.0";class Os{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Os)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ma(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Object(da.je)(t,e.dtype)}catch(n){throw new ma(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof rs){if(null==this.id2Value[e.id])throw new ma(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ma(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof rs){if(null==this.id2Value[e.id])throw new ma(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ma(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Object(da.Me)(this.id2Mask)}}const ks={},Is={};class Ss extends os{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=ke(e)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(e.inputs)?e.inputs.slice():[e.inputs],this.outputs=Array.isArray(e.outputs)?e.outputs.slice():[e.outputs],b(this.inputs).length!==this.inputs.length)throw new ma(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);b(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.nodeIndex,n=e.tensorIndex;this.outputLayers.push(e.sourceLayer),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;i(0===n,"input layer has >1 nodes"),i(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof us))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},o=[],u=(e,t,n,r,a,i)=>{null!=r&&null!=a&&null!=i||(r=e.sourceLayer,a=e.nodeIndex,i=e.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new fa(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(c))return;this.containerNodes.add(Ss.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let e=0;e<l;e++){u(c.inputTensors[e],t,n,c.inboundLayers[e],c.nodeIndices[e],c.tensorIndices[e])}for(t.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);o.push(c)},c=[],l=[];for(const e of this.outputs)u(e,c,l);const d=o.slice().reverse();for(const e of d){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];s=Math.max(s,null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id]),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r].inboundNodes[e.nodeIndices[r]];t[a.id]=Math.max(s+1,null==t[a.id]?0:t[a.id]),n[a.id]=a}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let f=Object.keys(p).map((e=>parseInt(e,10))).sort(m);this.layers=[];for(const e of f){const t=p[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Ss&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,f=Object.keys(h).map((e=>parseInt(e,10))).sort(m);const g=this.inputs.slice(),y=[];for(const e of f)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===g.indexOf(n))throw new fa(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${y}`);for(const e of t.outputTensors)g.push(e);y.push(e.name)}}this.nodesByDepth=h;const x=this.layers.map((e=>e.name));for(const e of x){const t=x.filter((t=>t===e)).length;if(1!==t)throw new fa(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new ss({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((()=>null)),outputMasks:this.outputs.map((()=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ma("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new ma(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new ma(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ma(`${e.length} of ${r} weights are not set: ${e}`)}Ee(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${ws}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=ht(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Object(da.fi)((()=>{e=c(e);const n=new Os;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return ft(this.outputs,n,t)}))}computeMask(e,t){return Object(da.fi)((()=>{let n;return e=c(e),n=null==t?s(null,e.length):c(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Se(e);if(t.length!==this.inputLayers.length)throw new ma(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){n[this.inputLayers[e].name+"_0_0"]=t[e]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(m);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){r.push(n[`${e.inboundLayers[t].name}_${e.nodeIndices[t]}_${e.tensorIndices[t]}`])}const a=Se(t.computeOutputShape(u(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){s.push(`${this.outputLayers[e].name}_${this.outputLayersNodeIndices[e]}_${this.outputLayersTensorIndices[e]}`)}for(let e=0;e<s.length;e++){const t=s[e];i(t in n),a.push(n[t])}return u(a)}runInternalGraph(e,t){null==t&&(t=s(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){n[this.inputs[r].id]=[e[r],t[r]]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(m);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=c(t.call(e,l)),u=c(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=c(t.call(r,l)),u=c(t.computeMask(r,i));if(t.activityRegularizer)throw new ba("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){n[a[e].id]=[o[e],u[e]]}}}}const a=[],o=[],u=[];for(const e of this.outputs){i(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];u.push(t.shape),a.push(t),o.push(r)}return[a,o,u]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Ss?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Ss.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ma(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ma("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new ma(`No such layer: ${e}`)}calculateLosses(){return Object(da.fi)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Ss.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Ss.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.tensorIndices[n];let o=t[Ss.nodeKey(a,r.nodeIndices[n])];null==o&&(o=0),e.push([a.name,o,s,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=Ss.nodeKey(n,this.inputLayersNodeIndices[e]);if(!this.containerNodes.has(a))continue;let s=t[a];null==s&&(s=0);r.push([n.name,s,this.inputLayersTensorIndices[e]])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=Ss.nodeKey(n,this.outputLayersNodeIndices[e]);if(!this.containerNodes.has(r))continue;let s=t[r];null==s&&(s=0);a.push([n.name,s,this.outputLayersTensorIndices[e]])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){function a(e,t){e.name in l?l[e.name].push(t):l[e.name]=[t]}function s(e,t){const n=[];let r;for(const s of t){const i=s[0],o=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(i in c))return void a(e,t);const l=c[i];if(l.inboundNodes.length<=o)return void a(e,t);n.push(l.inboundNodes[o].outputTensors[u])}n.length>0&&e.apply(u(n),r)}function o(e){const n=e.name,s=Me(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),c[n]=s;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new ma(`Corrupted configuration, expected array for nodeData: ${e}`);a(s,e)}))}const c={},l={},d=t.name,h=t.layers;for(const e of h)o(e);for(;!g(l);)for(const e of h){const t=c[e.name];if(t.name in l){const e=l[t.name];delete l[t.name];for(const n of e)s(t,n)}}const p=[],f=[],m=t.inputLayers;for(const e of m){const t=e[0],n=e[1],r=e[2];i(t in c);p.push(c[t].inboundNodes[n].outputTensors[r])}const b=t.outputLayers;for(const e of b){const t=e[0],n=e[1],r=e[2];i(t in c);f.push(c[t].inboundNodes[n].outputTensors[r])}return new e({inputs:p,outputs:f,name:d})}get stateful(){if(this._stateful)throw new ma("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Object(da.fi)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}class js extends Ss{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ma("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");it(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>da.ji.adagrad(.01),Adadelta:()=>da.ji.adadelta(1,.95,r()),Adam:()=>da.ji.adam(.001,.9,.999,r()),Adamax:()=>da.ji.adamax(.002,.9,.999,r(),0),RMSProp:()=>da.ji.rmsprop(.001,.9,0,r()),SGD:()=>da.ji.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ma(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof da.oc))throw new ma("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ma(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>Ye(e)))}else{const n=Ye(e.loss);this.outputs.forEach((()=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ma(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Ye(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e];this.feedOutputNames.push(this.outputNames[e]),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],D("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((()=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((()=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};D("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Ge?-1!==["accuracy","acc"].indexOf(i)?r=Ke:-1!==["crossentropy","ce"].indexOf(i)&&(r=et):this.lossFunctions[e]===Ue?-1!==["accuracy","acc"].indexOf(i)?r=tt:-1!==["crossentropy","ce"].indexOf(i)&&(r=ys):-1!==["accuracy","acc"].indexOf(i)?r=Xe:-1!==["crossentropy","ce"].indexOf(i)&&(r=gs),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=nt(i);a=e,n=""+rt(i)}let t;D(n,(()=>{t=a})),s(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;jt(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();return u(this.testLoop(this.testFunction,s,r,n.verbose,n.steps))}finally{$t(a[0],e),$t(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new ba("Verbose mode is not implemented yet.");da.si.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,c=0;for(;!r||c<n.batches;){const t=await i.next();if(s=da.fi((()=>{if(t.value){const{xs:n,ys:r}=Ot(e,t.value),i=n.concat(r),u=da.fi((()=>a(i)));if(da.Me(i),0===c)for(let e=0;e<u.length;++e)s.push(Object(da.ih)(0));const l=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=s[e];s[e]=da.fi((()=>da.Hd(s[e],da.og(l,t)))),c>0&&da.Me(n)}da.Me(u),o+=l,++c}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=da.Oe(s[e],o),da.Me(t)}return u(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new ma(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ma(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ma("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=this.retrieveSymbolicTensors(n?t:[t]),a=new Os;if(e instanceof da.sd&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ma(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new ma(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const s=ft(r,a);return n?s:s[0]}retrieveSymbolicTensors(e){const t=s(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new ma(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return da.fi((()=>{const r=this.checkNumSamples(e);if(n)throw new ba("Verbose predictLoop() is not implemented yet.");const a=Ct(r,t),s=this.outputs.map((()=>[]));for(let t=0;t<a.length;++t){da.fi((()=>{const n=Nt(e,a[t][0],a[t][1]),r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});const s=new Os(r);return ft(this.outputs,s)})).forEach(((e,t)=>s[t].push(e)))}return u(s.map((e=>da.oe(e,0))))}))}predict(e,t={}){const n=At(e);_t(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return jt(r),this.predictLoop(n,r)}finally{$t(n,e)}}predictOnBatch(e){_t(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new fa("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];a.push(this.feedLossFns[e]===Ue?t.slice(0,t.length-1).concat([1]):t)}if(function(e,t){const n=b(e.map((e=>e.shape[0])));n.sort();const r=b(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new ma(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new ma(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!da.si.arraysEqual(n,r))throw new ma(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Ft(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ft(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[Le,Ge,We];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===We&&1===s.shape[s.shape.length-1])throw new ma(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new ma(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new ma(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=xt(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await vt(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return da.fi((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new ba("Verbose mode is not implemented yet.");if(null!=a)throw new ba("steps mode in testLoop() is not implemented yet");{const r=Ct(s,n),a=Object(da.Xh)(B(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=U(a,s,o-s),c=Tt(t,u),l=e(c);if(0===n)for(let e=0;e<l.length;++e)i.push(Object(da.ih)(0));for(let e=0;e<l.length;++e){i[e]=da.Hd(i[e],da.og(o-s,l[e]))}}for(let e=0;e<i.length;++e)i[e]=da.Oe(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(o(e,r)>1){a+=`_${o(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Os(e),o=ft(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=wt(n,a[e]));const s=da.fg(n);t.push(s),u=0===e?n:da.Hd(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][1];n=da.fg((0,this.metricsTensors[e][0])(r[t],o[t]))}da.Gf(n),s.push(n)}return u=da.fg(u),this.calculateLosses().forEach((e=>{u=da.Hd(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>da.fi((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Os(s),o=ft(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=da.fg((0,this.lossFunctions[e])(a[e],o[e]));n=0===e?r:da.Hd(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][1],r=da.fg((0,this.metricsTensors[e][0])(a[n],o[n]));t.push(r)}return t}))}async fit(e,t,n={}){return Et(this,e,t,n)}async fitDataset(e,t){return It(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return da.Me(s),$t(n[0],e),$t(n[1],t),u(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=da.gg().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-da.gg().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=l(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>l(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=l(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[l(rt(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>l(rt(e))));{const e={};for(const t in this.metrics)e[t]=l(rt(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Me(dt(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=d(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>d(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=d(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>d(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=d(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=da.Bf.getSaveHandlers(e);if(0===t.length)throw new ma(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ma(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ma("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await da.Bf.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${ws}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await da.Bf.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=da.Bf.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){at(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){at(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}js.className="Model",da.nh.registerClass(js);class Ns extends js{}Ns.className="Functional",da.nh.registerClass(Ns);class Ts extends js{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:ke("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ma(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Ts||e instanceof js;let n;if(t){if(n=e,1!==n.outputs.length)throw new ma("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ma("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ma("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=$e({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ma(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ma("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ae(this.outputs[0])}this.inboundNodes=[],new ss({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:s(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ne(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new js({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new fa("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new fa("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new fa("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new fa("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ma("Legacy serialization format not supported yet.");a=t}else da.si.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Ts))throw new ba(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=Me(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new ma("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ma("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Ts.className="Sequential",da.nh.registerClass(Ts);class Cs extends da.nh.Serializable{getConfig(){return{}}}class Es extends Cs{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ba(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return da.Te(e)}(e,t)}}Es.className="elu",da.nh.registerClass(Es);class As extends Cs{apply(e){return da.lh(e)}}As.className="selu",da.nh.registerClass(As);class $s extends Cs{apply(e){return da.Wg(e)}}$s.className="relu",da.nh.registerClass($s);class Rs extends Cs{apply(e){return Object(da.fi)((()=>da.jg(6,da.Wg(e))))}}Rs.className="relu6",da.nh.registerClass(Rs);class Ds extends Cs{apply(e){return e}}Ds.className="linear",da.nh.registerClass(Ds);class Fs extends Cs{apply(e){return da.rh(e)}}Fs.className="sigmoid",da.nh.registerClass(Fs);class _s extends Cs{apply(e){return function(e){return Object(da.fi)((()=>{const t=da.Hd(.5,da.og(.2,e));return da.le(t,0,1)}))}(e)}}_s.className="hardSigmoid",da.nh.registerClass(_s);class Ms extends Cs{apply(e){return da.Dh(e)}}Ms.className="softplus",da.nh.registerClass(Ms);class zs extends Cs{apply(e){return function(e){return Object(da.fi)((()=>da.Oe(e,da.Hd(da.Ed(e),1))))}(e)}}zs.className="softsign",da.nh.registerClass(zs);class Ls extends Cs{apply(e){return da.Vh(e)}}Ls.className="tanh",da.nh.registerClass(Ls);class Ps extends Cs{apply(e,t=-1){return da.Ch(e,t)}}Ps.className="softmax",da.nh.registerClass(Ps);class Bs extends Cs{apply(e,t=-1){return da.Rf(e,t)}}Bs.className="logSoftmax",da.nh.registerClass(Bs);class Vs extends Cs{apply(e,t=1){return Object(da.fi)((()=>da.og(da.rh(da.og(e,t)),e)))}}Vs.className="swish",da.nh.registerClass(Vs);class Ws extends Cs{apply(e){return Object(da.fi)((()=>da.og(e,da.Vh(da.Dh(e)))))}}Ws.className="mish",da.nh.registerClass(Ws);class Us extends da.nh.Serializable{}class Gs extends Us{constructor(e){super(),Ht(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Object(da.fi)((()=>{let t=Object(da.Ai)([1]);return this.hasL1&&(t=Object(da.Hd)(t,Object(da.Sh)(da.og(this.l1,Object(da.Ed)(e))))),this.hasL2&&(t=Object(da.Hd)(t,Object(da.Sh)(da.og(this.l2,J(e))))),da.Zg(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Gs.className="L1L2",da.nh.registerClass(Gs);const qs={l1l2:"L1L2"};class Hs extends os{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=je(e);let n=Object(da.Wg)(e);return null!=this.maxValue&&(n=Object(da.le)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue};return Zt(e,super.getConfig()),e}}Hs.className="ReLU",da.nh.registerClass(Hs);class Ys extends os{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=je(e);return Object(da.If)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha};return Zt(e,super.getConfig()),e}}Ys.className="LeakyReLU",da.nh.registerClass(Ys);class Ks extends os{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ie(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Xt(e.alphaRegularizer),this.alphaConstraint=j(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ma(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ne(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new ns({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=je(e),Object(da.Hg)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:se(this.alphaInitializer),alphaRegularizer:Yt(this.alphaRegularizer),alphaConstraint:I(this.alphaConstraint),sharedAxes:this.sharedAxes};return Zt(e,super.getConfig()),e}}Ks.className="PReLU",da.nh.registerClass(Ks);class Xs extends os{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ba(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=je(e);return Object(da.Te)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha};return Zt(e,super.getConfig()),e}}Xs.className="ELU",da.nh.registerClass(Xs);class Zs extends os{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=je(e);return Object(da.og)(n,Object(da.je)(Object(da.vf)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta};return Zt(e,super.getConfig()),e}}Zs.className="ThresholdedReLU",da.nh.registerClass(Zs);class Qs extends os{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Ps).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=je(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis};return Zt(e,super.getConfig()),e}}Qs.className="Softmax",da.nh.registerClass(Qs);class Js extends os{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Js.verifyArgs(t),this.rank=e,v(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ba(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Qt(t.kernelSize,e,"kernelSize"),this.strides=Qt(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,$(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,A(this.dataFormat),this.activation=qt(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=ie(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=j(t.biasConstraint),this.biasRegularizer=Xt(t.biasRegularizer),this.activityRegularizer=Xt(t.activityRegularizer),this.dilationRate=Qt(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ma(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ma(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ma(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(i("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!x(e.kernelSize,"number",1,3))throw new ma(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ut(this.activation),useBias:this.useBias,biasInitializer:se(this.biasInitializer),biasRegularizer:Yt(this.biasRegularizer),activityRegularizer:Yt(this.activityRegularizer),biasConstraint:I(this.biasConstraint)};return tn(e,super.getConfig()),e}}class ei extends Js{constructor(e,t){super(e,t),this.kernel=null,ei.verifyArgs(t),this.filters=t.filters,v(this.filters,"filters"),this.kernelInitializer=ie(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=j(t.kernelConstraint),this.kernelRegularizer=Xt(t.kernelRegularizer)}build(e){e=Ne(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ma(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Object(da.fi)((()=>{let t;e=je(e);const n=null==this.bias?null:this.bias.read(),r=O(this.activation.getClassName());if(null!=r&&2===this.rank)t=sn(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=an(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=sn(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ba("convolutions greater than 3D are not implemented yet.");t=on(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ne(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Jt(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:se(this.kernelInitializer),kernelRegularizer:Yt(this.kernelRegularizer),kernelConstraint:I(this.kernelConstraint)};return tn(e,super.getConfig()),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ma(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class ti extends ei{constructor(e){super(2,e),ti.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!x(e.kernelSize,"number",1,2))throw new ma(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}ti.className="Conv2D",da.nh.registerClass(ti);class ni extends ei{constructor(e){super(3,e),ni.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ma(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}ni.className="Conv3D",da.nh.registerClass(ni);class ri extends ti{constructor(e){if(super(e),this.inputSpec=[new ns({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ma(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ne(e)).length)throw new ma("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ma("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ns({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return da.fi((()=>{let t=je(e);if(4!==t.shape.length)throw new ma(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape;let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const s=n[a],i=this.kernelSize[1],o=this.strides[1],u=[n[0],en(n[r],this.strides[0],this.kernelSize[0],this.padding),en(s,o,i,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=da.ki(t,[0,2,3,1]));let c=da.ve(t,this.kernel.read(),u,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=da.ki(c,[0,3,1,2])),null!=this.bias&&(c=te(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){const t=(e=Ne(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=en(t[r],o,s,this.padding),t[a]=en(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ri.className="Conv2DTranspose",da.nh.registerClass(ri);class ai extends ni{constructor(e){if(super(e),this.inputSpec=[new ns({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ma(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ne(e)).length)throw new ma("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ma("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ns({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return da.fi((()=>{let t=je(e);if(5!==t.shape.length)throw new ma(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape;let r,a,s;"channelsFirst"===this.dataFormat?(s=2,r=3,a=4):(s=1,r=2,a=3);const i=n[r],o=n[a],u=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[1],d=this.strides[2],h=[n[0],en(n[s],this.strides[0],this.kernelSize[0],this.padding),en(i,l,u,this.padding),en(o,d,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=da.ki(t,[0,2,3,4,1]));let p=da.xe(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=da.ki(p,[0,4,1,2,3])),null!==this.bias&&(p=te(p,this.bias.read(),this.dataFormat)),null!==this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Ne(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],l=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=en(t[r],c,i,this.padding),t[a]=en(t[a],l,o,this.padding),t[s]=en(t[s],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ai.className="Conv3DTranspose",da.nh.registerClass(ai);class si extends ei{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ma("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ma("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ma(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ie(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Xt(t.depthwiseRegularizer),this.depthwiseConstraint=j(t.depthwiseConstraint),this.pointwiseInitializer=ie(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Xt(t.pointwiseRegularizer),this.pointwiseConstraint=j(t.pointwiseConstraint)}build(e){if((e=Ne(e)).length<this.rank+2)throw new ma(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ma(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):null,this.inputSpec=[new ns({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Object(da.fi)((()=>{let t;if(e=je(e),1===this.rank)throw new ba("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=da.ki(e,[0,2,3,1])),t=da.mh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=te(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=da.ki(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=se(this.depthwiseInitializer),e.pointwiseInitializer=se(this.pointwiseInitializer),e.depthwiseRegularizer=Yt(this.depthwiseRegularizer),e.pointwiseRegularizer=Yt(this.pointwiseRegularizer),e.depthwiseConstraint=I(this.depthwiseConstraint),e.pointwiseConstraint=I(this.pointwiseConstraint),e}}si.className="SeparableConv";class ii extends si{constructor(e){super(2,e)}}ii.className="SeparableConv2D",da.nh.registerClass(ii);class oi extends ei{constructor(e){super(1,e),oi.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!x(e.kernelSize,"number",1,1))throw new ma(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}oi.className="Conv1D",da.nh.registerClass(oi);class ui extends os{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Object(da.fi)((()=>{if(e=je(e),"channelsLast"===this.dataFormat){const t=q(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return q(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=q(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return q(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat};return tn(e,super.getConfig()),e}}ui.className="Cropping2D",da.nh.registerClass(ui);class ci extends os{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,A(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,y(ja,"InterpolationFormat",this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){return[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]}return[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,t){return da.fi((()=>{let t=je(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=da.ki(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?da.zf.resizeNearestNeighbor(t,[e,r]):da.zf.resizeBilinear(t,[e,r]);return da.ki(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?da.zf.resizeNearestNeighbor(t,[e,r]):da.zf.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat};return tn(e,super.getConfig()),e}}ci.className="UpSampling2D",da.nh.registerClass(ci);class li extends Js{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ie(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=j(e.depthwiseConstraint),this.depthwiseRegularizer=Xt(e.depthwiseRegularizer)}build(e){if((e=Ne(e)).length<4)throw new ma(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ma(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Object(da.fi)((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return Object(da.fi)((()=>{null==a&&(a="channelsLast"),A(a);let i=nn(e,a);if(4!==e.rank)throw new ma(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ma(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=da.He(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=da.ki(i,[0,3,1,2])),i}))}(e=je(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=te(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ne(e);const t="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Jt("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),a=Jt(t,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,r,a]:[e[0],r,a,n]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=se(this.depthwiseInitializer),e.depthwiseRegularizer=Yt(this.depthwiseRegularizer),e.depthwiseConstraint=I(this.depthwiseRegularizer),e}}li.className="DepthwiseConv2D",da.nh.registerClass(li);class di extends os{constructor(e){let t;if(super(e),null==e.cell)throw new ma("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new xi({cells:e.cell}):e.cell,null==t.stateSize)throw new ma("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ns({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return B(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((()=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ie(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return da.fi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((()=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ba("Constants support is not implemented in RNN yet.");Ie(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new ns({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!da.si.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new ma(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new ns({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Object(da.fi)((()=>{if(!this.stateful)throw new pa("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ma("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>da.Ai([n,e]))):[da.Ai([n,this.cell.stateSize])];else if(null==e)da.Me(this.states_),null!=this.keptStates&&(da.Me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>da.Ai([n,e]))):this.states_[0]=da.Ai([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ma(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):da.Me(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!da.si.arraysEqual(r.shape,s))throw new ma(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>da.Gf(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=cn(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new ns({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof rs){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Object(da.fi)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=je(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new ma(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=ln(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],c=o[1],l=o[2];this.stateful&&this.resetStates(l,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(l):d}))}getInitialState(e){return Object(da.fi)((()=>{let t=da.Ai(e.shape);return t=da.Sh(t,[1,2]),t=W(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?K(t,[1,e]):t)):this.cell.stateSize>1?[K(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===di.className&&(t.cell={className:this.cell.getClassName(),config:n}),un({},n,e,t)}static fromConfig(e,t,n={}){return new e(un(t,{cell:Me(t.cell,n)}))}}di.className="RNN",da.nh.registerClass(di);class hi extends os{}class pi extends hi{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,v(this.units,"units"),this.activation=qt(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ie(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ie(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ie(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xt(e.kernelRegularizer),this.recurrentRegularizer=Xt(e.recurrentRegularizer),this.biasRegularizer=Xt(e.biasRegularizer),this.kernelConstraint=j(e.kernelConstraint),this.recurrentConstraint=j(e.recurrentConstraint),this.biasConstraint=j(e.biasConstraint),this.dropout=L([1,P([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=L([1,P([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ne(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Object(da.fi)((()=>{if(2!==(e=e).length)throw new ma(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dn({ones:()=>da.xg(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dn({ones:()=>da.xg(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Z(null!=s?da.og(e,s):e,this.kernel.read()),null!=this.bias&&(a=te(a,this.bias.read())),null!=i&&(n=da.og(n,i));let o=da.Hd(a,Z(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){return un({},super.getConfig(),{units:this.units,activation:Ut(this.activation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),recurrentInitializer:se(this.recurrentInitializer),biasInitializer:se(this.biasInitializer),kernelRegularizer:Yt(this.kernelRegularizer),recurrentRegularizer:Yt(this.recurrentRegularizer),biasRegularizer:Yt(this.biasRegularizer),activityRegularizer:Yt(this.activityRegularizer),kernelConstraint:I(this.kernelConstraint),recurrentConstraint:I(this.recurrentConstraint),biasConstraint:I(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout})}}pi.className="SimpleRNNCell",da.nh.registerClass(pi);class fi extends di{constructor(e){e.cell=new pi(e),super(e)}call(e,t){return Object(da.fi)((()=>{null!=this.cell.dropoutMask&&(da.Me(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(da.Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})}))}static fromConfig(e,t){return new e(t)}}fi.className="SimpleRNN",da.nh.registerClass(fi);class mi extends hi{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ma("GRUCell does not support reset_after parameter set to true.");this.units=e.units,v(this.units,"units"),this.activation=qt(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qt(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ie(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ie(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ie(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xt(e.kernelRegularizer),this.recurrentRegularizer=Xt(e.recurrentRegularizer),this.biasRegularizer=Xt(e.biasRegularizer),this.kernelConstraint=j(e.kernelConstraint),this.recurrentConstraint=j(e.recurrentConstraint),this.biasConstraint=j(e.biasConstraint),this.dropout=L([1,P([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=L([1,P([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ne(e);this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Object(da.fi)((()=>{if(2!==(e=e).length)throw new ma(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dn({ones:()=>da.xg(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dn({ones:()=>da.xg(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.recurrentDropoutMask;let s,i,o;0<this.dropout&&this.dropout<1&&(e=da.og(e,this.dropoutMask[0]));let u=Z(e,this.kernel.read());this.useBias&&(u=te(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=da.og(r,a[0]));const c=this.recurrentKernel.read(),[l,d]=da.Ih(c,[2*this.units,this.units],c.rank-1),h=Z(r,l),[p,f,m]=da.Ih(u,3,u.rank-1),[b,g]=da.Ih(h,2,h.rank-1);s=this.recurrentActivation.apply(da.Hd(p,b)),i=this.recurrentActivation.apply(da.Hd(f,g));const y=Z(da.og(i,r),d);o=this.activation.apply(da.Hd(m,y));const x=da.Hd(da.og(s,r),da.og(da.Hd(1,da.rg(s)),o));return[x,x]}))}getConfig(){return un({},super.getConfig(),{units:this.units,activation:Ut(this.activation),recurrentActivation:Ut(this.recurrentActivation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),recurrentInitializer:se(this.recurrentInitializer),biasInitializer:se(this.biasInitializer),kernelRegularizer:Yt(this.kernelRegularizer),recurrentRegularizer:Yt(this.recurrentRegularizer),biasRegularizer:Yt(this.biasRegularizer),activityRegularizer:Yt(this.activityRegularizer),kernelConstraint:I(this.kernelConstraint),recurrentConstraint:I(this.recurrentConstraint),biasConstraint:I(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1})}}mi.className="GRUCell",da.nh.registerClass(mi);class bi extends di{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mi(e),super(e)}call(e,t){return Object(da.fi)((()=>{null!=this.cell.dropoutMask&&(da.Me(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(da.Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}bi.className="GRU",da.nh.registerClass(bi);class gi extends hi{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,v(this.units,"units"),this.activation=qt(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qt(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ie(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ie(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ie(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Xt(e.kernelRegularizer),this.recurrentRegularizer=Xt(e.recurrentRegularizer),this.biasRegularizer=Xt(e.biasRegularizer),this.kernelConstraint=j(e.kernelConstraint),this.recurrentConstraint=j(e.recurrentConstraint),this.biasConstraint=j(e.biasConstraint),this.dropout=L([1,P([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=L([1,P([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Ne(e);let n;if(this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,r=this.units;n=new((t=class extends Fa{apply(t,n){const a=e.apply([r]),s=(new Ma).apply([r]),i=e.apply([2*r]);return Y(Y(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Object(da.fi)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new ma(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dn({ones:()=>da.xg(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dn({ones:()=>da.xg(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.recurrentDropoutMask;let i,o,u,c;0<this.dropout&&this.dropout<1&&(e=da.og(e,this.dropoutMask[0]));let l=Z(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=da.og(r,s[0])),l=da.Hd(l,Z(r,this.recurrentKernel.read())),this.useBias&&(l=te(l,this.bias.read()));const[d,h,p,f]=da.Ih(l,4,l.rank-1);i=this.recurrentActivation.apply(d),o=this.recurrentActivation.apply(h),u=da.Hd(da.og(o,a),da.og(i,this.activation.apply(p))),c=this.recurrentActivation.apply(f);const m=da.og(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){return un({},super.getConfig(),{units:this.units,activation:Ut(this.activation),recurrentActivation:Ut(this.recurrentActivation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),recurrentInitializer:se(this.recurrentInitializer),biasInitializer:se(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Yt(this.kernelRegularizer),recurrentRegularizer:Yt(this.recurrentRegularizer),biasRegularizer:Yt(this.biasRegularizer),activityRegularizer:Yt(this.activityRegularizer),kernelConstraint:I(this.kernelConstraint),recurrentConstraint:I(this.recurrentConstraint),biasConstraint:I(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation})}}gi.className="LSTMCell",da.nh.registerClass(gi);class yi extends di{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new gi(e),super(e)}call(e,t){return Object(da.fi)((()=>{null!=this.cell.dropoutMask&&(da.Me(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(da.Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}yi.className="LSTM",da.nh.registerClass(yi);class xi extends hi{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Object(da.fi)((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Ie(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{D(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){return un({},super.getConfig(),{cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))})}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Me(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ce(e)}setWeights(e){const t=[];for(const n of this.cells){const r=e.splice(n.weights.length);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Ee(t)}}xi.className="StackedRNNCells",da.nh.registerClass(xi);var vi=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};class wi extends di{constructor(e){if(e.unroll)throw new ba("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ba("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ns({ndim:5})]}call(e,t){return da.fi((()=>{if(null!=this.cell.dropoutMask&&(da.Me(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(da.Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ma("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return da.fi((()=>{const{stateSize:t}=this.cell,n=this.computeSingleOutputShape(e.shape),r=[n[0],...n.slice(2)],a=da.Ai(r);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){da.fi((()=>{if(!this.stateful)throw new pa("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new ma("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((()=>da.Ai(a))):[da.Ai(a)];else if(null==e)da.Me(this.states_),null!=this.keptStates&&(da.Me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>da.Ai(a))):this.states_[0]=da.Ai(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ma(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):da.Me(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!da.si.arraysEqual(n.shape,r))throw new ma(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>da.Gf(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?4:3],c=Jt(e[o?3:2],r[0],a,s[0],i[0]),l=Jt(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,l]:[c,l,n]]}}wi.className="ConvRNN2D";class Oi extends gi{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(hn({},e,{units:t})),this.filters=t,v(this.filters,"filters"),this.kernelSize=Qt(n,2,"kernelSize"),this.kernelSize.forEach((e=>v(e,"kernelSize"))),this.strides=Qt(r||1,2,"strides"),this.strides.forEach((e=>v(e,"strides"))),this.padding=a||"valid",$(this.padding),this.dataFormat=s||"channelsLast",A(this.dataFormat),this.dilationRate=Qt(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>v(e,"dilationRate")))}build(e){var t;e=Ne(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ma(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=this.kernelSize.concat([e[n],4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Fa{apply(e,t){return H([n.apply([r]),da.wg([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return da.fi((()=>{if(3!==e.length)throw new ma(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dn({ones:()=>da.xg(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?da.og(t[n],e):e;let u=o(r,i,0),c=o(r,i,1),l=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dn({ones:()=>da.xg(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const h=this.recurrentDropoutMask;let p=o(a,h,0),f=o(a,h,1),m=o(a,h,2),b=o(a,h,3);const[g,y,x,v]=da.Ih(this.kernel.read(),4,3),[w,O,k,I]=this.useBias?da.Ih(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,g,w,this.padding),c=this.inputConv(c,y,O,this.padding),l=this.inputConv(l,x,k,this.padding),d=this.inputConv(d,v,I,this.padding);const[S,j,N,T]=da.Ih(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,j),m=this.recurrentConv(m,N),b=this.recurrentConv(b,T);const C=this.recurrentActivation.apply(da.Hd(u,p)),E=this.recurrentActivation.apply(da.Hd(c,f)),A=da.Hd(da.og(E,s),da.og(C,this.activation.apply(da.Hd(l,m)))),$=da.og(this.recurrentActivation.apply(da.Hd(d,b)),this.activation.apply(A));return[$,$,A]}))}getConfig(){const e=super.getConfig();return hn({},vi(e,["units"]),{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(e,t,n,r){const a=da.ue(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?te(a,n,this.dataFormat):a}recurrentConv(e,t){return da.ue(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Oi.className="ConvLSTM2DCell",da.nh.registerClass(Oi);class ki extends wi{constructor(e){super(hn({},e,{cell:new Oi(e)}))}static fromConfig(e,t){return new e(t)}}ki.className="ConvLSTM2D",da.nh.registerClass(ki);class Ii extends os{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Object(da.fi)((()=>{this.invokeCallHook(e,t);const n=je(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return re((()=>ne(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed};return pn(e,super.getConfig()),e}dispose(){return super.dispose()}}Ii.className="Dropout",da.nh.registerClass(Ii);class Si extends Ii{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Si.className="SpatialDropout1D",da.nh.registerClass(Si);class ji extends os{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,v(this.units,"units"),this.activation=qt(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=ie(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ie(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=j(e.kernelConstraint),this.biasConstraint=j(e.biasConstraint),this.kernelRegularizer=Xt(e.kernelRegularizer),this.biasRegularizer=Xt(e.biasRegularizer),this.activityRegularizer=Xt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ne(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ne(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Object(da.fi)((()=>{this.invokeCallHook(e,t);const n=je(e),r=O(this.activation.getClassName());let a;return null!=r?a=Z(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Z(n,this.kernel.read()),null!=this.bias&&(a=te(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:Ut(this.activation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),biasInitializer:se(this.biasInitializer),kernelRegularizer:Yt(this.kernelRegularizer),biasRegularizer:Yt(this.biasRegularizer),activityRegularizer:Yt(this.activityRegularizer),kernelConstraint:I(this.kernelConstraint),biasConstraint:I(this.biasConstraint)};return pn(e,super.getConfig()),e}}ji.className="Dense",da.nh.registerClass(ji);class Ni extends os{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ne(e);for(const t of e.slice(1))if(null==t)throw new ma(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],z(e,1)]}call(e,t){return Object(da.fi)((()=>{this.invokeCallHook(e,t);let n=je(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Object(da.ki)(n,e)}return function(e){if(e.rank<=1)throw new ma(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],z(e.shape,1)];return da.Zg(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);return pn(e,super.getConfig()),e}}Ni.className="Flatten",da.nh.registerClass(Ni);class Ti extends os{constructor(e){super(e),this.supportsMasking=!0,this.activation=qt(e.activation)}call(e,t){return Object(da.fi)((()=>{this.invokeCallHook(e,t);const n=je(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Ut(this.activation)};return pn(e,super.getConfig()),e}}Ti.className="Activation",da.nh.registerClass(Ti);class Ci extends os{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Object(da.fi)((()=>{return e=je(e),t=e,n=this.n,Object(da.fi)((()=>{if(2!==t.shape.length)throw new ma(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return K(W(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n};return pn(e,super.getConfig()),e}}Ci.className="RepeatVector",da.nh.registerClass(Ci);class Ei extends os{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new ma("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=z(e);if(null!==s){if(0===a||i%a!=0)throw new ma(n);r[s]=i/a}else if(i!==a)throw new ma(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Object(da.fi)((()=>{this.invokeCallHook(e,t);const n=je(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Object(da.Zg)(n,a)}))}getConfig(){const e={targetShape:this.targetShape};return pn(e,super.getConfig()),e}}Ei.className="Reshape",da.nh.registerClass(Ei);class Ai extends os{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=B(1,e.dims.length+1);if(!da.si.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ns({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ne(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Object(da.ki)(je(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims};return pn(e,super.getConfig()),e}}Ai.className="Permute",da.nh.registerClass(Ai);class $i extends os{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return pn(t,e),t}computeMask(e,t){const n=je(e);return Object(da.Kd)(Object(da.ug)(n,this.maskValue),-1)}call(e,t){return Object(da.fi)((()=>{this.invokeCallHook(e,t);const n=je(e),r=Object(da.Kd)(Object(da.ug)(n,this.maskValue),-1,!0);return Object(da.og)(n,Object(da.je)(r,n.dtype))}))}}$i.className="Masking",da.nh.registerClass($i);class Ri extends os{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=null==e.inputLength?[t,null]:[t].concat(c(e.inputLength))}this.inputDim=e.inputDim,v(this.inputDim,"inputDim"),this.outputDim=e.outputDim,v(this.outputDim,"outputDim"),this.embeddingsInitializer=ie(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Xt(e.embeddingsRegularizer),this.activityRegularizer=Xt(e.activityRegularizer),this.embeddingsConstraint=j(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Object(da.fi)((()=>this.maskZero?(e=je(e),Object(da.ug)(e,Object(da.Bi)(e))):null))}computeOutputShape(e){if(e=Ne(e),null==this.inputLength)return[...e,this.outputDim];const t=c(this.inputLength);if(t.length!==e.length-1)throw new ma(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new ma(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Object(da.fi)((()=>{this.invokeCallHook(e,t);let n=je(e);"int32"!==n.dtype&&(n=V(n,"int32"));const r=Q(this.embeddings.read(),Object(da.Zg)(n,[n.size]));return Object(da.Zg)(r,Ne(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:se(this.embeddingsInitializer),embeddingsRegularizer:Yt(this.embeddingsRegularizer),activityRegularizer:Yt(this.activityRegularizer),embeddingsConstraint:I(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength};return fn(e,super.getConfig()),e}}Ri.className="Embedding",da.nh.registerClass(Ri);class Di extends os{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ba}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new ma("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ne(e)]),(e=e).length<2)throw new ma(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=b(t),t.length>1)throw new ma(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));this.reshapeRequired=-1!==e.indexOf(null)||1!==b(r).length}call(e,t){return Object(da.fi)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=P(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=W(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=da.Zg(r,[a].concat(z(e.slice(1))));i=da.ki(i,[1,0]),i=da.Zg(i,s),t.push(i),n=!0}else if(e>1){const a=B(1,e).concat([0]);t.push(da.ki(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=da.Zg(da.ki(da.Zg(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(B(0,a-1));r=da.ki(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=b(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return da.fi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ma("`mask` should be an Array");if(!Array.isArray(e))throw new ma("`inputs` should be an Array");if(t.length!==e.length)throw new ma(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:da.cf(e,0))))[0];for(let e=1;e<t.length-1;++e)n=da.Tf(n,t[e]);return n}))}}class Fi extends Di{constructor(e){super(e)}mergeFunction(e){return Object(da.fi)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=da.Hd(t,e[n]);return t}))}}Fi.className="Add",da.nh.registerClass(Fi);class _i extends Di{constructor(e){super(e)}mergeFunction(e){return Object(da.fi)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=da.og(t,e[n]);return t}))}}_i.className="Multiply",da.nh.registerClass(_i);class Mi extends Di{constructor(e){super(e)}mergeFunction(e){return Object(da.fi)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=da.Hd(t,e[n]);return da.og(1/e.length,t)}))}}Mi.className="Average",da.nh.registerClass(Mi);class zi extends Di{constructor(e){super(e)}mergeFunction(e){return Object(da.fi)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=da.eg(t,e[n]);return t}))}}zi.className="Maximum",da.nh.registerClass(zi);class Li extends Di{constructor(e){super(e)}mergeFunction(e){return Object(da.fi)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=da.jg(t,e[n]);return t}))}}Li.className="Minimum",da.nh.registerClass(Li);class Pi extends Di{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ma("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(da.si.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new ma("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Object(da.fi)((()=>H(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ma("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ma("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ma("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ma(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return da.fi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)r.push(null==t[n]?da.je(da.xg(e[n]),"bool"):t[n].rank<e[n].rank?da.cf(t[n],-1):t[n]);const a=da.oe(r,this.axis);return da.Jd(a,-1,!1)}))}getConfig(){const e={axis:this.axis};return mn(e,super.getConfig()),e}}Pi.className="Concatenate",da.nh.registerClass(Pi);class Bi extends Di{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){da.si.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ba("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ma(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ma(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>bn(t,e[n].shape.length))):[bn(this.axes,n.shape.length),bn(this.axes,r.shape.length)],this.normalize&&(n=ze(n,t[0]),r=ze(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ba("batchDot is not implemented for tensors of 4D or higher rank yet");if(da.si.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),da.si.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ba("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return da.fi((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=da.Zg(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=da.Zg(e,e.shape.concat(t))}else n=0;if(i=2===e.shape.length&&2===t.shape.length?s[0]===s[1]?da.Sh(da.og(e,t),s[0]):da.Sh(da.og(da.ki(e,[1,0]),t),s[1]):da.Yf(e,t,s[0]!==e.shape.length-1,s[1]===t.shape.length-1),n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=da.Mh(i,t)}return 1===i.shape.length&&(i=da.cf(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[bn(this.axes,e.length),bn(this.axes,t.length)],n}computeOutputShape(e){da.si.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ba("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize};return mn(e,super.getConfig()),e}}Bi.className="Dot",da.nh.registerClass(Bi);class Vi extends os{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return gn(t,e),t}call(e,t){return Object(da.fi)((()=>{this.invokeCallHook(e,t);const n=je(e);return re((()=>Object(da.Hd)(X(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Vi.className="GaussianNoise",da.nh.registerClass(Vi);class Wi extends os{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return gn(t,e),t}call(e,t){return Object(da.fi)((()=>{this.invokeCallHook(e,t);const n=je(e);if(this.rate>0&&this.rate<1){return re((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Object(da.og)(n,X(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}Wi.className="GaussianDropout",da.nh.registerClass(Wi);class Ui extends os{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||je(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return gn(t,e),t}call(e,t){return Object(da.fi)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return re((()=>{const t=je(e),r=-1.7580993408473766;let a=Object(da.wf)(Object(da.Og)(n),this.rate);a=V(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=Object(da.Hd)(Object(da.og)(t,a),Object(da.og)(Object(da.Hd)(a,-1),r));return Object(da.Hd)(Object(da.og)(o,s),i)}),(()=>je(e)),t.training||!1)}return e}))}}Ui.className="AlphaDropout",da.nh.registerClass(Ui);class Gi extends os{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ie(e.betaInitializer||"zeros"),this.gammaInitializer=ie(e.gammaInitializer||"ones"),this.movingMeanInitializer=ie(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ie(e.movingVarianceInitializer||"ones"),this.betaConstraint=j(e.betaConstraint),this.gammaConstraint=j(e.gammaConstraint),this.betaRegularizer=Xt(e.betaRegularizer),this.gammaRegularizer=Xt(e.gammaRegularizer)}build(e){e=Ne(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ma(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new ns({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Object(da.fi)((()=>{const n=null!=t.training&&t.training,r=je(e),a=r.shape,i=a.length,o=B(0,i),u=this.axis>=0?this.axis:this.axis+i;o.splice(u,1);const c=s(1,i);c[u]=a[u];const l=o.slice();l.sort();const d=!da.si.arraysEqual(l,B(0,i).slice(0,i-1));if(!n)return(()=>{if(d){const e=Object(da.Zg)(this.movingMean.read(),c),t=Object(da.Zg)(this.movingVariance.read(),c),n=this.center?Object(da.Zg)(this.beta.read(),c):null,a=this.scale?Object(da.Zg)(this.gamma.read(),c):null;return xn(r,e,t,n,a,this.epsilon)}return xn(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=vn(r,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{da.fi((()=>{const r=1-n,a=e.read(),s=da.og(da.Rh(a,t),r);e.write(da.Rh(a,s))}))};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:se(this.betaInitializer),gammaInitializer:se(this.gammaInitializer),movingMeanInitializer:se(this.movingMeanInitializer),movingVarianceInitializer:se(this.movingVarianceInitializer),betaRegularizer:Yt(this.betaRegularizer),gammaRegularizer:Yt(this.gammaRegularizer),betaConstraint:I(this.betaConstraint),gammaConstraint:I(this.gammaConstraint)};return yn(e,super.getConfig()),e}}Gi.className="BatchNormalization",da.nh.registerClass(Gi);class qi extends os{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ie(e.betaInitializer||"zeros"),this.gammaInitializer=ie(e.gammaInitializer||"ones"),this.betaRegularizer=Xt(e.betaRegularizer),this.gammaRegularizer=Xt(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ne(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==b(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.gamma=this.scale?this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):null,this.beta=this.center?this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):null,this.built=!0}call(e,t){const n=je(e),r=n.shape,a=r.length;return Object(da.fi)((()=>{let{mean:e,variance:t}=Object(da.mg)(n,this.axis,!0);const i=s(1,a);for(const e of this.axis)i[e]=r[e];const o=e=>null!=e&&e.shape.length!==a?da.Zg(e,i):e;let u=o(this.gamma.read()),c=o(this.beta.read());const l=[],d=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),d.push(1)):(l.push(1),d.push(r[e]));return e=da.gi(e,l),t=da.gi(t,l),u=da.gi(u,d),c=da.gi(c,d),xn(n,e,t,c,u,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:se(this.betaInitializer),gammaInitializer:se(this.gammaInitializer),betaRegularizer:Yt(this.betaRegularizer),gammaRegularizer:Yt(this.gammaRegularizer)};return yn(e,super.getConfig()),e}}qi.className="LayerNormalization",da.nh.registerClass(qi);class Hi extends os{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ma(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ma(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ma(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new ns({ndim:4})]}computeOutputShape(e){let t,n;return e=Ne(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Object(da.fi)((()=>{return t=je(e),n=this.padding,r=this.dataFormat,Object(da.fi)((()=>{if(4!==t.rank)throw new ma(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ma("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ma(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],da.Ag(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat};return wn(e,super.getConfig()),e}}Hi.className="ZeroPadding2D",da.nh.registerClass(Hi);class Yi extends os{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ma(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(v(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ma(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}v(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,$(this.padding),this.inputSpec=[new ns({ndim:3})]}computeOutputShape(e){const t=Jt((e=Ne(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Object(da.fi)((()=>{this.invokeCallHook(e,t),e=W(je(e),2);const n=this.poolingFunction(je(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return da.Mh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides};return On(e,super.getConfig()),e}}class Ki extends Yi{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return A(a),$(r),kn(e,t,n,r,a,"max")}}Ki.className="MaxPooling1D",da.nh.registerClass(Ki);class Xi extends Yi{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return A(a),$(r),kn(e,t,n,r,a,"avg")}}Xi.className="AveragePooling1D",da.nh.registerClass(Xi);class Zi extends os{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ma(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];v(this.poolSize,"poolSize"),v(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,A(this.dataFormat),$(this.padding),this.inputSpec=[new ns({ndim:4})]}computeOutputShape(e){e=Ne(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Jt(t,this.poolSize[0],this.padding,this.strides[0]),n=Jt(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Object(da.fi)((()=>(this.invokeCallHook(e,t),this.poolingFunction(je(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return On(e,super.getConfig()),e}}class Qi extends Zi{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return A(a),$(r),kn(e,t,n,r,a,"max")}}Qi.className="MaxPooling2D",da.nh.registerClass(Qi);class Ji extends Zi{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return A(a),$(r),kn(e,t,n,r,a,"avg")}}Ji.className="AveragePooling2D",da.nh.registerClass(Ji);class eo extends os{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ma(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];v(this.poolSize,"poolSize"),v(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,A(this.dataFormat),$(this.padding),this.inputSpec=[new ns({ndim:5})]}computeOutputShape(e){e=Ne(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Jt(t,this.poolSize[0],this.padding,this.strides[0]),n=Jt(n,this.poolSize[1],this.padding,this.strides[1]),r=Jt(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Object(da.fi)((()=>(this.invokeCallHook(e,t),this.poolingFunction(je(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return On(e,super.getConfig()),e}}class to extends eo{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return A(a),$(r),In(e,t,n,r,a,"max")}}to.className="MaxPooling3D",da.nh.registerClass(to);class no extends eo{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return A(a),$(r),In(e,t,n,r,a,"avg")}}no.className="AveragePooling3D",da.nh.registerClass(no);class ro extends os{constructor(e){super(e),this.inputSpec=[new ns({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ba}}class ao extends ro{constructor(e){super(e||{})}call(e,t){return Object(da.fi)((()=>{const t=je(e);return da.fg(t,1)}))}}ao.className="GlobalAveragePooling1D",da.nh.registerClass(ao);class so extends ro{constructor(e){super(e||{})}call(e,t){return Object(da.fi)((()=>{const t=je(e);return da.ag(t,1)}))}}so.className="GlobalMaxPooling1D",da.nh.registerClass(so);class io extends os{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,A(this.dataFormat),this.inputSpec=[new ns({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ba}getConfig(){const e={dataFormat:this.dataFormat};return On(e,super.getConfig()),e}}class oo extends io{call(e,t){return Object(da.fi)((()=>{const t=je(e);return da.fg(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])}))}}oo.className="GlobalAveragePooling2D",da.nh.registerClass(oo);class uo extends io{call(e,t){return Object(da.fi)((()=>{const t=je(e);return da.ag(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])}))}}uo.className="GlobalMaxPooling2D",da.nh.registerClass(uo);class co extends os{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}};return Sn(e,super.getConfig()),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Me(t.layer,n);delete t.layer;const a={layer:r};return Sn(a,t),new e(a)}}class lo extends co{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ne(e)).length<3)throw new ma(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ne(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t);return[n[0],e[1]].concat(n.slice(1))}call(e,t){return Object(da.fi)((()=>ln((e=>[je(this.layer.call(e,t)),[]]),e=je(e),[],!1,null,null,!1,!0)[1]))}}lo.className="TimeDistributed",da.nh.registerClass(lo);class ho extends co{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Me(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Me(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,y(Ca,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new ba("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):u(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=cn(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new ma("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new ns({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new ba("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof rs;for(const e of s)if(e instanceof rs!==o)throw new ma("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Object(da.fi)((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Sn(t,{initialState:s})),a=this.backwardLayer.call(e,Sn(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=da.ah(a,1)),"concat"===this.mergeMode?i=H([r,a]):"sum"===this.mergeMode?i=da.Hd(r,a):"ave"===this.mergeMode?i=da.og(.5,da.Hd(r,a)):"mul"===this.mergeMode?i=da.og(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){D(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),D(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((()=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode};return Sn(e,super.getConfig()),e}static fromConfig(e,t){const n=Me(t.layer);if(delete t.layer,null!=t.numConstants)throw new ba("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}ho.className="Bidirectional",da.nh.registerClass(ho);const po=yr,fo=xr,mo=vr,bo=wr;class go extends ls{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof js))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}class yo extends go{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new ba("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.monitorFunc="min"===this.mode?ra:"max"===this.mode||-1!==this.monitor.indexOf("acc")?aa:ra,this.monitorFunc===ra&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.best=null!=this.baseline?this.baseline:this.monitorFunc===ra?1/0:-1/0}async onEpochEnd(e,t){await Re(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const xo={earlyStopping:function(e){return new yo(e)}}},"0vIi":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("6D6q");const u=Object(o.b)({pow_:function(e,t){let n=Object(i.a)(e,"base","pow"),o=Object(i.a)(t,"exp","pow");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.hc,{a:n,b:o})}})},1:function(){},1277:function(e){function t(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function n(e){return!0===(e&&e.__isLong__)}function r(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=l[e])?r:(n=s(e,(0|e)<0?-1:0,!0),a&&(l[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=c[e])?r:(n=s(e,e<0?-1:0,!1),a&&(c[e]=n),n)}function a(e,t){if(isNaN(e))return t?g:b;if(t){if(e<0)return g;if(e>=p)return O}else{if(e<=-f)return k;if(e+1>=f)return w}return e<0?a(-e,t).neg():s(e%h|0,e/h|0,t)}function s(e,n,r){return new t(e,n,r)}function i(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return b;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return i(e.substring(1),t,n).neg();for(var s=a(d(n,8)),o=b,u=0;u<e.length;u+=8){var c=Math.min(8,e.length-u),l=parseInt(e.substring(u,u+c),n);if(c<8){var h=a(d(n,c));o=o.mul(h).add(a(l))}else o=(o=o.mul(s)).add(a(l))}return o.unsigned=t,o}function o(e,t){return"number"==typeof e?a(e,t):"string"==typeof e?i(e,t):s(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}e.exports=t;var u=null;try{u=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}Object.defineProperty(t.prototype,"__isLong__",{value:!0}),t.isLong=n;var c={},l={};t.fromInt=r,t.fromNumber=a,t.fromBits=s;var d=Math.pow;t.fromString=i,t.fromValue=o;var h=4294967296,p=h*h,f=p/2,m=r(1<<24),b=r(0);t.ZERO=b;var g=r(0,!0);t.UZERO=g;var y=r(1);t.ONE=y;var x=r(1,!0);t.UONE=x;var v=r(-1);t.NEG_ONE=v;var w=s(-1,2147483647,!1);t.MAX_VALUE=w;var O=s(-1,-1,!0);t.MAX_UNSIGNED_VALUE=O;var k=s(0,-2147483648,!1);t.MIN_VALUE=k;var I=t.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(k)){var t=a(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=a(d(e,6),this.unsigned),i=this,o="";;){var u=i.div(s),c=(i.sub(u.mul(s)).toInt()>>>0).toString(e);if((i=u).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return n(e)||(e=o(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(n(e)||(e=o(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(k)?k:this.not().add(y)},I.neg=I.negate,I.add=function(e){n(e)||(e=o(e));var t=0,r=0,a=0,i=0;return a+=(i+=(65535&this.low)+(65535&e.low))>>>16,r+=(a+=(this.low>>>16)+(e.low>>>16))>>>16,t+=(r+=(65535&this.high)+(65535&e.high))>>>16,t+=(this.high>>>16)+(e.high>>>16),s((a&=65535)<<16|(i&=65535),(t&=65535)<<16|(r&=65535),this.unsigned)},I.subtract=function(e){return n(e)||(e=o(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return b;if(n(e)||(e=o(e)),u)return s(u.mul(this.low,this.high,e.low,e.high),u.get_high(),this.unsigned);if(e.isZero())return b;if(this.eq(k))return e.isOdd()?k:b;if(e.eq(k))return this.isOdd()?k:b;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return a(this.toNumber()*e.toNumber(),this.unsigned);var t=65535&this.high,r=this.low>>>16,i=65535&this.low,c=65535&e.high,l=e.low>>>16,d=65535&e.low,h=0,p=0,f=0,g=0;return f+=(g+=i*d)>>>16,p+=(f+=r*d)>>>16,f&=65535,p+=(f+=i*l)>>>16,h+=(p+=t*d)>>>16,p&=65535,h+=(p+=r*l)>>>16,p&=65535,h+=(p+=i*c)>>>16,h+=(this.high>>>16)*d+t*l+r*c+i*(e.high>>>16),s((f&=65535)<<16|(g&=65535),(h&=65535)<<16|(p&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(n(e)||(e=o(e)),e.isZero())throw Error("division by zero");var t,r,i;if(u)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?s((this.unsigned?u.div_u:u.div_s)(this.low,this.high,e.low,e.high),u.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?g:b;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return g;if(e.gt(this.shru(1)))return x;i=g}else{if(this.eq(k))return e.eq(y)||e.eq(v)?k:e.eq(k)?y:(t=this.shr(1).div(e).shl(1)).eq(b)?e.isNegative()?y:v:(r=this.sub(e.mul(t)),i=t.add(r.div(e)));if(e.eq(k))return this.unsigned?g:b;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=b}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var c=Math.ceil(Math.log(t)/Math.LN2),l=c<=48?1:d(2,c-48),h=a(t),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=a(t-=l,this.unsigned)).mul(e);h.isZero()&&(h=y),i=i.add(h),r=r.sub(p)}return i},I.div=I.divide,I.modulo=function(e){return n(e)||(e=o(e)),u?s((this.unsigned?u.rem_u:u.rem_s)(this.low,this.high,e.low,e.high),u.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return s(~this.low,~this.high,this.unsigned)},I.and=function(e){return n(e)||(e=o(e)),s(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return n(e)||(e=o(e)),s(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return n(e)||(e=o(e)),s(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return n(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?s(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):s(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return n(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?s(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):s(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(n(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?s(this.low>>>e|t<<32-e,t>>>e,this.unsigned):s(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?s(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:s(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},t.fromBytes=function(e,n,r){return r?t.fromBytesLE(e,n):t.fromBytesBE(e,n)},t.fromBytesLE=function(e,n){return new t(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)},t.fromBytesBE=function(e,n){return new t(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)}},"1ncO":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("tFNL"),u=n("6D6q"),c=n("6RbH");const l=Object(u.b)({conv3d_:function(e,t,n,u,l="NDHWC",d=[1,1,1]){const h=Object(s.a)(e,"x","conv3d"),p=Object(s.a)(t,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),i.b(5===p.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${p.rank}.`)),i.b(f.shape[4]===p.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${p.shape[3]}.`)),i.b(Object(o.i)(n,d),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),i.b("NDHWC"===l,(()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`));const b=r.a.runKernel(a.G,{x:f,filter:p},{strides:n,pad:u,dataFormat:l,dilations:d});return m?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},2:function(){},"28uj":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("beMT"),a=n("VncX"),s=n("axJg"),i=n("XjY9"),o=n("jyi7"),u=n("6D6q");const c=Object(u.b)({logicalXor_:function(e,t){const n=Object(r.a)(e,"a","logicalXor","bool"),u=Object(r.a)(t,"b","logicalXor","bool");return Object(a.assertAndGetBroadcastShape)(n.shape,u.shape),Object(s.a)(Object(o.a)(e,t),Object(i.a)(Object(s.a)(e,t)))}})},"29Vw":function(e,t,n){"use strict";function r(e,t,n){const r=Object(a.c)(e,n);return Object(s.a)(e,t,r,n)}n.d(t,"a",(function(){return r}));var a=n("beMT"),s=n("/en9")},"2pXM":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({acosh_:function(e){const t=Object(s.a)(e,"x","acosh");return r.a.runKernel(a.c,{x:t})}})},"2qJO":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({sqrt_:function(e){const t=Object(s.a)(e,"x","sqrt","float32");return r.a.runKernel(a.Qc,{x:t})}})},3:function(){},"393e":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({imag_:function(e){const t=Object(s.a)(e,"input","imag");return r.a.runKernel(a.tb,{input:t})}})},"3IVC":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("beMT"),a=n("qCmv"),s=n("6D6q"),i=n("6RbH");const o=Object(s.b)({squeeze_:function(e,t){const n=Object(r.a)(e,"x","squeeze");return Object(i.a)(n,Object(a.Q)(n.shape,t).newShape)}})},"3hN3":function(e,t,n){"use strict";function r(e,t,n){return a.a.runKernel(s.fb,{},{shape:e,value:t,dtype:n})}n.d(t,"a",(function(){return r}));var a=n("QCRY"),s=n("f7fD")},"3o7l":function(e,t,n){"use strict";function r(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}r(n,t,e)}function s(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let o=1;for(let e=a;e<s;++e)o*=n[e];const u=a<1?1:a;return{sliceRank:a,numUpdates:Object(i.O)(t.shape)/u,sliceSize:o,strides:[...Object(i.j)(n.slice(0,a)),1],outputSize:Object(i.O)(n)}}n.r(t),n.d(t,"validateUpdateShape",(function(){return r})),n.d(t,"validateInput",(function(){return a})),n.d(t,"calculateShapes",(function(){return s}));var i=n("qCmv")},4:function(){},"41DX":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},"4JSp":function(e,t,n){"use strict";function r(e,t,n){return null==n&&(n=a()),s(e,t,((e,t)=>c(e,t,n)))}function a(){return 32===p.a.backend.floatPrecision()?.001:g}function s(e,t,n){let r=!0;if((Object(m.A)(e)||Object(m.A)(t))&&(r=!1),Object(m.A)(e)&&Object(m.A)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(f.c)(e),r=Object(f.c)(t);if(!Object(m.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=Object(m.A)(e)?e:Object(m.m)(e),s=Object(m.A)(t)?t:Object(m.m)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function i(e,t){e().then((()=>t.fail()),(()=>t()))}function o(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Object(m.z)(e)||Object(m.z)(e[0])||Object(m.z)(t)||Object(m.z)(t[0])?s(e,n,((e,t)=>e==t)):s(e,t,((e,t)=>c(e,t,0)))}function u(e,t,n){if(null==n&&(n=a()),!c(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function c(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function l(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function d(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function h(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?h(n):e[t]=Object(b.encodeString)(n)}return e}n.r(t),n.d(t,"TEST_EPSILON_FLOAT16",(function(){return g})),n.d(t,"expectArraysClose",(function(){return r})),n.d(t,"testEpsilon",(function(){return a})),n.d(t,"expectPromiseToFail",(function(){return i})),n.d(t,"expectArraysEqual",(function(){return o})),n.d(t,"expectNumbersClose",(function(){return u})),n.d(t,"expectValuesInRange",(function(){return l})),n.d(t,"expectArrayBuffersEqual",(function(){return d})),n.d(t,"encodeStrings",(function(){return h}));var p=n("QCRY"),f=n("beMT"),m=n("qCmv"),b=n("Mxc4");const g=.1},"4px1":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("beMT"),a=n("qCmv"),s=n("UY8A"),i=n("tFNL"),o=n("6D6q"),u=n("6RbH");const c=Object(o.b)({conv1d_:function(e,t,n,o,c="NWC",l=1,d){const h=Object(r.a)(e,"x","conv1d"),p=Object(r.a)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1]])),a.b(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.b(3===p.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`)),i.a("conv1d",o,d),a.b(f.shape[2]===p.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`)),a.b(i.i(n,l),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`)),a.b("NWC"===c,(()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`));const b=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(u.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],v=Object(s.a)(g,b,y,o,"NHWC",x,d);return m?Object(u.a)(v,[v.shape[2],v.shape[3]]):Object(u.a)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},5:function(){},"5IsQ":function(e){function t(){throw new Error("setTimeout has not been defined")}function n(){throw new Error("clearTimeout has not been defined")}function r(e){if(u===setTimeout)return setTimeout(e,0);if((u===t||!u)&&setTimeout)return u=setTimeout,setTimeout(e,0);try{return u(e,0)}catch(t){try{return u.call(null,e,0)}catch(t){return u.call(this,e,0)}}}function a(){p&&d&&(p=!1,d.length?h=d.concat(h):f=-1,h.length&&s())}function s(){if(!p){var e=r(a);p=!0;for(var t=h.length;t;){for(d=h,h=[];++f<t;)d&&d[f].run();f=-1,t=h.length}d=null,p=!1,function(e){if(c===clearTimeout)return clearTimeout(e);if((c===n||!c)&&clearTimeout)return c=clearTimeout,clearTimeout(e);try{c(e)}catch(t){try{return c.call(null,e)}catch(t){return c.call(this,e)}}}(e)}}function i(e,t){this.fun=e,this.array=t}function o(){}var u,c,l=e.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:t}catch(e){u=t}try{c="function"==typeof clearTimeout?clearTimeout:n}catch(e){c=n}}();var d,h=[],p=!1,f=-1;l.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];h.push(new i(e,t)),1!==h.length||p||r(s)},i.prototype.run=function(){this.fun.apply(null,this.array)},l.title="browser",l.browser=!0,l.env={},l.argv=[],l.version="",l.versions={},l.on=o,l.addListener=o,l.once=o,l.off=o,l.removeListener=o,l.removeAllListeners=o,l.emit=o,l.prependListener=o,l.prependOnceListener=o,l.listeners=function(){return[]},l.binding=function(){throw new Error("process.binding is not supported")},l.cwd=function(){return"/"},l.chdir=function(){throw new Error("process.chdir is not supported")},l.umask=function(){return 0}},"5gGe":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({reverse_:function(e,t){const n=Object(s.a)(e,"x","reverse");return r.a.runKernel(a.vc,{x:n},{dims:t})}})},"5oWy":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({tile_:function(e,t){const n=Object(s.a)(e,"x","tile","string_or_numeric");return i.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`)),r.a.runKernel(a.cd,{x:n},{reps:t})}})},6:function(){},"6D6q":function(e,t,n){"use strict";function r(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=i;const o=(...e)=>{a.a.startScope(n);try{const t=r(...e);return Object(s.x)(t)&&console.error("Cannot return a Promise inside of tidy."),a.a.endScope(t),t}catch(e){throw a.a.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return r}));var a=n("QCRY"),s=n("qCmv");const i="__op"},"6RbH":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({reshape_:function(e,t){const n=Object(s.a)(e,"x","reshape","string_or_numeric");return r.a.runKernel(a.qc,{x:n},{shape:t})}})},"6RlV":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({prelu_:function(e,t){const n=Object(s.a)(e,"x","prelu"),i=Object(s.a)(t,"alpha","prelu");return r.a.runKernel(a.ic,{x:n,alpha:i})}})},"6o7b":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({gatherND_:function(e,t){const n=Object(s.a)(t,"indices","gatherND","int32"),i=Object(s.a)(e,"x","gatherND","string_or_numeric");return r.a.runKernel(a.nb,{params:i,indices:n})}})},7:function(){},"7JZ3":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("6D6q");const u=Object(o.b)({sub_:function(e,t){let n=Object(i.a)(e,"a","sub"),o=Object(i.a)(t,"b","sub");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.Yc,{a:n,b:o})}})},"7Uyg":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},"7exT":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({stack_:function(e,t=0){const n=Object(s.b)(e,"tensors","stack","string_or_numeric");return i.b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor")),r.a.runKernel(a.ec,n,{axis:t})}})},"7wfN":function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,"a",(function(){return r}))},"81bp":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({argMax_:function(e,t=0){const n=Object(s.a)(e,"x","argMax");return r.a.runKernel(a.h,{x:n},{axis:t})}})},"85g6":function(e,t,n){var r=n("SD+8"),a=n("9HKi"),s=n("bH8F"),i=n("ZJR+"),o=n("q/Pd"),u=n("AWBs"),c=n("D2ml");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,e.exports=c},"8Jek":function(e,t){var n;!function(){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var s=typeof n;if("string"===s||"number"===s)e.push(n);else if(Array.isArray(n)){if(n.length){var i=r.apply(null,n);i&&e.push(i)}}else if("object"===s)if(n.toString===Object.prototype.toString)for(var o in n)a.call(n,o)&&n[o]&&e.push(o);else e.push(n.toString())}}return e.join(" ")}var a={}.hasOwnProperty;e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},"9+YK":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({topk_:function(e,t=1,n=!0){const i=Object(s.a)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},c={k:t,sorted:n},[l,d]=r.a.runKernel(a.dd,u,c);return{values:l,indices:d}}})},"9HKi":function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},"9J2r":function(e,t,n){"use strict";(function(e){async function r(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:s(await Promise.all(r)),specs:n}}function a(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=Object(g.O)(o);let c;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=y.a[n.dtype],l=e.slice(a,a+u*o),d="uint8"===n.dtype?new Uint8Array(l):new Uint16Array(l);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){c=new Float32Array(d.length);for(let e=0;e<d.length;e++){c[e]=d[e]*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=f()),c=r(d)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);c=new Int32Array(d.length);for(let e=0;e<d.length;e++){c[e]=Math.round(d[e]*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=Object(g.O)(s.shape);c=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));c.push(n),a+=t}}else{const r=y.a[i],s=e.slice(a,a+u*r);if("float32"===i)c=new Float32Array(s);else if("int32"===i)c=new Int32Array(s);else if("bool"===i)c=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{c=new Float32Array(s);const e=new Float32Array(c.length/2),r=new Float32Array(c.length/2);for(let t=0;t<e.length;t++)e[t]=c[2*t],r[t]=c[2*t+1];const a=Object(b.a)(e,o,"float32"),i=Object(b.a)(r,o,"float32");n[t]=Object(m.a)(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=Object(b.a)(c,o,i))}return n}function s(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}function i(t){return x?e.byteLength(t):new Blob([t]).size}function o(t){if(x)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function u(t){if(x){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function c(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function l(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function d(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function h(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function p(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:i(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:i(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function f(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a];s[a]=e[n[i>>10]+(1023&i)]+t[i>>10]}return new Float32Array(a)}}n.d(t,"f",(function(){return r})),n.d(t,"e",(function(){return a})),n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return u})),n.d(t,"d",(function(){return c})),n.d(t,"c",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"g",(function(){return h})),n.d(t,"h",(function(){return p}));var m=n("bsxM"),b=n("29Vw"),g=n("qCmv"),y=n("dkjg");const x=void 0!==e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa)}).call(this,n("qykS").Buffer)},"9MFc":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("QmCl"),a=n("beMT");const s=async function(e){const t=Object(a.a)(e,"condition","whereAsync","bool"),n=await t.data(),s=Object(r.a)(t.shape,n);return e!==t&&t.dispose(),s}},"9O3H":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q"),u=n("6RbH");const c=Object(o.b)({dilation2d_:function(e,t,n,o,c=[1,1],l="NHWC"){const d=Object(s.a)(e,"x","dilation2d"),h=Object(s.a)(t,"filter","dilation2d");i.b(3===d.rank||4===d.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`)),i.b(3===h.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${h.rank}.`)),i.b("NHWC"===l,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${l}`));let p=d,f=!1;3===d.rank&&(p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m=r.a.runKernel(a.T,{x:p,filter:h},{strides:n,pad:o,dilations:c});return f?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},"9oR1":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({real_:function(e){const t=Object(s.a)(e,"input","real");return r.a.runKernel(a.lc,{input:t})}})},"9rnT":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("QCRY"),a=n("beMT"),s=n("6D6q");const i=Object(s.b)({square_:function(e){const t=Object(a.a)(e,"x","square");return r.a.runKernel("Square",{x:t},{})}})},"AN/T":function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},ANbN:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},AWBs:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},B4Jo:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({log1p_:function(e){const t=Object(s.a)(e,"x","log1p");return r.a.runKernel(a.Eb,{x:t})}})},B6u8:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],r[a]=n^=(e^=e<<13)^e<<9,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},BIT7:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},BKSR:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6RbH"),u=n("6D6q");const c=Object(u.b)({batchNorm_:function(e,t,n,u,c,l){null==l&&(l=.001);const d=Object(s.a)(e,"x","batchNorm"),h=Object(s.a)(t,"mean","batchNorm"),p=Object(s.a)(n,"variance","batchNorm");let f,m;null!=c&&(f=Object(s.a)(c,"scale","batchNorm")),null!=u&&(m=Object(s.a)(u,"offset","batchNorm")),i.b(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.b(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.b(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const b=function(e){let t;return t=0===e.rank||1===e.rank?Object(o.a)(e,[1,1,1,e.size]):2===e.rank?Object(o.a)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),g=r.a.runKernel(a.kb,{x:b,scale:f,offset:m,mean:h,variance:p},{varianceEpsilon:l});return Object(o.a)(g,d.shape)}})},BMWi:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({all_:function(e,t=null,n=!1){const i=Object(s.a)(e,"x","all","bool");return r.a.runKernel(a.f,{x:i},{axis:t,keepDims:n})}})},BQvL:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({atanh_:function(e){const t=Object(s.a)(e,"x","atanh");return r.a.runKernel(a.n,{x:t})}})},BRAv:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]},By71:function(e,t,n){"use strict";function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function s(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function i(e,t){return a(e,t.map((()=>1)),t)}function o(e,t,n){d.b(r(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function u(e,t){if(r(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function l(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return a})),n.d(t,"d",(function(){return s})),n.d(t,"e",(function(){return i})),n.d(t,"a",(function(){return o})),n.d(t,"f",(function(){return u})),n.d(t,"h",(function(){return c})),n.d(t,"g",(function(){return l}));var d=n("qCmv")},C683:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({selu_:function(e){const t=Object(s.a)(e,"x","selu");return r.a.runKernel(a.Bc,{x:t})}})},CGXl:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q"),u=n("6RbH");const c=Object(o.b)({localResponseNormalization_:function(e,t=5,n=1,o=1,c=.5){const l=Object(s.a)(e,"x","localResponseNormalization");i.b(4===l.rank||3===l.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`)),i.b(i.v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let d=l,h=!1;3===l.rank&&(h=!0,d=Object(u.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p=r.a.runKernel(a.xb,{x:d},{depthRadius:t,bias:n,alpha:o,beta:c});return h?Object(u.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},Cn86:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({unique_:function(e,t=0){const n=Object(s.a)(e,"x","unique","string_or_numeric");Object(i.b)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:t},[c,l]=r.a.runKernel(a.gd,o,u);return{values:c,indices:l}}})},D2ml:function(e,t,n){var r;!function(a,s){function i(e,t,n){var r=[],i=l(c((t=1==t?{entropy:!0}:t||{}).entropy?[e,d(a)]:null==e?function(){try{var e;return h&&(e=h.randomBytes)?e=e(f):(e=new Uint8Array(f),(p.crypto||p.msCrypto).getRandomValues(e)),d(e)}catch(e){var t=p.navigator,n=t&&t.plugins;return[+new Date,p,n,p.screen,d(a)]}}():e,3),r),y=new o(r),x=function(){for(var e=y.g(6),t=m,n=0;e<b;)e=(e+n)*f,t*=f,n=y.g(1);for(;e>=g;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|y.g(4)},x.quick=function(){return y.g(4)/4294967296},x.double=x,l(d(y.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&u(r,y),e.state=function(){return u(y,{})}),n?(s.random=e,t):e})(x,i,"global"in t?t.global:this==s,t.state)}function o(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<f;)i[a]=a++;for(a=0;a<f;a++)i[a]=i[s=y&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=y&a+1],n=n*f+i[y&(i[a]=i[s=y&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(f)}function u(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function c(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(c(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function l(e,t){for(var n,r=e+"",a=0;a<r.length;)t[y&a]=y&(n^=19*t[y&a])+r.charCodeAt(a++);return d(t)}function d(e){return String.fromCharCode.apply(0,e)}var h,p=(0,eval)("this"),f=256,m=s.pow(f,6),b=s.pow(2,52),g=2*b,y=255;if(s.seedrandom=i,l(s.random(),a),e.exports){e.exports=i;try{h=n(3)}catch(e){}}else void 0===(r=function(){return i}.call(t,n,t,e))||(e.exports=r)}([],Math)},DIJJ:function(e,t,n){"use strict";function r(e,t,n){const r=e.shape.length;v.b(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),v.b(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)v.b(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function a(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function s(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function i(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function o(e,t,n){return n<=e?n:n-(t-1)}function u(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function c(e,t,n,r,a,s,o,u,c){const m=e.length;let b=new Array(m),g=new Array(m),y=new Array(m);if(t.length&&n>0){const c=t[0],h=n+1;b=l(o,c,h,r,e),g=d(u,c,h,a,e),y=i(s,c,h,e)}else for(let t=0;t<m;t++)b[t]=p(o,r,s,e,t,c),g[t]=f(u,a,s,e,t,c),y[t]=h(s,t,c);return{begin:b,end:g,strides:y}}function l(e,t,n,r,a){const s=[...a],i=u(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=o(t,n,a);let u=r[i];e&1<<i&&(u=0),s[a]=u}return s}function d(e,t,n,r,a){const s=[...a],i=u(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=o(t,n,a);let u=r[i];e&1<<i&&(u=Number.MAX_SAFE_INTEGER),s[a]=u}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=v.i(0,s[e],a[e])}return s}function h(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function p(e,t,n,r,a,s){let i=t[a];(e&1<<a||s&1<<a||null==i)&&(i=(n[a]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const o=r[a];return i<0&&(i+=o),i=v.i(0,i,o-1),i}function f(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?v.i(0,i,u):v.i(-1,i,u-1),i}function m(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function b(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function g(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{v.b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(v.b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function y(e,t,n,r,a,s,i,o,u){let c;if(null==r?(c=new Array(t.length),c.fill(1)):c=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<d.dims;e++)l&&0!=(1<<e&o)&&d.numAddAxisAfterEllipsis++,1<<e&i&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,m=!0;const b=[],g=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){b.push(n?1:-1);continue}const a=[h.beginMask&1<<t,h.endMask&1<<t],s=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];const i=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){const e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=x(h.begin[t],0,h.strides[t],r,a,s),h.end[t]=x(h.end[t],1,h.strides[t],r,a,s);const e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;p=p&&e,f=f&&(0===t&&1===h.strides[t]||e)}else p=p&&1===h.strides[t]&&i,f=f&&(0===t&&1===h.strides[t]||i);let o,u=!1;if(h.beginValid&&h.endValid?(o=h.end[t]-h.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=h.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=h.strides[t]<0?0:Math.trunc(o/h.strides[t])+(o%h.strides[t]!=0?1:0),b.push(e)}else b.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){const t=h.finalShapeGatherIndices[e];t>=0?g.push(b[t]):-2===t&&g.push(1)}return{finalShapeSparse:g.filter(((e,t)=>-2!==h.finalShapeGatherIndices[t])),finalShape:g,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function x(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}n.r(t),n.d(t,"assertParamsValid",(function(){return r})),n.d(t,"maskToAxes",(function(){return a})),n.d(t,"computeOutShape",(function(){return s})),n.d(t,"stridesWithElidedDims",(function(){return i})),n.d(t,"getNormalizedAxes",(function(){return c})),n.d(t,"startIndicesWithElidedDims",(function(){return l})),n.d(t,"stopIndicesWithElidedDims",(function(){return d})),n.d(t,"stridesForAxis",(function(){return h})),n.d(t,"startForAxis",(function(){return p})),n.d(t,"stopForAxis",(function(){return f})),n.d(t,"isSliceContinous",(function(){return m})),n.d(t,"computeFlatOffset",(function(){return b})),n.d(t,"parseSliceParams",(function(){return g})),n.d(t,"sliceInfo",(function(){return y}));var v=n("qCmv")},DOlg:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},DQih:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({asin_:function(e){const t=Object(s.a)(e,"x","asin");return r.a.runKernel(a.j,{x:t})}})},DSJG:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({gather_:function(e,t,n=0,i=0){const o=Object(s.a)(e,"x","gather"),u=Object(s.a)(t,"indices","gather","int32");return r.a.runKernel(a.ob,{x:o,indices:u},{axis:n,batchDims:i})}})},DYs2:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return i}));var r=n("HIu9"),a=n("cB/u"),s=n("OTPX");class i extends a.a{decodeUTF8(){return new o(this)}}class o extends s.a{constructor(e){super(),this.upstream=e,this.impl=new u(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends a.b{constructor(e){if(super(),this.upstream=e,Object(r.Ye)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(5);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let n,a;return!t.done&&(n=t.value,a=Object(r.Ye)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(e.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n("qykS").Buffer)},E2tP:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("0L9A"),a=n("beMT"),s=n("J/Nb"),i=n("tZSd"),o=n("6D6q"),u=n("XL4q"),c=n("ZRUZ");const l=Object(o.b)({divNoNan_:function(e,t){let n=Object(a.a)(e,"a","div"),o=Object(a.a)(t,"b","div");[n,o]=Object(r.makeTypesMatch)(n,o);const l=Object(s.a)(n,o),d=Object(c.a)(l),h=Object(i.a)(o,d);return Object(u.a)(h,d,l)}})},EOdB:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("beMT"),a=n("h6Fb"),s=n("6D6q");const i=Object(s.b)({conv2dTranspose_:function(e,t,n,s,i,o){const u=Object(r.a)(e,"x","conv2dTranspose"),c=Object(r.a)(t,"filter","conv2dTranspose");return Object(a.a)(n,u,c,s,i,"NHWC",o)}})},EXUU:function(e,t,n){"use strict";(function(e){function r(){return new Promise((e=>a((()=>e()))))}n.d(t,"a",(function(){return r}));const a="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==e?e:e=>e()}).call(this,n("oPUo").setImmediate)},EYoY:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},ExgN:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]},"F/nV":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({leakyRelu_:function(e,t=.2){const n=Object(s.a)(e,"x","leakyRelu");return r.a.runKernel(a.zb,{x:n},{alpha:t})}})},FA6U:function(e,t){"use strict";t.a={home:"home__uRcqa",recording:"recording__ZMpLP",stop:"stop__kVXmU"}},FGFg:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({sinh_:function(e){const t=Object(s.a)(e,"x","sinh");return r.a.runKernel(a.Fc,{x:t})}})},FZ96:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({denseBincount_:function(e,t,n,o=!1){const u=Object(s.a)(e,"x","denseBincount"),c=Object(s.a)(t,"weights","denseBincount");return i.b("int32"===u.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`)),i.b(u.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`)),i.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.b(c.size===u.size||0===c.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${c.shape}.`)),r.a.runKernel(a.N,{x:u,weights:c},{size:n,binaryOutput:o})}})},FaXh:function(e,t){t.read=function(e,t,n,r,a){var s,i,o=8*a-r-1,u=(1<<o)-1,c=u>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=e[t+d];for(d+=h,s=p&(1<<-l)-1,p>>=-l,l+=o;l>0;s=256*s+e[t+d],d+=h,l-=8);for(i=s&(1<<-l)-1,s>>=-l,l+=r;l>0;i=256*i+e[t+d],d+=h,l-=8);if(0===s)s=1-c;else{if(s===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),s-=c}return(p?-1:1)*i*Math.pow(2,s-r)},t.write=function(e,t,n,r,a,s){var i,o,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=l):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),(t+=i+d>=1?h/u:h*Math.pow(2,1-d))*u>=2&&(i++,u/=2),i+d>=l?(o=0,i=l):i+d>=1?(o=(t*u-1)*Math.pow(2,a),i+=d):(o=t*Math.pow(2,d-1)*Math.pow(2,a),i=0));a>=8;e[n+p]=255&o,p+=f,o/=256,a-=8);for(i=i<<a|o,c+=a;c>0;e[n+p]=255&i,p+=f,i/=256,c-=8);e[n+p-f]|=128*m}},Fx6Z:function(e){e.exports="function"==typeof Object.create?function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},"G/uF":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({sin_:function(e){const t=Object(s.a)(e,"x","sin","float32");return r.a.runKernel(a.Ec,{x:t})}})},GeDt:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("VWKH"),o=n("6D6q");const u=Object(o.b)({prod_:function(e,t=null,n=!1){let o=Object(s.a)(e,"x","prod");return"bool"===o.dtype&&(o=Object(i.a)(o,"int32")),r.a.runKernel(a.jc,{x:o},{axis:t,keepDims:n})}})},GhFD:function(e,t,n){"use strict";function r(e,t,n,r,s){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,o=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd;if("tensor"===i.type)return a(t.inputNames[i.inputIndexStart],n,r,s);if("tensors"===i.type){return t.inputNames.slice(e,o).map((e=>a(e,n,r,s)))}const u=a(t.inputNames.slice(e)[0],n,r,s),c=u.dataSync();return"number"===i.type?c[0]:d.si.toNestedArray(u.shape,c)}const o=t.attrParams[e];return o&&o.value}function a(e,t,n,r){const[a,s]=u(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[o(a,e)]));return void 0!==i?t[o(a,i)][s]:void 0}function s(e,t,n){return t[o(e,n.currentContextId)]}function i(e,t){const[n,r,a]=u(e);return[o(n,t&&t.currentContextId),r,a]}function o(e,t){return t?`${e}-${t}`:e}function u(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=3===t.length?t[1]:void 0;return[t[0],Number(t[t.length-1]),n]}function c(e,t,n){let a=r("pad",e,t,n);if("explicit"===a){a=r("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=a[2*e],s[e][1]=a[2*e+1];return s}return a}function l(e){return e.kept?e:Object(d.me)(e)}n.d(t,"d",(function(){return r})),n.d(t,"e",(function(){return a})),n.d(t,"f",(function(){return s})),n.d(t,"b",(function(){return i})),n.d(t,"g",(function(){return u})),n.d(t,"c",(function(){return c})),n.d(t,"a",(function(){return l}));var d=n("HIu9")},GkXz:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({ceil_:function(e){const t=Object(s.a)(e,"x","ceil","float32");return r.a.runKernel(a.y,{x:t})}})},H9TD:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({any_:function(e,t=null,n=!1){const i=Object(s.a)(e,"x","any","bool");return r.a.runKernel(a.g,{x:i},{axis:t,keepDims:n})}})},HIu9:function(e,t,n){"use strict";function r(){if(!Object(Te.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function a(e){const t=e.result;t.createObjectStore(_e,{keyPath:"modelPath"}),t.createObjectStore(Me,{keyPath:"modelPath"})}function s(e){return{info:[We,e,Ue].join(Ve),topology:[We,e,Ge].join(Ve),weightSpecs:[We,e,qe].join(Ve),weightData:[We,e,He].join(Ve),modelMetadata:[We,e,Ye].join(Ve)}}function i(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function o(e){const t=e.split(Ve);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Ve)}function u(e){if(-1===e.indexOf(Qe))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Je.getSchemes().join(",")}`);return{scheme:e.split(Qe)[0],path:e.split(Qe)[1]}}async function c(e,t,n=!1){Object(Be.b)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Ee.getLoadHandlers(e);Object(Be.b)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Object(Be.b)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=Ee.getSaveHandlers(t);Object(Be.b)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Object(Be.b)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=u(e).scheme,c=u(e).path,l=o===u(e).scheme,d=await a.load();n&&l&&await Je.getManager(o).removeModel(c);const h=await i.save(d);return n&&!l&&await Je.getManager(o).removeModel(c),h.modelArtifactsInfo}async function l(){const e=Je.getSchemes(),t={};for(const n of e){const e=await Je.getManager(n).listModels();for(const r in e){t[n+Qe+r]=e[r]}}return t}async function d(e){const t=u(e);return Je.getManager(t.scheme).removeModel(t.path)}async function h(e,t){return c(e,t,!1)}async function p(e,t){return c(e,t,!0)}function f(e){return new Promise((e=>setTimeout(e))).then(e)}function m(e){return new ut(e)}function b(e,t,n,r){!function(e){Object(Be.b)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Object(Be.b)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Object(Be.b)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Object(Be.b)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function g(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(Te.c)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await b(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await b(a,t.onProgress,.5,1)}async function y(e,t="",n,r){return x((e=>g(e,{requestInit:r})))(e,t,n)}function x(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u=ct.a["quantization"in e?e.quantization.dtype:e.dtype]*Be.O(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),d={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[h+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[h+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(Ce.e)(t,[e.manifestEntry]);for(const e in n)d[e]=n[e]})),h+=n})),d}}function v(){return v=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},v.apply(this,arguments)}function w(e){return null!=e.match(lt.URL_SCHEME_REGEX)}function O(e,t){return new lt(e,t)}function k(e,t){return O(e,t)}function I(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new ht(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ht({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ht({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function S(e){return new pt(e)}function j(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(Ot.c)(wt.jb,Ne.a.backendName)){return Ne.a.runKernel(wt.jb,{pixels:e},{numChannels:t})}const[u,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,d;if(i)l=e.getContext("2d").getImageData(0,0,u,c).data;else if(r||n)l=e.data;else if(s||a||o){if(null==It)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");It=new OffscreenCanvas(1,1).getContext("2d")}else It=document.createElement("canvas").getContext("2d");It.canvas.width=u,It.canvas.height=c,It.drawImage(e,0,0,u,c),l=It.getImageData(0,0,u,c).data}if(4===t)d=new Int32Array(l);else{const e=u*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=l[4*n+e]}const h=[c,u,t];return Object(kt.a)(d,h,"int32")}function N(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function T(e,t=3){let n=null;if(Object(Te.c)().getBool("WRAP_TO_IMAGEBITMAP")&&N(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return j(n,t)}async function C(e,t){let n=Object(ft.a)(e,"img","toPixels");if(!(e instanceof st.a)){const e=n;n=Object(nt.a)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}function E(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(Be.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let c=1;for(let e=s;e<n;++e)c*=o[e],u.push(o[e]);const l=[...Object(Be.j)(e.shape).map((e=>e/c)),1].slice(0,s);return[u,i,c,l]}function A(e){Object(Be.b)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Object(Be.b)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Object(Be.b)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ct.register(e)}function $(e,t){const n=e[0].length;e.forEach(((e,t)=>{Be.b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Be.b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)Be.b(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function R(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function D(e){return e<=hn?e:Object(Be.G)(e,Math.floor(Math.sqrt(e)))}function F(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function _(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function M(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function z(e,t,n,r=!0){const a=[];a.push(r?e[0]/n:e[0]*n);for(let n=1;n<e.length;++n)a.push(n<=t.length?r?t[n-1]*e[n]:e[n]/t[n-1]:e[n]);return a}function L(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function P(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function B(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function V(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function W(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function U(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function G(e,t){return{real:e[2*t],imag:e[2*t+1]}}function q(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function H(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Y(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function K(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(On,"").length)/wn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split(wn);Object(Be.b)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const c=o.length,l=[];for(let e=a.length;e<c;++e)l.push(e);return{allDims:o,summedDims:l,idDims:u}}function X(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Z(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Object(Be.b)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Q(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=ee(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function J(e){return e.every(((e,t)=>e===t))}function ee(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function te(e,t,n=0){let r=[];if("number"==typeof t)Object(Be.b)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Object(Be.b)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}Object(Be.b)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function ne(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function re(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function ae(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function se(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function ie(e,t){return`size ${e} must be non-negative, not ${t}`}function oe(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ue(e,t){return`Input to reshape is a SparseTensor with ${Object(Be.O)(e)}\n  dense values, but the requested shape requires a multiple of ${Object(Be.O)(t)}. inputShape=${e} outputShape= ${t}`}function ce(e,t){return`Input to reshape is a tensor with ${Object(Be.O)(e)} dense values, but the requested shape has ${Object(Be.O)(t)}. inputShape=${e} outputShape=${t}`}function le(){return"segment ids must be >= 0"}function de(){return"segment ids are not increasing"}function he(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function pe(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function fe(e,t){let n,r=!1;for(e<=hn?(n=e,r=!0):n=Object(Be.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(Be.G)(e,n+1);return n}function me(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)r.push(s!==t?e[s]:n);return r}function be(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,c=1,l=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),c*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),l*=e.shape[t];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}function ge(e){try{return e.map((e=>Object($t.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ye(e){return e.map((e=>Object($t.encodeString)(e)))}n.d(t,"d",(function(){return Ut})),n.d(t,"e",(function(){return qt})),n.d(t,"f",(function(){return Kt})),n.d(t,"g",(function(){return Qt})),n.d(t,"dc",(function(){return en})),n.d(t,"oc",(function(){return Wt})),n.d(t,"pc",(function(){return nn})),n.d(t,"wc",(function(){return tn})),n.d(t,"Oc",(function(){return Jt})),n.d(t,"sd",(function(){return st.a})),n.d(t,"td",(function(){return st.b})),n.d(t,"Bd",(function(){return st.c})),n.d(t,"yc",(function(){return rn.a})),n.d(t,"Th",(function(){return rn.b})),n.d(t,"ri",(function(){return rn.c})),n.d(t,"Ed",(function(){return an.b})),n.d(t,"Fd",(function(){return an.c})),n.d(t,"Gd",(function(){return an.d})),n.d(t,"Hd",(function(){return an.e})),n.d(t,"Id",(function(){return an.f})),n.d(t,"Jd",(function(){return an.g})),n.d(t,"Kd",(function(){return an.h})),n.d(t,"Ld",(function(){return an.i})),n.d(t,"Md",(function(){return an.j})),n.d(t,"Nd",(function(){return an.k})),n.d(t,"Od",(function(){return an.l})),n.d(t,"Pd",(function(){return an.m})),n.d(t,"Qd",(function(){return an.n})),n.d(t,"Rd",(function(){return an.o})),n.d(t,"Sd",(function(){return an.p})),n.d(t,"Td",(function(){return an.q})),n.d(t,"Wd",(function(){return an.r})),n.d(t,"be",(function(){return an.w})),n.d(t,"Xd",(function(){return an.s})),n.d(t,"Yd",(function(){return an.t})),n.d(t,"Zd",(function(){return an.u})),n.d(t,"ae",(function(){return an.v})),n.d(t,"ce",(function(){return an.x})),n.d(t,"ee",(function(){return an.z})),n.d(t,"fe",(function(){return an.A})),n.d(t,"ie",(function(){return an.B})),n.d(t,"je",(function(){return an.C})),n.d(t,"ke",(function(){return an.D})),n.d(t,"le",(function(){return an.E})),n.d(t,"me",(function(){return an.F})),n.d(t,"ne",(function(){return an.G})),n.d(t,"oe",(function(){return an.H})),n.d(t,"pe",(function(){return an.I})),n.d(t,"qe",(function(){return an.J})),n.d(t,"re",(function(){return an.K})),n.d(t,"se",(function(){return an.L})),n.d(t,"te",(function(){return an.M})),n.d(t,"ue",(function(){return an.N})),n.d(t,"ve",(function(){return an.O})),n.d(t,"we",(function(){return an.P})),n.d(t,"xe",(function(){return an.Q})),n.d(t,"ze",(function(){return an.R})),n.d(t,"Ae",(function(){return an.S})),n.d(t,"Ce",(function(){return an.U})),n.d(t,"Ee",(function(){return an.V})),n.d(t,"Ge",(function(){return an.W})),n.d(t,"He",(function(){return an.X})),n.d(t,"Je",(function(){return an.Y})),n.d(t,"Ke",(function(){return an.Z})),n.d(t,"Oe",(function(){return an.ab})),n.d(t,"Pe",(function(){return an.bb})),n.d(t,"Qe",(function(){return an.cb})),n.d(t,"Se",(function(){return an.eb})),n.d(t,"Te",(function(){return an.fb})),n.d(t,"Ze",(function(){return an.hb})),n.d(t,"af",(function(){return an.ib})),n.d(t,"bf",(function(){return an.jb})),n.d(t,"cf",(function(){return an.kb})),n.d(t,"df",(function(){return an.lb})),n.d(t,"ef",(function(){return an.mb})),n.d(t,"gf",(function(){return an.ob})),n.d(t,"jf",(function(){return an.pb})),n.d(t,"kf",(function(){return an.qb})),n.d(t,"mf",(function(){return an.sb})),n.d(t,"vf",(function(){return an.ub})),n.d(t,"wf",(function(){return an.vb})),n.d(t,"yf",(function(){return an.xb})),n.d(t,"Df",(function(){return an.Bb})),n.d(t,"Ef",(function(){return an.Cb})),n.d(t,"Ff",(function(){return an.Db})),n.d(t,"If",(function(){return an.Eb})),n.d(t,"Jf",(function(){return an.Fb})),n.d(t,"Kf",(function(){return an.Gb})),n.d(t,"Mf",(function(){return an.Ib})),n.d(t,"Nf",(function(){return an.Jb})),n.d(t,"Of",(function(){return an.Kb})),n.d(t,"Pf",(function(){return an.Lb})),n.d(t,"Qf",(function(){return an.Mb})),n.d(t,"Rf",(function(){return an.Nb})),n.d(t,"Sf",(function(){return an.Ob})),n.d(t,"Tf",(function(){return an.Pb})),n.d(t,"Uf",(function(){return an.Qb})),n.d(t,"Vf",(function(){return an.Rb})),n.d(t,"Wf",(function(){return an.Sb})),n.d(t,"Yf",(function(){return an.Ub})),n.d(t,"ag",(function(){return an.Vb})),n.d(t,"bg",(function(){return an.Wb})),n.d(t,"cg",(function(){return an.Xb})),n.d(t,"dg",(function(){return an.Yb})),n.d(t,"eg",(function(){return an.Zb})),n.d(t,"fg",(function(){return an.ac})),n.d(t,"hg",(function(){return an.bc})),n.d(t,"ig",(function(){return an.cc})),n.d(t,"jg",(function(){return an.dc})),n.d(t,"kg",(function(){return an.ec})),n.d(t,"lg",(function(){return an.fc})),n.d(t,"mg",(function(){return an.gc})),n.d(t,"og",(function(){return an.ic})),n.d(t,"pg",(function(){return an.jc})),n.d(t,"qg",(function(){return an.kc})),n.d(t,"rg",(function(){return an.lc})),n.d(t,"ug",(function(){return an.nc})),n.d(t,"vg",(function(){return an.oc})),n.d(t,"wg",(function(){return an.pc})),n.d(t,"xg",(function(){return an.qc})),n.d(t,"zg",(function(){return an.sc})),n.d(t,"Ag",(function(){return an.tc})),n.d(t,"Bg",(function(){return an.uc})),n.d(t,"Cg",(function(){return an.vc})),n.d(t,"Dg",(function(){return an.wc})),n.d(t,"Eg",(function(){return an.xc})),n.d(t,"Fg",(function(){return an.yc})),n.d(t,"Gg",(function(){return an.zc})),n.d(t,"Hg",(function(){return an.Ac})),n.d(t,"Ig",(function(){return an.Bc})),n.d(t,"Jg",(function(){return an.Cc})),n.d(t,"Lg",(function(){return an.Dc})),n.d(t,"Mg",(function(){return an.Ec})),n.d(t,"Ng",(function(){return an.Fc})),n.d(t,"Og",(function(){return an.Gc})),n.d(t,"Pg",(function(){return an.Hc})),n.d(t,"Rg",(function(){return an.Ic})),n.d(t,"Sg",(function(){return an.Jc})),n.d(t,"Wg",(function(){return an.Kc})),n.d(t,"Xg",(function(){return an.Lc})),n.d(t,"Zg",(function(){return an.Mc})),n.d(t,"ah",(function(){return an.Nc})),n.d(t,"bh",(function(){return an.Oc})),n.d(t,"ch",(function(){return an.Pc})),n.d(t,"dh",(function(){return an.Qc})),n.d(t,"eh",(function(){return an.Rc})),n.d(t,"gh",(function(){return an.Tc})),n.d(t,"hh",(function(){return an.Uc})),n.d(t,"ih",(function(){return an.Vc})),n.d(t,"lh",(function(){return an.Xc})),n.d(t,"mh",(function(){return an.Yc})),n.d(t,"qh",(function(){return an.Zc})),n.d(t,"rh",(function(){return an.ad})),n.d(t,"sh",(function(){return an.bd})),n.d(t,"uh",(function(){return an.dd})),n.d(t,"vh",(function(){return an.ed})),n.d(t,"wh",(function(){return an.fd})),n.d(t,"xh",(function(){return an.gd})),n.d(t,"yh",(function(){return an.hd})),n.d(t,"zh",(function(){return an.id})),n.d(t,"Ah",(function(){return an.jd})),n.d(t,"Ch",(function(){return an.kd})),n.d(t,"Dh",(function(){return an.ld})),n.d(t,"Eh",(function(){return an.md})),n.d(t,"ff",(function(){return an.nb})),n.d(t,"xf",(function(){return an.wb})),n.d(t,"Cf",(function(){return an.Ab})),n.d(t,"fh",(function(){return an.Sc})),n.d(t,"Ih",(function(){return an.qd})),n.d(t,"Jh",(function(){return an.rd})),n.d(t,"Kh",(function(){return an.sd})),n.d(t,"Lh",(function(){return an.td})),n.d(t,"Mh",(function(){return an.ud})),n.d(t,"Nh",(function(){return an.vd})),n.d(t,"Oh",(function(){return an.wd})),n.d(t,"Ph",(function(){return an.xd})),n.d(t,"Rh",(function(){return an.zd})),n.d(t,"Sh",(function(){return an.Ad})),n.d(t,"Uh",(function(){return an.Bd})),n.d(t,"Vh",(function(){return an.Cd})),n.d(t,"Wh",(function(){return an.Dd})),n.d(t,"Xh",(function(){return an.Ed})),n.d(t,"Yh",(function(){return an.Fd})),n.d(t,"Zh",(function(){return an.Gd})),n.d(t,"ai",(function(){return an.Hd})),n.d(t,"bi",(function(){return an.Id})),n.d(t,"ci",(function(){return an.Jd})),n.d(t,"gi",(function(){return an.Kd})),n.d(t,"ii",(function(){return an.Ld})),n.d(t,"li",(function(){return an.Nd})),n.d(t,"mi",(function(){return an.Od})),n.d(t,"pi",(function(){return an.Pd})),n.d(t,"qi",(function(){return an.Qd})),n.d(t,"vi",(function(){return an.Rd})),n.d(t,"yi",(function(){return an.Sd})),n.d(t,"zi",(function(){return an.Td})),n.d(t,"Ai",(function(){return an.Ud})),n.d(t,"Bi",(function(){return an.Vd})),n.d(t,"de",(function(){return an.y})),n.d(t,"ki",(function(){return an.Md})),n.d(t,"tg",(function(){return an.mc})),n.d(t,"ng",(function(){return an.hc})),n.d(t,"jh",(function(){return an.Wc})),n.d(t,"Gh",(function(){return an.od})),n.d(t,"nf",(function(){return an.tb})),n.d(t,"Re",(function(){return an.db})),n.d(t,"We",(function(){return an.gb})),n.d(t,"Be",(function(){return an.T})),n.d(t,"Af",(function(){return an.zb})),n.d(t,"yg",(function(){return an.rc})),n.d(t,"lc",(function(){return an.a})),n.d(t,"zf",(function(){return an.yb})),n.d(t,"Lf",(function(){return an.Hb})),n.d(t,"Xf",(function(){return an.Tb})),n.d(t,"Hh",(function(){return an.pd})),n.d(t,"lf",(function(){return an.rb})),n.d(t,"th",(function(){return an.cd})),n.d(t,"Fh",(function(){return an.nd})),n.d(t,"Qh",(function(){return an.yd})),n.d(t,"Cc",(function(){return sn.a})),n.d(t,"ji",(function(){return on})),n.d(t,"Ve",(function(){return Dt.g})),n.d(t,"Ue",(function(){return Dt.f})),n.d(t,"Le",(function(){return Dt.c})),n.d(t,"Fe",(function(){return Dt.b})),n.d(t,"Ne",(function(){return Dt.e})),n.d(t,"Xe",(function(){return Dt.h})),n.d(t,"gg",(function(){return Dt.m})),n.d(t,"Kg",(function(){return Dt.n})),n.d(t,"fi",(function(){return Dt.t})),n.d(t,"Me",(function(){return Dt.d})),n.d(t,"Gf",(function(){return Dt.l})),n.d(t,"hi",(function(){return Dt.u})),n.d(t,"oh",(function(){return Dt.r})),n.d(t,"Qg",(function(){return Dt.o})),n.d(t,"pf",(function(){return Dt.k})),n.d(t,"Yg",(function(){return Dt.q})),n.d(t,"hf",(function(){return Dt.i})),n.d(t,"if",(function(){return Dt.j})),n.d(t,"Tg",(function(){return Dt.p})),n.d(t,"Ud",(function(){return Dt.a})),n.d(t,"ph",(function(){return Dt.s})),n.d(t,"rf",(function(){return Ot.c})),n.d(t,"qf",(function(){return Ot.b})),n.d(t,"sf",(function(){return Ot.d})),n.d(t,"Vg",(function(){return Ot.f})),n.d(t,"Ug",(function(){return Ot.e})),n.d(t,"oi",(function(){return Ot.h})),n.d(t,"ni",(function(){return Ot.g})),n.d(t,"ye",(function(){return Ot.a})),n.d(t,"De",(function(){return Bt.a})),n.d(t,"tf",(function(){return Bt.b})),n.d(t,"uf",(function(){return Bt.c})),n.d(t,"ti",(function(){return Bt.d})),n.d(t,"ui",(function(){return Bt.e})),n.d(t,"wi",(function(){return Bt.f})),n.d(t,"fb",(function(){return Te.b})),n.d(t,"Ye",(function(){return Te.c})),n.d(t,"bb",(function(){return Te.a})),n.d(t,"xi",(function(){return Rt})),n.d(t,"sg",(function(){return un.a})),n.d(t,"he",(function(){return we})),n.d(t,"Bf",(function(){return xe})),n.d(t,"Zf",(function(){return ve})),n.d(t,"nh",(function(){return ke})),n.d(t,"ei",(function(){return At})),n.d(t,"si",(function(){return $t})),n.d(t,"Vd",(function(){return Se})),n.d(t,"ge",(function(){return vt})),n.d(t,"di",(function(){return Et})),n.d(t,"Bh",(function(){return Nt})),n.d(t,"of",(function(){return Oe})),n.d(t,"kh",(function(){return jt})),n.d(t,"Ie",(function(){return kn})),n.d(t,"Hf",(function(){return je})),n.d(t,"Eb",(function(){return jn.b})),n.d(t,"R",(function(){return jn.a})),n.d(t,"a",(function(){return wt.a})),n.d(t,"b",(function(){return wt.b})),n.d(t,"c",(function(){return wt.c})),n.d(t,"h",(function(){return wt.d})),n.d(t,"i",(function(){return wt.e})),n.d(t,"j",(function(){return wt.f})),n.d(t,"k",(function(){return wt.g})),n.d(t,"l",(function(){return wt.h})),n.d(t,"m",(function(){return wt.i})),n.d(t,"n",(function(){return wt.j})),n.d(t,"o",(function(){return wt.k})),n.d(t,"p",(function(){return wt.l})),n.d(t,"r",(function(){return wt.n})),n.d(t,"q",(function(){return wt.m})),n.d(t,"s",(function(){return wt.o})),n.d(t,"v",(function(){return wt.r})),n.d(t,"t",(function(){return wt.p})),n.d(t,"u",(function(){return wt.q})),n.d(t,"w",(function(){return wt.s})),n.d(t,"x",(function(){return wt.t})),n.d(t,"y",(function(){return wt.u})),n.d(t,"A",(function(){return wt.w})),n.d(t,"z",(function(){return wt.v})),n.d(t,"B",(function(){return wt.x})),n.d(t,"C",(function(){return wt.y})),n.d(t,"D",(function(){return wt.z})),n.d(t,"E",(function(){return wt.A})),n.d(t,"F",(function(){return wt.B})),n.d(t,"G",(function(){return wt.C})),n.d(t,"H",(function(){return wt.D})),n.d(t,"I",(function(){return wt.E})),n.d(t,"J",(function(){return wt.F})),n.d(t,"K",(function(){return wt.G})),n.d(t,"L",(function(){return wt.H})),n.d(t,"M",(function(){return wt.I})),n.d(t,"N",(function(){return wt.J})),n.d(t,"O",(function(){return wt.K})),n.d(t,"Q",(function(){return wt.M})),n.d(t,"P",(function(){return wt.L})),n.d(t,"S",(function(){return wt.N})),n.d(t,"T",(function(){return wt.O})),n.d(t,"U",(function(){return wt.P})),n.d(t,"V",(function(){return wt.Q})),n.d(t,"W",(function(){return wt.R})),n.d(t,"X",(function(){return wt.S})),n.d(t,"Y",(function(){return wt.T})),n.d(t,"ab",(function(){return wt.V})),n.d(t,"Z",(function(){return wt.U})),n.d(t,"Ac",(function(){return wt.mc})),n.d(t,"cb",(function(){return wt.W})),n.d(t,"db",(function(){return wt.X})),n.d(t,"eb",(function(){return wt.Y})),n.d(t,"hb",(function(){return wt.ab})),n.d(t,"gb",(function(){return wt.Z})),n.d(t,"ib",(function(){return wt.bb})),n.d(t,"jb",(function(){return wt.cb})),n.d(t,"kb",(function(){return wt.db})),n.d(t,"lb",(function(){return wt.eb})),n.d(t,"mb",(function(){return wt.fb})),n.d(t,"nb",(function(){return wt.gb})),n.d(t,"ob",(function(){return wt.hb})),n.d(t,"pb",(function(){return wt.ib})),n.d(t,"rb",(function(){return wt.kb})),n.d(t,"vb",(function(){return wt.ob})),n.d(t,"ub",(function(){return wt.nb})),n.d(t,"wb",(function(){return wt.pb})),n.d(t,"xb",(function(){return wt.qb})),n.d(t,"zb",(function(){return wt.sb})),n.d(t,"yb",(function(){return wt.rb})),n.d(t,"Ab",(function(){return wt.tb})),n.d(t,"Bb",(function(){return wt.ub})),n.d(t,"Cb",(function(){return wt.vb})),n.d(t,"Db",(function(){return wt.wb})),n.d(t,"Hb",(function(){return wt.zb})),n.d(t,"Ib",(function(){return wt.Ab})),n.d(t,"Jb",(function(){return wt.Bb})),n.d(t,"Kb",(function(){return wt.Cb})),n.d(t,"Lb",(function(){return wt.Db})),n.d(t,"Mb",(function(){return wt.Eb})),n.d(t,"Ob",(function(){return wt.Gb})),n.d(t,"Pb",(function(){return wt.Hb})),n.d(t,"Qb",(function(){return wt.Ib})),n.d(t,"Nb",(function(){return wt.Fb})),n.d(t,"Fb",(function(){return wt.xb})),n.d(t,"Gb",(function(){return wt.yb})),n.d(t,"Rb",(function(){return wt.Jb})),n.d(t,"Xb",(function(){return wt.Pb})),n.d(t,"Sb",(function(){return wt.Kb})),n.d(t,"Vb",(function(){return wt.Nb})),n.d(t,"Tb",(function(){return wt.Lb})),n.d(t,"Ub",(function(){return wt.Mb})),n.d(t,"Wb",(function(){return wt.Ob})),n.d(t,"Yb",(function(){return wt.Qb})),n.d(t,"Zb",(function(){return wt.Rb})),n.d(t,"ac",(function(){return wt.Sb})),n.d(t,"bc",(function(){return wt.Tb})),n.d(t,"cc",(function(){return wt.Ub})),n.d(t,"ec",(function(){return wt.Vb})),n.d(t,"fc",(function(){return wt.Wb})),n.d(t,"gc",(function(){return wt.Xb})),n.d(t,"kc",(function(){return wt.bc})),n.d(t,"hc",(function(){return wt.Yb})),n.d(t,"ic",(function(){return wt.Zb})),n.d(t,"jc",(function(){return wt.ac})),n.d(t,"nc",(function(){return wt.dc})),n.d(t,"mc",(function(){return wt.cc})),n.d(t,"qc",(function(){return wt.ec})),n.d(t,"rc",(function(){return wt.fc})),n.d(t,"sc",(function(){return wt.gc})),n.d(t,"tc",(function(){return wt.hc})),n.d(t,"uc",(function(){return wt.ic})),n.d(t,"vc",(function(){return wt.jc})),n.d(t,"xc",(function(){return wt.kc})),n.d(t,"zc",(function(){return wt.lc})),n.d(t,"Bc",(function(){return wt.nc})),n.d(t,"Dc",(function(){return wt.oc})),n.d(t,"Fc",(function(){return wt.qc})),n.d(t,"Ic",(function(){return wt.tc})),n.d(t,"Jc",(function(){return wt.uc})),n.d(t,"Gc",(function(){return wt.rc})),n.d(t,"Hc",(function(){return wt.sc})),n.d(t,"Ec",(function(){return wt.pc})),n.d(t,"Kc",(function(){return wt.vc})),n.d(t,"Mc",(function(){return wt.xc})),n.d(t,"Nc",(function(){return wt.yc})),n.d(t,"Pc",(function(){return wt.zc})),n.d(t,"Qc",(function(){return wt.Ac})),n.d(t,"Rc",(function(){return wt.Bc})),n.d(t,"Wc",(function(){return wt.Gc})),n.d(t,"Uc",(function(){return wt.Ec})),n.d(t,"Vc",(function(){return wt.Fc})),n.d(t,"Tc",(function(){return wt.Dc})),n.d(t,"Sc",(function(){return wt.Cc})),n.d(t,"Yc",(function(){return wt.Ic})),n.d(t,"gd",(function(){return wt.Qc})),n.d(t,"pd",(function(){return wt.Zc})),n.d(t,"Zc",(function(){return wt.Jc})),n.d(t,"fd",(function(){return wt.Pc})),n.d(t,"Xc",(function(){return wt.Hc})),n.d(t,"ad",(function(){return wt.Kc})),n.d(t,"bd",(function(){return wt.Lc})),n.d(t,"cd",(function(){return wt.Mc})),n.d(t,"dd",(function(){return wt.Nc})),n.d(t,"ed",(function(){return wt.Oc})),n.d(t,"id",(function(){return wt.Sc})),n.d(t,"hd",(function(){return wt.Rc})),n.d(t,"kd",(function(){return wt.Uc})),n.d(t,"ld",(function(){return wt.Vc})),n.d(t,"md",(function(){return wt.Wc})),n.d(t,"nd",(function(){return wt.Xc})),n.d(t,"od",(function(){return wt.Yc})),n.d(t,"qd",(function(){return wt.ad})),n.d(t,"rd",(function(){return wt.bd})),n.d(t,"ud",(function(){return wt.cd})),n.d(t,"vd",(function(){return wt.dd})),n.d(t,"wd",(function(){return wt.ed})),n.d(t,"xd",(function(){return wt.fd})),n.d(t,"yd",(function(){return wt.gd})),n.d(t,"zd",(function(){return wt.hd})),n.d(t,"Ad",(function(){return wt.id})),n.d(t,"Cd",(function(){return wt.jd})),n.d(t,"jd",(function(){return wt.Tc})),n.d(t,"qb",(function(){return wt.jb})),n.d(t,"Lc",(function(){return wt.wc})),n.d(t,"Dd",(function(){return wt.kd})),n.d(t,"sb",(function(){return wt.lb})),n.d(t,"tb",(function(){return wt.mb}));var xe={};n.r(xe),n.d(xe,"copyModel",(function(){return h})),n.d(xe,"listModels",(function(){return l})),n.d(xe,"moveModel",(function(){return p})),n.d(xe,"removeModel",(function(){return d})),n.d(xe,"browserFiles",(function(){return m})),n.d(xe,"browserHTTPRequest",(function(){return k})),n.d(xe,"concatenateArrayBuffers",(function(){return Ce.d})),n.d(xe,"decodeWeights",(function(){return Ce.e})),n.d(xe,"encodeWeights",(function(){return Ce.f})),n.d(xe,"fromMemory",(function(){return I})),n.d(xe,"getLoadHandlers",(function(){return De})),n.d(xe,"getModelArtifactsForJSON",(function(){return Ce.g})),n.d(xe,"getModelArtifactsInfoForJSON",(function(){return Ce.h})),n.d(xe,"getSaveHandlers",(function(){return Re})),n.d(xe,"http",(function(){return O})),n.d(xe,"isHTTPScheme",(function(){return w})),n.d(xe,"loadWeights",(function(){return y})),n.d(xe,"registerLoadRouter",(function(){return $e})),n.d(xe,"registerSaveRouter",(function(){return Ae})),n.d(xe,"weightsLoaderFactory",(function(){return x})),n.d(xe,"withSaveHandler",(function(){return S}));var ve={};n.r(ve),n.d(ve,"confusionMatrix",(function(){return xt}));var we={};n.r(we),n.d(we,"fromPixelsAsync",(function(){return T})),n.d(we,"toPixels",(function(){return C})),n.d(we,"fromPixels",(function(){return St}));var Oe={};n.r(Oe),n.d(Oe,"prepareAndValidate",(function(){return E}));var ke={};n.r(ke),n.d(ke,"Serializable",(function(){return Tt})),n.d(ke,"SerializationMap",(function(){return Ct})),n.d(ke,"registerClass",(function(){return A}));var Ie={};n.r(Ie),n.d(Ie,"segOpComputeOptimalWindowSize",(function(){return fe})),n.d(Ie,"computeOutShape",(function(){return me})),n.d(Ie,"collectGatherOpShapeInfo",(function(){return be}));var Se={};n.r(Se),n.d(Se,"axesAreInnerMostDims",(function(){return cn.b})),n.d(Se,"combineLocations",(function(){return cn.c})),n.d(Se,"computeOutAndReduceShapes",(function(){return cn.d})),n.d(Se,"expandShapeToKeepDim",(function(){return cn.e})),n.d(Se,"assertAxesAreInnerMostDims",(function(){return cn.a})),n.d(Se,"getAxesPermutation",(function(){return cn.f})),n.d(Se,"getUndoAxesPermutation",(function(){return cn.h})),n.d(Se,"getInnerMostAxes",(function(){return cn.g})),n.d(Se,"getBroadcastDims",(function(){return vt.getBroadcastDims})),n.d(Se,"getReductionAxes",(function(){return vt.getReductionAxes})),n.d(Se,"assertAndGetBroadcastShape",(function(){return vt.assertAndGetBroadcastShape})),n.d(Se,"assertParamsConsistent",(function(){return $})),n.d(Se,"computeOutShape",(function(){return R})),n.d(Se,"computeDilation2DInfo",(function(){return ln.e})),n.d(Se,"computePool2DInfo",(function(){return ln.f})),n.d(Se,"computePool3DInfo",(function(){return ln.g})),n.d(Se,"computeConv2DInfo",(function(){return ln.b})),n.d(Se,"computeConv3DInfo",(function(){return ln.c})),n.d(Se,"computeDefaultPad",(function(){return ln.d})),n.d(Se,"tupleValuesAreOne",(function(){return ln.j})),n.d(Se,"eitherStridesOrDilationsAreOne",(function(){return ln.i})),n.d(Se,"convertConv2DDataFormat",(function(){return ln.h})),n.d(Se,"checkPadOnDimRoundingMode",(function(){return ln.a})),n.d(Se,"getFusedDyActivation",(function(){return dn.c})),n.d(Se,"getFusedBiasGradient",(function(){return dn.b})),n.d(Se,"applyActivation",(function(){return dn.a})),n.d(Se,"shouldFuse",(function(){return dn.d})),n.d(Se,"PARALLELIZE_THRESHOLD",(function(){return hn})),n.d(Se,"computeOptimalWindowSize",(function(){return D})),n.d(Se,"slice_util",(function(){return Nt})),n.d(Se,"upcastType",(function(){return rn.c})),n.d(Se,"getImageCenter",(function(){return F})),n.d(Se,"getReshaped",(function(){return _})),n.d(Se,"getPermuted",(function(){return M})),n.d(Se,"getReshapedPermuted",(function(){return z})),n.d(Se,"getSliceBeginCoords",(function(){return L})),n.d(Se,"getSliceSize",(function(){return P})),n.d(Se,"prepareAndValidate",(function(){return E})),n.d(Se,"validateUpdateShape",(function(){return jt.validateUpdateShape})),n.d(Se,"validateInput",(function(){return jt.validateInput})),n.d(Se,"calculateShapes",(function(){return jt.calculateShapes})),n.d(Se,"SELU_SCALEALPHA",(function(){return pn.b})),n.d(Se,"SELU_SCALE",(function(){return pn.a})),n.d(Se,"ERF_P",(function(){return fn})),n.d(Se,"ERF_A1",(function(){return mn})),n.d(Se,"ERF_A2",(function(){return bn})),n.d(Se,"ERF_A3",(function(){return gn})),n.d(Se,"ERF_A4",(function(){return yn})),n.d(Se,"ERF_A5",(function(){return xn})),n.d(Se,"warn",(function(){return vn.b})),n.d(Se,"log",(function(){return vn.a})),n.d(Se,"mergeRealAndImagArrays",(function(){return B})),n.d(Se,"splitRealAndImagArrays",(function(){return V})),n.d(Se,"complexWithEvenIndex",(function(){return W})),n.d(Se,"complexWithOddIndex",(function(){return U})),n.d(Se,"getComplexWithIndex",(function(){return G})),n.d(Se,"assignToTypedArray",(function(){return q})),n.d(Se,"exponents",(function(){return H})),n.d(Se,"exponent",(function(){return Y})),n.d(Se,"decodeEinsumEquation",(function(){return K})),n.d(Se,"getEinsumPermutation",(function(){return X})),n.d(Se,"checkEinsumDimSizes",(function(){return Z})),n.d(Se,"getEinsumComputePath",(function(){return Q})),n.d(Se,"isIdentityPermutation",(function(){return J})),n.d(Se,"prepareSplitSize",(function(){return te})),n.d(Se,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(function(){return ne})),n.d(Se,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(function(){return re})),n.d(Se,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(function(){return ae})),n.d(Se,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(function(){return se})),n.d(Se,"getSparseReshapeNegativeOutputDimErrorMessage",(function(){return ie})),n.d(Se,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(function(){return oe})),n.d(Se,"getSparseReshapeInputOutputMultipleErrorMessage",(function(){return ue})),n.d(Se,"getSparseReshapeInputOutputMismatchErrorMessage",(function(){return ce})),n.d(Se,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(function(){return le})),n.d(Se,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(function(){return de})),n.d(Se,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(function(){return he})),n.d(Se,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(function(){return pe})),n.d(Se,"segment_util",(function(){return Ie})),n.d(Se,"fromUint8ToStringArray",(function(){return ge})),n.d(Se,"fromStringArrayToUint8",(function(){return ye}));var je={};n.r(je),n.d(je,"nonMaxSuppressionV3Impl",(function(){return In.a})),n.d(je,"nonMaxSuppressionV4Impl",(function(){return In.b})),n.d(je,"nonMaxSuppressionV5Impl",(function(){return In.c})),n.d(je,"whereImpl",(function(){return Sn.a}));var Ne=n("QCRY"),Te=(n("lJxj"),n("wuGp")),Ce=n("9J2r");class Ee{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ee.instance&&(Ee.instance=new Ee),Ee.instance}static registerSaveRouter(e){Ee.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ee.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ee.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ee.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ee.getInstance().loadRouters:Ee.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const Ae=e=>Ee.registerSaveRouter(e),$e=e=>Ee.registerLoadRouter(e),Re=e=>Ee.getSaveHandlers(e),De=(e,t)=>Ee.getLoadHandlers(e,t),Fe="tensorflowjs",_e="models_store",Me="model_info_store";class ze{constructor(e){if(this.indexedDB=r(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Fe,1);r.onupgradeneeded=()=>a(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(_e,"readonly"),r=t.objectStore(_e).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=()=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Object(Ce.h)(t),s=a.transaction(Me,"readwrite");let i=s.objectStore(Me);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(_e,"readwrite");const o=u.objectStore(_e).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=()=>{i=s.objectStore(Me);const e=i.delete(this.modelPath);e.onsuccess=()=>(a.close(),n(o.error)),e.onerror=()=>(a.close(),n(o.error))}},o.onerror=()=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=()=>n(r.error)}))}}ze.URL_SCHEME="indexeddb://";const Le=e=>{return Object(Te.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ze.URL_SCHEME)?(t=e.slice(ze.URL_SCHEME.length),new ze(t)):null;var t};Ee.registerSaveRouter(Le),Ee.registerLoadRouter(Le);class Pe{constructor(){this.indexedDB=r()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Fe,1);n.onupgradeneeded=()=>a(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Me,"readonly"),s=a.objectStore(Me).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=()=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=()=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ze.URL_SCHEME)?t.slice(ze.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Fe,1);r.onupgradeneeded=()=>a(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(Me,"readwrite"),i=s.objectStore(Me),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(_e,"readwrite");const r=u.objectStore(_e).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=()=>n(o.error)};r.onsuccess=s,r.onerror=()=>(s(),a.close(),n(o.error))}},o.onerror=()=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=()=>n(r.error)}))}}var Be=n("qCmv");const Ve="/",We="tensorflowjs_models",Ue="info",Ge="model_topology",qe="weight_specs",He="weight_data",Ye="model_metadata";class Ke{constructor(e){if(!Object(Te.c)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=s(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(Ce.h)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(Ce.a)(e.weightData));return this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0})),{modelArtifactsInfo:r}}catch(e){throw i(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(Ce.b)(s),t}}Ke.URL_SCHEME="localstorage://";const Xe=e=>{return Object(Te.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ke.URL_SCHEME)?(t=e.slice(Ke.URL_SCHEME.length),new Ke(t)):null;var t};Ee.registerSaveRouter(Xe),Ee.registerLoadRouter(Xe);class Ze{constructor(){Object(Be.b)(Object(Te.c)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(Be.b)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=We+Ve,n=Ve+Ue;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[o(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=s(e=(t=e).startsWith(Ke.URL_SCHEME)?t.slice(Ke.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return i(n),r}}const Qe="://";class Je{constructor(){this.managers={}}static getInstance(){return null==Je.instance&&(Je.instance=new Je),Je.instance}static registerManager(e,t){Object(Be.b)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Qe)&&(e=e.slice(0,e.indexOf(Qe))),Object(Be.b)(e.length>0,(()=>"scheme must not be an empty string."));const n=Je.getInstance();Object(Be.b)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class et{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(Te.c)().get("IS_BROWSER")){Object(Te.c)().setPlatform("browser",new et);try{Je.registerManager(Ke.URL_SCHEME,new Ze)}catch(e){}try{Je.registerManager(ze.URL_SCHEME,new Pe)}catch(e){}}n("Jq7d");var tt=n("JjZs"),nt=n("VWKH"),rt=n("ZQ8H"),at=n("7wfN"),st=n("Vloo");Object(Ne.b)();const it={buffer:tt.a,cast:nt.a,clone:rt.a,print:at.a};Object(st.f)(it);class ot{constructor(e){if(!Object(Te.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ot.URL_SCHEME)&&(e=e.slice(ot.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Object(Ce.i)(e,n),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await f((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await f((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(Ce.h)(e)}}}}ot.URL_SCHEME="downloads://";class ut{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Object(Ce.g)(r,(e=>this.loadWeights(e)));e(s)},n.onerror=()=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Object(Ce.d)(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{n(e.target.result)},a.onerror=()=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Object(Ce.c)(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Object(Ce.c)(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}Ee.registerSaveRouter((e=>Object(Te.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ot.URL_SCHEME)?function(e="model"){return new ot(e)}(e.slice(ot.URL_SCHEME.length)):null));var ct=n("dkjg");class lt{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(Be.b)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Object(Te.c)().platform.fetch,Object(Be.b)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Object(Be.b)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=v({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Object(Ce.i)(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(Ce.h)(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}if(null==t.modelTopology&&null==t.weightsManifest)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Object(Ce.g)(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await g(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(Ce.d)(u)]}}lt.URL_SCHEME_REGEX=/^https?:\/\//;const dt=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>w(e))):w(e),n)return O(e,t)}return null};Ee.registerSaveRouter(dt),Ee.registerLoadRouter(dt);class ht{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class pt{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}var ft=n("beMT"),mt=n("vTEK"),bt=n("Jd0k"),gt=n("6D6q"),yt=n("koUT");const xt=Object(gt.b)({confusionMatrix_:function(e,t,n){const r=Object(ft.a)(e,"labels","confusionMatrix"),a=Object(ft.a)(t,"predictions","confusionMatrix");Be.b(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Be.b(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Be.b(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),Be.b(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),Be.b(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=Object(bt.a)(Object(nt.a)(r,"int32"),n),i=Object(bt.a)(Object(nt.a)(a,"int32"),n),o=Object(yt.a)(s),u=Object(mt.a)(o,i);return Object(nt.a)(u,"int32")}});var vt=n("VncX"),wt=n("f7fD"),Ot=n("TLHE"),kt=n("JJn/");let It;const St=Object(gt.b)({fromPixels_:j});var jt=n("3o7l"),Nt=n("DIJJ");class Tt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ct{constructor(){this.classNameMap={}}static getMap(){return null==Ct.instance&&(Ct.instance=new Ct),Ct.instance}static register(e){Ct.getMap().classNameMap[e.className]=[e,e.fromConfig]}}var Et=n("0L9A"),At=n("4JSp"),$t=n("Mxc4");const Rt="3.13.0";var Dt=n("i6xT"),Ft=n("IjOl"),_t=n("J/Nb"),Mt=n("TvjY"),zt=n("2qJO"),Lt=n("9rnT"),Pt=n("ZRUZ"),Bt=n("ckYy"),Vt=n("pRRN");class Wt extends Tt{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Object(Dt.d)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(Bt.f)(e,t)}dispose(){null!=this.iterations_&&Object(Dt.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(Vt.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Wt,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ut extends Wt{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ne.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ne.a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Object(Dt.t)((()=>Object(Pt.a)(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Object(Dt.t)((()=>Object(Pt.a)(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Object(Dt.t)((()=>{const e=Object(Ft.a)(Object(Mt.a)(s,this.rho),Object(Mt.a)(Object(Lt.a)(a),1-this.rho)),t=Object(Mt.a)(Object(_t.a)(Object(zt.a)(Object(Ft.a)(i,this.epsilon)),Object(zt.a)(Object(Ft.a)(s,this.epsilon))),a),n=Object(Ft.a)(Object(Mt.a)(i,this.rho),Object(Mt.a)(Object(Lt.a)(t),1-this.rho));s.assign(e),i.assign(n);const o=Object(Ft.a)(Object(Mt.a)(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Dt.d)(this.accumulatedGrads.map((e=>e.variable))),Object(Dt.d)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Ut.className="Adadelta",A(Ut);var Gt=n("3hN3");class qt extends Wt{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ne.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Object(Dt.t)((()=>Object(Gt.a)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(Dt.t)((()=>{const e=Object(Ft.a)(s,Object(Lt.a)(a));s.assign(e);const t=Object(Ft.a)(Object(Mt.a)(Object(_t.a)(a,Object(zt.a)(Object(Ft.a)(e,Ne.a.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Dt.d)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}qt.className="Adagrad",A(qt);var Ht=n("0vIi"),Yt=n("7JZ3");class Kt extends Wt{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Dt.t)((()=>{this.accBeta1=Object(Vt.a)(t).variable(),this.accBeta2=Object(Vt.a)(n).variable()})),null==r&&(this.epsilon=Ne.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(Dt.t)((()=>{const n=Object(Yt.a)(1,this.accBeta1),r=Object(Yt.a)(1,this.accBeta2);t.forEach(((t,a)=>{const s=Ne.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Object(Dt.t)((()=>Object(Pt.a)(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Object(Dt.t)((()=>Object(Pt.a)(s).variable(false)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=Object(Ft.a)(Object(Mt.a)(o,this.beta1),Object(Mt.a)(i,1-this.beta1)),l=Object(Ft.a)(Object(Mt.a)(u,this.beta2),Object(Mt.a)(Object(Lt.a)(i),1-this.beta2)),d=Object(_t.a)(c,n),h=Object(_t.a)(l,r);o.assign(c),u.assign(l);const p=Object(Ft.a)(Object(Mt.a)(Object(_t.a)(d,Object(Ft.a)(Object(zt.a)(h),this.epsilon)),-this.learningRate),s);s.assign(p)})),this.accBeta1.assign(Object(Mt.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(Mt.a)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Dt.d)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Object(Dt.d)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Object(Dt.t)((()=>{this.accBeta1.assign(Object(Ht.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Ht.a)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Kt.className="Adam",A(Kt);var Xt=n("/nzz"),Zt=n("ZuVY");class Qt extends Wt{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Dt.t)((()=>{this.iteration=Object(Vt.a)(0).variable(),this.accBeta1=Object(Vt.a)(t).variable()})),null==r&&(this.epsilon=Ne.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(Dt.t)((()=>{const n=Object(Yt.a)(1,this.accBeta1),r=Object(_t.a)(-this.learningRate,Object(Ft.a)(Object(Mt.a)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=Ne.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Object(Pt.a)(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Object(Pt.a)(s).variable(false)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=Object(Ft.a)(Object(Mt.a)(o,this.beta1),Object(Mt.a)(i,1-this.beta1)),l=Object(Mt.a)(u,this.beta2),d=Object(Xt.a)(i),h=Object(Zt.a)(l,d);o.assign(c),u.assign(h);const p=Object(Ft.a)(Object(Mt.a)(Object(_t.a)(r,n),Object(_t.a)(c,Object(Ft.a)(h,this.epsilon))),s);s.assign(p)})),this.iteration.assign(Object(Ft.a)(this.iteration,1)),this.accBeta1.assign(Object(Mt.a)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Dt.d)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Object(Dt.d)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Qt.className="Adamax",A(Qt);class Jt extends Wt{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=Ne.a.registeredVariables[t];Object(Dt.t)((()=>{const e=Object(Ft.a)(Object(Mt.a)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(Dt.l)(Object(Vt.a)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Jt.className="SGD",A(Jt);class en extends Jt{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(Vt.a)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ne.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Object(Dt.t)((()=>Object(Pt.a)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Object(Dt.t)((()=>{let e;const t=Object(Ft.a)(Object(Mt.a)(this.m,a),s);e=this.useNesterov?Object(Ft.a)(Object(Mt.a)(this.c,Object(Ft.a)(s,Object(Mt.a)(t,this.m))),r):Object(Ft.a)(Object(Mt.a)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Dt.d)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}en.className="Momentum",A(en);class tn extends Wt{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Ne.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ne.a.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Object(Dt.t)((()=>Object(Pt.a)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Object(Dt.t)((()=>Object(Pt.a)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Object(Dt.t)((()=>Object(Pt.a)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Object(Dt.t)((()=>{const e=Object(Ft.a)(Object(Mt.a)(i,this.decay),Object(Mt.a)(Object(Lt.a)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Object(Ft.a)(Object(Mt.a)(t,this.decay),Object(Mt.a)(s,1-this.decay)),u=Object(_t.a)(Object(Mt.a)(s,this.learningRate),Object(zt.a)(Object(Yt.a)(e,Object(Ft.a)(Object(Lt.a)(a),this.epsilon)))),c=Object(Ft.a)(Object(Mt.a)(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(c);const l=Object(Yt.a)(r,c);r.assign(l)}else{const e=Object(Ft.a)(Object(Mt.a)(i,this.decay),Object(Mt.a)(Object(Lt.a)(s),1-this.decay)),t=Object(Ft.a)(Object(Mt.a)(o,this.momentum),Object(_t.a)(Object(Mt.a)(s,this.learningRate),Object(zt.a)(Object(Ft.a)(e,this.epsilon))));i.assign(e),o.assign(t);const n=Object(Yt.a)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Dt.d)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Object(Dt.d)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Object(Dt.d)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}tn.className="RMSProp",A(tn);class nn{static sgd(e){return new Jt(e)}static momentum(e,t,n=!1){return new en(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new tn(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Kt(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ut(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Qt(e,t,n,r,a)}static adagrad(e,t=.1){return new qt(e,t)}}var rn=n("+tZ4"),an=n("tzXg"),sn=n("oWI0");const on={sgd:nn.sgd,momentum:nn.momentum,adadelta:nn.adadelta,adagrad:nn.adagrad,rmsprop:nn.rmsprop,adamax:nn.adamax,adam:nn.adam};var un=n("EXUU"),cn=n("By71"),ln=n("tFNL"),dn=n("xuGi");const hn=30;var pn=n("rAKC");const fn=.3275911,mn=.254829592,bn=-.284496736,gn=1.421413741,yn=-1.453152027,xn=1.061405429;var vn=n("iM3v");const wn="->",On=/->/g;var kn=n("OkMD"),In=n("fr4c"),Sn=n("QmCl"),jn=n("wG3K")},I4Wd:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({min_:function(e,t=null,n=!1){const i=Object(s.a)(e,"x","min");return r.a.runKernel(a.Rb,{x:i},{axis:t,keepDims:n})}})},IBm2:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({step_:function(e,t=0){const n=Object(s.a)(e,"x","step");return r.a.runKernel(a.Tc,{x:n},{alpha:t})}})},ITmW:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},IbvB:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("VncX"),u=n("VWKH"),c=n("6D6q");const l=Object(c.b)({minimum_:function(e,t){let n=Object(i.a)(e,"a","minimum"),c=Object(i.a)(t,"b","minimum");return[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.assertAndGetBroadcastShape)(n.shape,c.shape),r.a.runKernel(a.Sb,{a:n,b:c})}})},IjOl:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("6D6q");const u=Object(o.b)({add_:function(e,t){let n=Object(i.a)(e,"a","add"),o=Object(i.a)(t,"b","add");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.d,{a:n,b:o})}})},"J/Nb":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("a4Y6"),u=n("6D6q");const c=Object(u.b)({div_:function(e,t){let n=Object(i.a)(e,"a","div"),u=Object(i.a)(t,"b","div");return[n,u]=Object(s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype?Object(o.a)(n,u):r.a.runKernel(a.mc,{a:n,b:u},{})}})},J7Up:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({einsum_:function(e,...t){const n=t.map(((e,t)=>Object(s.a)(e,`tensors${t}`,"einsum")));return r.a.runKernel(a.W,n,{equation:e})}})},"JJn/":function(e,t,n){"use strict";function r(e,t,n){if(Object(s.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Object(a.c)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(i.a)(e,t,r,n)}n.d(t,"a",(function(){return r}));var a=n("beMT"),s=n("qCmv"),i=n("/en9")},Jd0k:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o=Object(s.a)(e,"indices","oneHot","int32");return r.a.runKernel(a.cc,{indices:o},{depth:t,onValue:n,offValue:i})}})},JjZs:function(e,t,n){"use strict";function r(e,t="float32",n){return t=t||"float32",s.c(e),new a.b(e,t,n)}n.d(t,"a",(function(){return r}));var a=n("Vloo"),s=n("qCmv")},Jp6E:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n=a[s]=(n^=n>>>15)^(e^=e>>>12),t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=0==(n=o[127&s]^=r+(i=i+1640531527|0))?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,o[a]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},Jq7d:function(e,t,n){"use strict";(function(e){var t=n("wuGp");const r=()=>n(0);let a;class s{constructor(){this.util=n(1),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t.c)().global.fetch?Object(t.c)().global.fetch(e,n):(null==a&&(a=r()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.c)().get("IS_NODE")&&Object(t.c)().setPlatform("node",new s)}).call(this,n("5IsQ"))},JsZy:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],r[a]=n^=(e^=e<<13)^e<<9,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},K2jg:function(e){(function(t){e.exports=t}).call(this,{})},KTLW:function(e,t,n){"use strict";(function(e){var r=n("Xeik");const a=n("8Jek");t.a=({size:t,position:n})=>{const s=new Array(t).fill(void 0).map((()=>new Array(t).fill(void 0))),[i,o]=n;return e("div",null,s.map(((t,n)=>e("div",null,t.map(((t,s)=>{const u=a(r.a.grid,s===i&&n===o?r.a.active:"");return e("span",{class:u},s,", ",n)}))))))}}).call(this,n("hosL").h)},KZu2:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("VWKH"),u=n("6D6q");const c=Object(u.b)({erf_:function(e){let t=Object(s.a)(e,"x","erf");return i.b("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Object(o.a)(t,"float32")),r.a.runKernel(a.ab,{x:t})}})},Kc3e:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({relu_:function(e){const t=Object(s.a)(e,"x","relu");return r.a.runKernel(a.oc,{x:t})}})},KeJg:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},KlUR:function(e,t){"use strict";function n(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function r(e,t,n){for(var r,s=[],i=t;i<n;i+=3)s.push(a[(r=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]))>>18&63]+a[r>>12&63]+a[r>>6&63]+a[63&r]);return s.join("")}t.byteLength=function(e){var t=n(e),r=t[1];return 3*(t[0]+r)/4-r},t.toByteArray=function(e){var t,r,a=n(e),o=a[0],u=a[1],c=new i(function(e,t,n){return 3*(t+n)/4-n}(0,o,u)),l=0,d=u>0?o-4:o;for(r=0;r<d;r+=4)t=s[e.charCodeAt(r)]<<18|s[e.charCodeAt(r+1)]<<12|s[e.charCodeAt(r+2)]<<6|s[e.charCodeAt(r+3)],c[l++]=t>>16&255,c[l++]=t>>8&255,c[l++]=255&t;return 2===u&&(t=s[e.charCodeAt(r)]<<2|s[e.charCodeAt(r+1)]>>4,c[l++]=255&t),1===u&&(t=s[e.charCodeAt(r)]<<10|s[e.charCodeAt(r+1)]<<4|s[e.charCodeAt(r+2)]>>2,c[l++]=t>>8&255,c[l++]=255&t),c},t.fromByteArray=function(e){for(var t,n=e.length,s=n%3,i=[],o=16383,u=0,c=n-s;u<c;u+=o)i.push(r(e,u,u+o>c?c:u+o));return 1===s?i.push(a[(t=e[n-1])>>2]+a[t<<4&63]+"=="):2===s&&i.push(a[(t=(e[n-2]<<8)+e[n-1])>>10]+a[t>>4&63]+a[t<<2&63]+"="),i.join("")};for(var a=[],s=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=0,c=o.length;u<c;++u)a[u]=o[u],s[o.charCodeAt(u)]=u;s["-".charCodeAt(0)]=62,s["_".charCodeAt(0)]=63},Klcu:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n("ckYy"),a=n("beMT"),s=n("VWKH"),i=n("pI0a"),o=n("V7pg"),u=n("tsju"),c=n("TvjY"),l=n("6D6q"),d=n("7JZ3"),h=n("zFAV");const p=Object(l.b)({logSoftmax_:function(e,t=-1){const n=Object(a.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const l=Object(r.a)(((e,n)=>{const r=Object(u.a)(e,t,!0),a=Object(d.a)(e,r),l=Object(d.a)(Object(s.a)(a,"float32"),Object(o.a)(Object(h.a)(Object(i.a)(a),t,!0)));n([l]);return{value:l,gradFunc:(e,n)=>{const[r]=n,a=Object(i.a)(r);return Object(d.a)(e,Object(c.a)(Object(h.a)(e,t,!0),a))}}}));return l(n)}})},Km0G:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({split_:function(e,t,n=0){const i=Object(s.a)(e,"x","split");return r.a.runKernel(a.Pc,{x:i},{numOrSizeSplits:t,axis:n})}})},L2At:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("VncX"),u=n("6D6q");const c=Object(u.b)({greater_:function(e,t){let n=Object(i.a)(e,"a","greater","string_or_numeric"),u=Object(i.a)(t,"b","greater","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.pb,{a:n,b:u})}})},LIhl:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("VncX"),u=n("6D6q");const c=Object(u.b)({greaterEqual_:function(e,t){let n=Object(i.a)(e,"a","greaterEqual","string_or_numeric"),u=Object(i.a)(t,"b","greaterEqual","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.qb,{a:n,b:u})}})},MLUI:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("tFNL"),u=n("6D6q"),c=n("6RbH");const l=Object(u.b)({maxPool3d_:function(e,t=[1,1,1],n,u,l,d="NDHWC"){const h=Object(s.a)(e,"x","maxPool3d");let p=h,f=!1;4===h.rank&&(f=!0,p=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===p.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`)),i.b("NDHWC"===d,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`)),Object(o.a)("maxPool3d",u,l);const m=r.a.runKernel(a.Lb,{x:p},{filterSize:t,strides:n,pad:u,dimRoundingMode:l,dataFormat:d});return f?Object(c.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}})},MZyz:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({sparseToDense_:function(e,t,n,i=0){const o=Object(s.a)(e,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(t,"sparseValues","sparseToDense"),c=Object(s.a)(i,"defaultValue","sparseToDense",u.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);if(0!==t.rank&&(1!==t.rank||t.size!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,c),r.a.runKernel(a.Oc,{sparseIndices:o,sparseValues:u,defaultValue:c},{outputShape:n})}})},MvpJ:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({cosh_:function(e){const t=Object(s.a)(e,"x","cosh","float32");return r.a.runKernel(a.K,{x:t})}})},Mxc4:function(e,t,n){"use strict";function r(e){return w.fromString(e,!0,16)}function a(e){return e.xor(e.shru(47))}function s(e,t,n){const r=e.slice(t,t+n);return w.fromBytes(Array.from(r),!0,!0)}function i(e,t){return s(e,t,8)}function o(e,t){return s(e,t,4)}function u(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function c(e,t,n=r("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let s=t.xor(a).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function l(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=u(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(u(a,44)),[a.add(r),s.add(i)]}(i(e,t),i(e,t+8),i(e,t+16),i(e,t+24),n,r)}function d(e,t=e.length){const n=w.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=I.add(2*t),r=i(e,0).add(I),a=i(e,t-8);return c(u(a,37).mul(n).add(r),u(r,25).add(a).mul(n),n)}if(t>=4){const n=I.add(2*t);return c(o(e,0).shl(3).add(t),o(e,t-4),n)}if(t>0){const n=t+(e[t-1]<<2);return a(I.mul(e[0]+(e[t>>1]<<8)).xor(O.mul(n))).mul(I)}return I}(e,t):function(e,t=e.length){const n=I.add(2*t),r=i(e,0).mul(k),a=i(e,8),s=i(e,t-8).mul(n),o=i(e,t-16).mul(I);return c(u(r.add(a),43).add(u(s,30)).add(o),r.add(u(a.add(I),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=I.add(2*t),r=i(e,0).mul(I),a=i(e,8),s=i(e,t-8).mul(n),o=i(e,t-16).mul(I),l=u(r.add(a),43).add(u(s,30)).add(o),d=c(l,r.add(u(a.add(I),18)).add(s),n),h=i(e,16).mul(n),p=i(e,24),f=l.add(i(e,t-32)).mul(n),m=d.add(i(e,t-24)).mul(n);return c(u(h.add(p),43).add(u(f,30)).add(m),h.add(u(p.add(r),18)).add(f),n)}(e,t);let r=n,s=n.mul(k).add(113),d=a(s.mul(I).add(113)).mul(I),h=[w.UZERO,w.UZERO],p=[w.UZERO,w.UZERO];r=r.mul(I).add(i(e,0));let f=0;const m=64*(t-1>>6),b=m+(t-1&63)-63;do{r=u(r.add(s).add(h[0]).add(i(e,f+8)),37).mul(k),s=u(s.add(h[1]).add(i(e,f+48)),42).mul(k),r=r.xor(p[1]),s=s.add(h[0]).add(i(e,f+40)),d=u(d.add(p[0]),33).mul(k),h=l(e,f,h[1].mul(k),r.add(p[0])),p=l(e,f+32,d.add(p[1]),s.add(i(e,f+16))),[d,r]=[r,d],f+=64}while(f!==m);const g=k.add(d.and(255).shl(1));return f=b,p[0]=p[0].add(t-1&63),h[0]=h[0].add(p[0]),p[0]=p[0].add(h[0]),r=u(r.add(s).add(h[0]).add(i(e,f+8)),37).mul(g),s=u(s.add(h[1]).add(i(e,f+48)),42).mul(g),r=r.xor(p[1].mul(9)),s=s.add(h[0].mul(9).add(i(e,f+40))),d=u(d.add(p[0]),33).mul(g),h=l(e,f,h[1].mul(g),r.add(p[0])),p=l(e,f+32,d.add(p[1]),s.add(i(e,f+16))),[d,r]=[r,d],c(c(h[0],p[0],g).add(a(s).mul(O)).add(d),c(h[1],p[1],g).add(r),g)}function h(e,t){return"string"===t?b(e):p([e],t)}function p(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=x.m(e)),Object(y.c)().getBool("DEBUG")&&x.h(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function f(){return Object(y.c)().platform.now()}function m(e,t){return Object(y.c)().platform.fetch(e,t)}function b(e,t="utf-8"){return t=t||"utf-8",Object(y.c)().platform.encode(e,t)}function g(e,t="utf-8"){return t=t||"utf-8",Object(y.c)().platform.decode(e,t)}n.r(t),n.d(t,"shuffle",(function(){return x.M})),n.d(t,"shuffleCombo",(function(){return x.N})),n.d(t,"clamp",(function(){return x.i})),n.d(t,"nearestLargerEven",(function(){return x.H})),n.d(t,"swap",(function(){return x.S})),n.d(t,"sum",(function(){return x.R})),n.d(t,"randUniform",(function(){return x.J})),n.d(t,"distSquared",(function(){return x.l})),n.d(t,"assert",(function(){return x.b})),n.d(t,"assertShapesMatch",(function(){return x.e})),n.d(t,"assertNonNull",(function(){return x.d})),n.d(t,"flatten",(function(){return x.m})),n.d(t,"sizeFromShape",(function(){return x.O})),n.d(t,"isScalarShape",(function(){return x.y})),n.d(t,"arraysEqual",(function(){return x.a})),n.d(t,"isInt",(function(){return x.v})),n.d(t,"tanh",(function(){return x.T})),n.d(t,"sizeToSquarishShape",(function(){return x.P})),n.d(t,"createShuffledIndices",(function(){return x.k})),n.d(t,"rightPad",(function(){return x.L})),n.d(t,"repeatedTry",(function(){return x.K})),n.d(t,"inferFromImplicitShape",(function(){return x.s})),n.d(t,"parseAxisParam",(function(){return x.I})),n.d(t,"squeezeShape",(function(){return x.Q})),n.d(t,"getTypedArrayFromDType",(function(){return x.o})),n.d(t,"getArrayFromDType",(function(){return x.n})),n.d(t,"checkConversionForErrors",(function(){return x.h})),n.d(t,"isValidDtype",(function(){return x.B})),n.d(t,"hasEncodingLoss",(function(){return x.p})),n.d(t,"isTypedArray",(function(){return x.A})),n.d(t,"bytesPerElement",(function(){return x.g})),n.d(t,"bytesFromStringArray",(function(){return x.f})),n.d(t,"isString",(function(){return x.z})),n.d(t,"isBoolean",(function(){return x.t})),n.d(t,"isNumber",(function(){return x.w})),n.d(t,"inferDtype",(function(){return x.r})),n.d(t,"isFunction",(function(){return x.u})),n.d(t,"nearestDivisor",(function(){return x.G})),n.d(t,"computeStrides",(function(){return x.j})),n.d(t,"toNestedArray",(function(){return x.U})),n.d(t,"makeOnesTypedArray",(function(){return x.D})),n.d(t,"makeZerosTypedArray",(function(){return x.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return x.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return x.c})),n.d(t,"locToIndex",(function(){return x.C})),n.d(t,"indexToLoc",(function(){return x.q})),n.d(t,"isPromise",(function(){return x.x})),n.d(t,"hexToLong",(function(){return r})),n.d(t,"fingerPrint64",(function(){return d})),n.d(t,"createScalarValue",(function(){return h})),n.d(t,"toTypedArray",(function(){return p})),n.d(t,"now",(function(){return f})),n.d(t,"fetch",(function(){return m})),n.d(t,"encodeString",(function(){return b})),n.d(t,"decodeString",(function(){return g}));var y=n("wuGp"),x=n("qCmv"),v=n("1277");const w=n.n(v).a||v,O=r("c3a5c85c97cb3127"),k=r("b492b66fbe98f273"),I=r("9ae16a3b2f90404f")},Myfv:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("ZQ8H"),o=n("6D6q"),u=n("6RbH");const c=Object(o.b)({broadcastTo_:function(e,t){let n=Object(s.a)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Object(u.a)(n,e)}const c=n.shape,l=Array.from(t);for(let e=t.length-1;e>=0;e--)if(c[e]===t[e])l[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);return 0===l.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length?Object(i.a)(n):r.a.runKernel(a.cd,{x:n},{reps:l})}})},O7pG:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({slice_:function(e,t,n){const i=Object(s.a)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");return r.a.runKernel(a.Gc,{x:i},{begin:t,size:n})}})},OTPX:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("cB/u");class a extends r.a{split(e){return new s(this,e)}}class s extends a{constructor(e,t){super(),this.upstream=e,this.impl=new i(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r.b{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}},OkMD:function(e,t,n){"use strict";function r(e){i=e}function a(e){if(void 0!==i)return i;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function s(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}let i;n.r(t),n.d(t,"mockIsMobile",(function(){return r})),n.d(t,"isMobile",(function(){return a})),n.d(t,"isBrowser",(function(){return s}))},PJQw:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("tFNL"),u=n("6D6q"),c=n("6RbH");const l=Object(u.b)({maxPool_:function(e,t,n,u,l){const d=Object(s.a)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.b(4===h.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`)),i.b(o.i(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.a("maxPool",u,l);const f=r.a.runKernel(a.Kb,{x:h},{filterSize:t,strides:n,pad:u,dimRoundingMode:l});return p?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},PRjJ:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({sigmoid_:function(e){const t=Object(s.a)(e,"x","sigmoid","float32");return r.a.runKernel(a.Cc,{x:t})}})},PddD:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]},PurG:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("ZQ8H"),u=n("6D6q");const c=Object(u.b)({concat_:function(e,t=0){Object(i.b)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Object(s.b)(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length?Object(o.a)(n[0]):r.a.runKernel(a.C,n,{axis:t})}})},Q4qi:function(e,t,n){"use strict";function r(e,t,n=null){if(0===e.rank)return Object(i.a)(e);if(1!==e.rank&&null===n)return r(Object(h.a)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Object(b.a)(Object(i.a)(e),n);if(t===1/0)return Object(u.a)(Object(i.a)(e),n);if(t===-1/0)return Object(c.a)(Object(i.a)(e),n);if("euclidean"===t||2===t)return Object(f.a)(Object(b.a)(Object(d.a)(Object(i.a)(e),Object(p.a)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Object(u.a)(Object(b.a)(Object(i.a)(e),n[0]),n[1]-1);if(t===1/0)return Object(u.a)(Object(b.a)(Object(i.a)(e),n[1]),n[0]);if(t===-1/0)return Object(c.a)(Object(b.a)(Object(i.a)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Object(f.a)(Object(b.a)(Object(m.a)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}n.d(t,"a",(function(){return g}));var a=n("beMT"),s=n("qCmv"),i=n("/nzz"),o=n("By71"),u=n("tsju"),c=n("I4Wd"),l=n("6D6q"),d=n("0vIi"),h=n("6RbH"),p=n("pRRN"),f=n("2qJO"),m=n("9rnT"),b=n("zFAV");const g=Object(l.b)({norm_:function(e,t="euclidean",n=null,i=!1){const u=r(e=Object(a.a)(e,"x","norm"),t,n);let c=u.shape;if(i){const t=Object(s.I)(n,e.shape);c=o.e(u.shape,t)}return Object(h.a)(u,c)}})},QCRY:function(e,t,n){"use strict";function r(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function s(e){return null!=e.kernelName}function i(){const e=Object(l.b)();if(null==e._tfengine){const t=new c.b(e);e._tfengine=new w(t)}return Object(c.d)(e._tfengine.ENV),Object(y.g)((()=>e._tfengine)),e._tfengine}function o(e,t){return O.runKernel(d.d,{a:e,b:t})}n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return O}));var u=n("wG3K"),c=n("wuGp"),l=n("QP9L"),d=n("f7fD"),h=n("TLHE"),p=n("iM3v"),f=n("Mxc4"),m=n("qCmv");class b{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new g)}profileKernel(e,t,n){let a;const s=()=>{a=n()};let i;const o=f.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of a)e.dataSync();i=Promise.resolve({kernelMs:f.now()-o})}if(Object(c.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){const n=a[t];n.data().then((t=>{r(t,n.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}class g{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?m.L(`${r}ms`,9):r.error,o=m.L(e,25),u=t.rank,c=t.size,l=m.L(t.shape.toString(),14);let d="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${l}\t%c${c}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var y=n("Vloo"),x=n("0L9A");class v{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class w{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new v}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(p.b(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new b(this.backendInstance),!0}setupRegisteredKernels(){Object(h.d)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Object(h.d)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof u.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,p.b(`Initialization of backend ${e} failed`),p.b(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return p.b(`Initialization of backend ${e} failed`),p.b(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return w.nextTensorId++}nextVariableId(){return w.nextVariableId++}clone(e){const t=O.runKernel(d.sb,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],(e=>({x:()=>O.runKernel(d.x,{x:e},{dtype:"float32"})})),[],{}),t}runKernel(e,t,n){if(!(null!=Object(h.c)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=r-t-a-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const c=s(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(s(e)){const{kernelName:t,inputs:a,attrs:s}=e,i=Object(h.c)(t,this.backendName);m.b(null!=i,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=i.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const c=o.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,c);n=this.saveTensorsForBackwardMode(e)}return c}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:l,attrs:d}=e,p=s(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),r&&this.addTapeNode(c,l,t,p,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Object(h.b)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(m.b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let a=e;"string"===(n=n||"float32")&&m.z(e[0])&&(a=e.map((e=>f.encodeString(e))));const s=r.write(a,t,n),i=new y.a(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Object(m.f)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new y.a(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new y.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*m.g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof y.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*m.g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){this.disposeVariable(this.state.registeredVariables[e])}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Object(h.b)(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=m.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(x.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(m.b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));m.b(s instanceof y.a,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,o[n.id]=!0;break}}const u=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=a({},n);t.inputs=e,t.outputs=n.outputs,u.push(t)}}return u}(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=Object(m.D)(Object(m.O)(e),"float32");return O.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];i.push(null!=n?n:null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!m.a(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,i,(e=>this.tidy(e)),o);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return m.b(m.u(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;m.b(t.every((e=>e instanceof y.a)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),m.b(n.value instanceof y.a,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),m.b(m.u(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];m.b(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),m.b(s.every((e=>e instanceof y.a)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Object(f.now)(),n=await this.backend.time(e);return n.wallMs=Object(f.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new v;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}w.nextTensorId=0,w.nextVariableId=0;const O=i()},QLnx:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({addN_:function(e){i.b(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),i.b(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Object(s.a)(e,`tensors${t}`,"addN"))),n=t[0];return t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!i.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")})),r.a.runKernel(a.e,t)}})},QP9L:function(e,t,n){"use strict";(function(e,r){function a(){if(null==i){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}i=t}return i}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}let i;n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return s}))}).call(this,n("pCvA"),n("5IsQ"))},QRet:function(e,t,n){"use strict";function r(e,t){f.options.__h&&f.options.__h(h,e,m||t),m=0;var n=h.__H||(h.__H={__:[],__h:[]});return e>=n.__.length&&n.__.push({}),n.__[e]}function a(e){return m=1,function(e,t,n){var a=r(d++,2);return a.t=e,a.__c||(a.__=[n?n(t):l(void 0,t),function(e){var t=a.t(a.__[0],e);a.__[0]!==t&&(a.__=[t,a.__[1]],a.__c.setState({}))}],a.__c=h),a.__}(l,e)}function s(e,t){var n=r(d++,3);!f.options.__s&&c(n.__H,t)&&(n.__=e,n.__H=t,h.__H.__h.push(n))}function i(){for(var e;e=b.shift();)if(e.__P)try{e.__H.__h.forEach(o),e.__H.__h.forEach(u),e.__H.__h=[]}catch(t){e.__H.__h=[],f.options.__e(t,e.__v)}}function o(e){var t=h,n=e.__c;"function"==typeof n&&(e.__c=void 0,n()),h=t}function u(e){var t=h;e.__c=e.__(),h=t}function c(e,t){return!e||e.length!==t.length||t.some((function(t,n){return t!==e[n]}))}function l(e,t){return"function"==typeof t?t(e):t}n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return s}));var d,h,p,f=n("hosL"),m=0,b=[],g=f.options.__b,y=f.options.__r,x=f.options.diffed,v=f.options.__c,w=f.options.unmount;f.options.__b=function(e){h=null,g&&g(e)},f.options.__r=function(e){y&&y(e),d=0;var t=(h=e.__c).__H;t&&(t.__h.forEach(o),t.__h.forEach(u),t.__h=[])},f.options.diffed=function(e){x&&x(e);var t=e.__c;t&&t.__H&&t.__H.__h.length&&(1!==b.push(t)&&p===f.options.requestAnimationFrame||((p=f.options.requestAnimationFrame)||function(e){var t,n=function(){clearTimeout(r),O&&cancelAnimationFrame(t),setTimeout(e)},r=setTimeout(n,100);O&&(t=requestAnimationFrame(n))})(i)),h=null},f.options.__c=function(e,t){t.some((function(e){try{e.__h.forEach(o),e.__h=e.__h.filter((function(e){return!e.__||u(e)}))}catch(n){t.some((function(e){e.__h&&(e.__h=[])})),t=[],f.options.__e(n,e.__v)}})),v&&v(e,t)},f.options.unmount=function(e){w&&w(e);var t,n=e.__c;n&&n.__H&&(n.__H.__.forEach((function(e){try{o(e)}catch(e){t=e}})),t&&f.options.__e(t,n.__v))};var O="function"==typeof requestAnimationFrame},QWbY:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("Vloo"),a=n("beMT"),s=n("qCmv");const i=async function(e,t){const n=Object(a.a)(e,"x","setdiff1d"),i=Object(a.a)(t,"y","setdiff1d");s.b(n.dtype===i.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`)),s.b(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),s.b(1===i.rank,(()=>`y should be 1D tensor, but got y (${i.shape}).`));const o=await n.data(),u=await i.data(),c=new Set(u);let l=0;for(let e=0;e<o.length;e++)c.has(o[e])||l++;const d=new r.b([l],n.dtype),h=new r.b([l],"int32");for(let e=0,t=0;e<o.length;e++)c.has(o[e])||(d.values[t]=o[e],h.values[t]=e,t++);return[d.toTensor(),h.toTensor()]}},QmCl:function(e,t,n){"use strict";function r(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Object(a.a)(e,"int32"),s=Object(a.a)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]);s.values.set(a,t*e.length)}return s.toTensor()}n.d(t,"a",(function(){return r}));var a=n("JjZs")},Qo3Y:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({softmax_:function(e,t=-1){const n=Object(s.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return r.a.runKernel(a.Hc,{logits:n},{dim:t})}})},Qr1B:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("JjZs"),a=n("6D6q"),s=n("c2T0");const i=Object(a.b)({truncatedNormal_:function(e,t=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.a(t,n,a,!0,i),u=Object(r.a)(e,a);for(let e=0;e<u.values.length;e++)u.values[e]=o.nextValue();return u.toTensor()}})},RoC8:function(e){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},"SD+8":function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},SY1S:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},T0gV:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({acos_:function(e){const t=Object(s.a)(e,"x","acos");return r.a.runKernel(a.b,{x:t})}})},TKdW:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({mirrorPad_:function(e,t,n){i.b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=Object(s.a)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.b(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let e=0;e<o.rank;e++)i.b(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.b(t[e][0]>=0&&t[e][0]<=o.shape[e]-u&&t[e][1]>=0&&t[e][1]<=o.shape[e]-u,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-u} or less than 0 for input of shape ${o.shape}`));return r.a.runKernel(a.Tb,{x:o},{paddings:t,mode:n})}})},TLHE:function(e,t,n){"use strict";function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},r.apply(this,arguments)}function a(e,t){const n=h(e,t);return b.get(n)}function s(e){return g.get(e)}function i(e){const t=b.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function o(e){const{kernelName:t,backendName:n}=e,r=h(t,n);b.has(r)&&m.b(`The kernel '${t}' for backend '${n}' is already registered`),b.set(r,e)}function u(e){const{kernelName:t}=e;g.has(t)&&Object(p.c)().getBool("DEBUG")&&m.b(`Overriding the gradient for '${t}'`),g.set(t,e)}function c(e,t){const n=h(e,t);if(!b.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);b.delete(n)}function l(e){if(!g.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);g.delete(e)}function d(e,t){i(e).forEach((e=>{o(r({},e,{backendName:t}))}))}function h(e,t){return`${t}_${e}`}n.d(t,"c",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"d",(function(){return i})),n.d(t,"f",(function(){return o})),n.d(t,"e",(function(){return u})),n.d(t,"h",(function(){return c})),n.d(t,"g",(function(){return l})),n.d(t,"a",(function(){return d}));var p=n("wuGp"),f=n("QP9L"),m=n("iM3v");const b=Object(f.a)("kernelRegistry",(()=>new Map)),g=Object(f.a)("gradRegistry",(()=>new Map))},TTC5:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({depthToSpace_:function(e,t,n="NHWC"){const o=Object(s.a)(e,"x","depthToSpace","float32"),u="NHWC"===n?o.shape[1]:o.shape[2],c="NHWC"===n?o.shape[2]:o.shape[3],l="NHWC"===n?o.shape[3]:o.shape[1];return i.b(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),i.b(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.b(c*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.b(l%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${o.shape}`)),r.a.runKernel(a.O,{x:o},{blockSize:t,dataFormat:n})}})},TbFj:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({spaceToBatchND_:function(e,t,n){const o=Object(s.a)(e,"x","spaceToBatchND");return i.b(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.b(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.b(o.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`)),r.a.runKernel(a.Jc,{x:o},{blockShape:t,paddings:n})}})},TvjY:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("6D6q");const u=Object(o.b)({mul_:function(e,t){let n=Object(i.a)(e,"a","mul"),o=Object(i.a)(t,"b","mul");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.Wb,{a:n,b:o})}})},UQrs:function(e,t,n){"use strict";function r(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){vn.si.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];vn.si.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function a(e){return"number"!=typeof e&&!e.some((e=>e<0))}function s(e,t,n){let r=i(e,n);const s=!a(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=i(e.shape,r)})),!a(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function i(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}function o(e,t,n){const[r,a]=Object(Pa.d)("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,c=Object(Pa.d)("numArgs",e,t,n);if(s){if(o&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=Object(Pa.d)("strides",e,t,n),d=Object(Pa.c)(e,t,n),h=Object(Pa.d)("dataFormat",e,t,n).toUpperCase(),p=Object(Pa.d)("dilations",e,t,n);let[f,m]=Object(Pa.d)("args",e,t,n);i&&(m=f,f=void 0);return{stride:l,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:Object(Pa.d)("leakyreluAlpha",e,t,n)}}function u(e,t,n){return{boxes:Object(Pa.d)("boxes",e,t,n),scores:Object(Pa.d)("scores",e,t,n),maxOutputSize:Object(Pa.d)("maxOutputSize",e,t,n),iouThreshold:Object(Pa.d)("iouThreshold",e,t,n),scoreThreshold:Object(Pa.d)("scoreThreshold",e,t,n),softNmsSigma:Object(Pa.d)("softNmsSigma",e,t,n)}}function c(e,t,n,a){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Sn.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"AddN":return[Wa.a(Object(Pa.d)("tensors",e,t,n))];case"FloorMod":case"Mod":return[Br.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"Mul":return[Vr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"RealDiv":case"Div":return[tr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"DivNoNan":return[er.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"FloorDiv":return[dr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"Sub":return[ja.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"Minimum":return[Lr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"Maximum":return[_r.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"Pow":return[Xr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"SquaredDifference":return[wa.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[wn.a(Object(Pa.d)("x",e,t,n))];case"Acos":return[kn.a(Object(Pa.d)("x",e,t,n))];case"Acosh":return[In.a(Object(Pa.d)("x",e,t,n))];case"Asin":return[Rn.a(Object(Pa.d)("x",e,t,n))];case"Asinh":return[Dn.a(Object(Pa.d)("x",e,t,n))];case"Atan":return[Fn.a(Object(Pa.d)("x",e,t,n))];case"Atan2":return[_n.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("y",e,t,n))];case"Atanh":return[Mn.a(Object(Pa.d)("x",e,t,n))];case"Ceil":return[Vn.a(Object(Pa.d)("x",e,t,n))];case"Complex":return[Ua.a(Object(Pa.d)("real",e,t,n),Object(Pa.d)("imag",e,t,n))];case"Cos":return[Yn.a(Object(Pa.d)("x",e,t,n))];case"Cosh":return[Kn.a(Object(Pa.d)("x",e,t,n))];case"Elu":return[rr.a(Object(Pa.d)("x",e,t,n))];case"Erf":return[sr.a(Object(Pa.d)("x",e,t,n))];case"Exp":return[ir.a(Object(Pa.d)("x",e,t,n))];case"Expm1":return[ur.a(Object(Pa.d)("x",e,t,n))];case"Floor":return[lr.a(Object(Pa.d)("x",e,t,n))];case"Log":return[Nr.a(Object(Pa.d)("x",e,t,n))];case"Log1p":return[Tr.a(Object(Pa.d)("x",e,t,n))];case"Imag":return[Ga.a(Object(Pa.d)("x",e,t,n))];case"Neg":return[Wr.a(Object(Pa.d)("x",e,t,n))];case"Reciprocal":return[Jr.a(Object(Pa.d)("x",e,t,n))];case"Real":return[qa.a(Object(Pa.d)("x",e,t,n))];case"Relu":return[ea.a(Object(Pa.d)("x",e,t,n))];case"Round":return[ia.a(Object(Pa.d)("x",e,t,n))];case"Selu":return[ua.a(Object(Pa.d)("x",e,t,n))];case"Sigmoid":return[la.a(Object(Pa.d)("x",e,t,n))];case"Sin":return[ha.a(Object(Pa.d)("x",e,t,n))];case"Sign":return[da.a(Object(Pa.d)("x",e,t,n))];case"Sinh":return[pa.a(Object(Pa.d)("x",e,t,n))];case"Softplus":return[ba.a(Object(Pa.d)("x",e,t,n))];case"Sqrt":return[xa.a(Object(Pa.d)("x",e,t,n))];case"Square":return[va.a(Object(Pa.d)("x",e,t,n))];case"Tanh":return[Ca.a(Object(Pa.d)("x",e,t,n))];case"Tan":return[Ta.a(Object(Pa.d)("x",e,t,n))];case"ClipByValue":return[Wn.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("clipValueMin",e,t,n),Object(Pa.d)("clipValueMax",e,t,n))];case"Relu6":return[ta.a(Object(Pa.d)("x",e,t,n))];case"Rsqrt":return[oa.a(Object(Pa.e)(e.inputNames[0],t,n))];case"Prod":return[Qr.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("axes",e,t,n))];case"LeakyRelu":return[vr.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("alpha",e,t,n))];case"Prelu":return[Zr.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("alpha",e,t,n))];case"IsNan":return[xr.a(Object(Pa.e)(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Object(Pa.d)("thenBranch",e,t,n),a=Object(Pa.d)("elseBranch",e,t,n),s=Object(Pa.d)("cond",e,t,n),i=Object(Pa.d)("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(Pa.d)("body",e,t,n),a=Object(Pa.d)("cond",e,t,n),s=Object(Pa.d)("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let c=s;for(;u[0];){const e=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const t=c.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return c}case"LoopCond":{const r=Object(Pa.d)("pred",e,t,n);return[Object(Pa.a)(r)]}case"Switch":{const r=Object(Pa.d)("pred",e,t,n);let a=Object(Pa.d)("data",e,t,n);return a.kept||(a=Object(Pa.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Object(Pa.e)(e,t,n)));if(r){const e=Object(Pa.e)(r,t,n);return[Object(Pa.a)(e)]}return}case"Enter":{const r=Object(Pa.d)("frameName",e,t,n),a=Object(Pa.d)("tensor",e,t,n);return n.enterFrame(r),[Object(Pa.a)(a)]}case"Exit":{const r=Object(Pa.d)("tensor",e,t,n);return n.exitFrame(),[Object(Pa.a)(r)]}case"NextIteration":{const r=Object(Pa.d)("tensor",e,t,n);return n.nextIteration(),[Object(Pa.a)(r)]}case"TensorArrayV3":{const r=Object(Pa.d)("size",e,t,n),a=Object(Pa.d)("dtype",e,t,n),s=Object(Pa.d)("elementShape",e,t,n),i=Object(Pa.d)("dynamicSize",e,t,n),o=Object(Pa.d)("clearAfterRead",e,t,n),u=Object(Pa.d)("identicalElementShapes",e,t,n),c=Object(Pa.d)("name",e,t,n),l=new Ha(c,a,r,s,u,i,o);return n.addTensorArray(l),[l.idTensor,Object(vn.ih)(1)]}case"TensorArrayWriteV3":{const r=Object(Pa.d)("tensorArrayId",e,t,n),a=Object(Pa.d)("index",e,t,n),s=Object(Pa.d)("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=Object(Pa.d)("tensorArrayId",e,t,n),a=Object(Pa.d)("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Object(Pa.d)("tensorArrayId",e,t,n),a=Object(Pa.d)("indices",e,t,n),s=Object(Pa.d)("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=Object(Pa.d)("tensorArrayId",e,t,n),a=Object(Pa.d)("indices",e,t,n),s=Object(Pa.d)("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=Object(Pa.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=Object(Pa.d)("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Object(Pa.d)("tensorArrayId",e,t,n),a=Object(Pa.d)("tensor",e,t,n),s=Object(Pa.d)("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=Object(Pa.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[Object(vn.ih)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(Pa.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(Pa.d)("tensorListId",e,t,n),a=Object(Pa.d)("index",e,t,n),s=Object(Pa.d)("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=Object(Pa.d)("tensorListId",e,t,n),a=Object(Pa.d)("index",e,t,n),s=Object(Pa.d)("elementShape",e,t,n),i=Object(Pa.d)("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(Pa.d)("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Ya([],n,e.dtype,r),i=Object(vn.qi)(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(Object(Pa.d)("tensor",e,t,n),r,Object(Pa.d)("elementShape",e,t,n),Object(Pa.d)("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(Pa.d)("elementShape",e,t,n),a=Object(Pa.d)("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new Ya([],e,t,n)}(r,a,Object(Pa.d)(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=Object(Pa.d)("tensorListId",e,t,n),a=Object(Pa.d)("indices",e,t,n),s=Object(Pa.d)("elementShape",e,t,n),i=Object(Pa.d)("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=Object(Pa.d)("tensorListId",e,t,n),a=Object(Pa.d)("elementShape",e,t,n),s=Object(Pa.d)("elementDType",e,t,n),i=Object(Pa.d)("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);r(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=Object(vn.qi)(e);return new Ya(s,t,a)}(Object(Pa.d)("tensor",e,t,n),Object(Pa.d)("elementShape",e,t,n),Object(Pa.d)("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const r=Object(Pa.d)("tensorListId",e,t,n),a=n.getTensorList(r.id),s=Object(Pa.d)("dtype",e,t,n),i=Object(Pa.d)("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=Object(Pa.d)("tensorListId",e,t,n),a=Object(Pa.d)("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Object(Pa.d)("tensorListId",e,t,n),a=Object(Pa.d)("elementShape",e,t,n),s=Object(Pa.d)("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=Object(Pa.d)("tensor",e,t,n),a=Object(Pa.d)("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=i(e.shape.slice(1),n),o=0===r?0:e.size/r,u=Object(vn.fi)((()=>{const n=[];e=Object(vn.Zg)(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],o];n[r]=Object(vn.Zg)(Object(vn.wh)(e,i,u),s)}return e.dispose(),n})),c=new Ya([],n,e.dtype,t.length);for(let e=0;e<u.length;e++)c.setItem(e,u[e]);return c}(r,Object(Pa.d)("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=Object(Pa.d)("stride",e,t,n),a=Object(Pa.d)("pad",e,t,n),s=Object(Pa.d)("dataFormat",e,t,n).toUpperCase(),i=Object(Pa.d)("dilation",e,t,n);return[Gn.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=Object(Pa.d)("strides",e,t,n),a=Object(Pa.c)(e,t,n),s=Object(Pa.d)("dataFormat",e,t,n).toUpperCase(),i=Object(Pa.d)("dilations",e,t,n);return[Hn.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=o(e,t,n);return[Ka.rb.conv2d({x:Object(Pa.d)("x",e,t,n),filter:Object(Pa.d)("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=o(e,t,n);return[Ka.rb.depthwiseConv2d({x:Object(Pa.d)("x",e,t,n),filter:Object(Pa.d)("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(Pa.d)("outputShape",e,t,n),a=Object(Pa.d)("strides",e,t,n),s=Object(Pa.c)(e,t,n);return[qn.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(Pa.d)("strides",e,t,n),a=Object(Pa.c)(e,t,n),s=Object(Pa.d)("dilations",e,t,n),i=Object(Pa.d)("dataFormat",e,t,n).toUpperCase();return[Qn.a(Object(Pa.d)("input",e,t,n),Object(Pa.d)("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=Object(Pa.d)("strides",e,t,n),a=Object(Pa.d)("pad",e,t,n),s=Object(Pa.d)("dataFormat",e,t,n).toUpperCase(),i=Object(Pa.d)("dilations",e,t,n);return[Xa.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Object(Pa.d)("strides",e,t,n),a=Object(Pa.d)("pad",e,t,n),s=Object(Pa.d)("kernelSize",e,t,n);return[zn.a(Object(Pa.d)("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(Pa.d)("strides",e,t,n),a=Object(Pa.d)("pad",e,t,n),s=Object(Pa.d)("kernelSize",e,t,n);return[Dr.a(Object(Pa.d)("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(Pa.d)("strides",e,t,n),a=Object(Pa.d)("pad",e,t,n),s=Object(Pa.d)("kernelSize",e,t,n),i=Object(Pa.d)("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Za.a(Object(Pa.d)("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=Object(Pa.d)("strides",e,t,n),a=Object(Pa.d)("pad",e,t,n),s=Object(Pa.d)("kernelSize",e,t,n);return[Qa.a(Object(Pa.d)("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(Pa.d)("strides",e,t,n),a=Object(Pa.d)("pad",e,t,n),s=Object(Pa.d)("kernelSize",e,t,n);return[Ja.a(Object(Pa.d)("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(Pa.d)("strides",e,t,n),a=Object(Pa.d)("pad",e,t,n),s=Object(Pa.d)("dilations",e,t,n),i=r[1],o=r[2],u=s[1],c=s[2];return[Jn.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("filter",e,t,n),[i,o],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=Object(Pa.d)("shape",e,t,n),a=Object(Pa.d)("dtype",e,t,n),s=Object(Pa.d)("value",e,t,n);return[es.a(r,s,a)]}case"LinSpace":{const r=Object(Pa.d)("start",e,t,n),a=Object(Pa.d)("stop",e,t,n),s=Object(Pa.d)("num",e,t,n);return[ts.a(r,a,s)]}case"Multinomial":{const r=Object(Pa.d)("logits",e,t,n),a=Object(Pa.d)("numSamples",e,t,n),s=Object(Pa.d)("seed",e,t,n);return[ns.a(r,a,s)]}case"OneHot":{const r=Object(Pa.d)("indices",e,t,n),a=Object(Pa.d)("depth",e,t,n),s=Object(Pa.d)("onValue",e,t,n),i=Object(Pa.d)("offValue",e,t,n);return[qr.a(r,a,s,i)]}case"Ones":return[rs.a(Object(Pa.d)("shape",e,t,n),Object(Pa.d)("dtype",e,t,n))];case"OnesLike":return[Hr.a(Object(Pa.d)("x",e,t,n))];case"RandomUniform":return[as.a(Object(Pa.d)("shape",e,t,n),Object(Pa.d)("minval",e,t,n),Object(Pa.d)("maxval",e,t,n),Object(Pa.d)("dtype",e,t,n))];case"Range":{const r=Object(Pa.d)("start",e,t,n),a=Object(Pa.d)("stop",e,t,n),s=Object(Pa.d)("step",e,t,n);return[ss.a(r,a,s,Object(Pa.d)("dtype",e,t,n))]}case"TruncatedNormal":{const r=Object(Pa.d)("shape",e,t,n),a=Object(Pa.d)("mean",e,t,n),s=Object(Pa.d)("stdDev",e,t,n),i=Object(Pa.d)("seed",e,t,n);return[is.a(r,a,s,Object(Pa.d)("dtype",e,t,n),i)]}case"Zeros":return[os.a(Object(Pa.d)("shape",e,t,n),Object(Pa.d)("dtype",e,t,n))];case"ZerosLike":return[Ma.a(Object(Pa.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:c}=u(e,t,n),l=await Ka.yb.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,c);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=u(e,t,n),c=Object(Pa.d)("padToMaxOutputSize",e,t,n),l=await Ka.yb.nonMaxSuppressionPaddedAsync(r,a,s,i,o,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=u(e,t,n);return[await Ka.yb.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=$n.a(Object(Pa.d)("condition",e,t,n),"bool"),a=[await us.a(r)];return r.dispose(),a}case"ListDiff":return cs.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=Object(Pa.d)("x",e,t,n),a=Object(Pa.d)("k",e,t,n),s=Object(Pa.d)("sorted",e,t,n),i=Aa.a(r,a,s);return[i.values,i.indices]}case"Unique":{const r=Object(Pa.d)("x",e,t,n),a=Ra.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(Pa.d)("x",e,t,n),a=Object(Pa.d)("axis",e,t,n),s=Ra.a(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Object(Pa.d)("images",e,t,n),a=Object(Pa.d)("size",e,t,n),s=Object(Pa.d)("alignCorners",e,t,n),i=Object(Pa.d)("halfPixelCenters",e,t,n);return[Ka.yb.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=Object(Pa.d)("images",e,t,n),a=Object(Pa.d)("size",e,t,n),s=Object(Pa.d)("alignCorners",e,t,n),i=Object(Pa.d)("halfPixelCenters",e,t,n);return[Ka.yb.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=Object(Pa.d)("image",e,t,n),a=Object(Pa.d)("boxes",e,t,n),s=Object(Pa.d)("boxInd",e,t,n),i=Object(Pa.d)("cropSize",e,t,n),o=Object(Pa.d)("method",e,t,n),u=Object(Pa.d)("extrapolationValue",e,t,n);return[Ka.yb.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Object(Pa.d)("default",e,t,n);return[Object(Pa.e)(e.name,t,n)||r];case"Placeholder":return[Object(Pa.e)(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(Pa.d)("x",e,t,n);return[Object(Pa.a)(r)]}case"IdentityN":return Object(Pa.d)("x",e,t,n).map((e=>Object(Pa.a)(e)));case"Snapshot":const a=Object(Pa.d)("x",e,t,n);return[Object(Pa.a)(a)];case"Shape":return[ls.a(Object(Pa.d)("x",e,t,n).shape,"int32")];case"ShapeN":return Object(Pa.d)("x",e,t,n).map((e=>ls.a(e.shape)));case"Size":return[ds.a(Object(Pa.d)("x",e,t,n).size,"int32")];case"Rank":return[ds.a(Object(Pa.d)("x",e,t,n).rank,"int32")];case"NoOp":return[ds.a(1)];case"Print":const s=Object(Pa.d)("x",e,t,n),i=Object(Pa.d)("data",e,t,n),o=Object(Pa.d)("message",e,t,n),u=Object(Pa.d)("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"Equal":return[ar.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"NotEqual":return[Gr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"Greater":return[fr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"GreaterEqual":return[pr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"Less":return[Or.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"LessEqual":return[wr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"LogicalAnd":return[Cr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"LogicalNot":return[Er.a(Object(Pa.d)("a",e,t,n))];case"LogicalOr":return[Ar.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];case"Select":case"SelectV2":return[_a.a(Object(Pa.d)("condition",e,t,n),Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Rr.a(Object(Pa.d)("a",e,t,n),Object(Pa.d)("b",e,t,n),Object(Pa.d)("transposeA",e,t,n),Object(Pa.d)("transposeB",e,t,n))];case"Einsum":return[ps.a(Object(Pa.d)("equation",e,t,n),...Object(Pa.d)("tensors",e,t,n))];case"Transpose":return[$a.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Object(Pa.d)("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=Object(Pa.d)("numArgs",e,t,n),u=Object(Pa.d)("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,l]=Object(Pa.d)("args",e,t,n);return[Ka.rb.matMul({a:Object(Pa.d)("a",e,t,n),b:Object(Pa.d)("b",e,t,n),transposeA:Object(Pa.d)("transposeA",e,t,n),transposeB:Object(Pa.d)("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Pn.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("mean",e,t,n),Object(Pa.d)("variance",e,t,n),Object(Pa.d)("offset",e,t,n),Object(Pa.d)("scale",e,t,n),Object(Pa.d)("epsilon",e,t,n))];case"LRN":return[kr.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("radius",e,t,n),Object(Pa.d)("bias",e,t,n),Object(Pa.d)("alpha",e,t,n),Object(Pa.d)("beta",e,t,n))];case"Softmax":return[ma.a(Object(Pa.d)("x",e,t,n))];case"LogSoftmax":return[Sr.a(Object(Pa.d)("x",e,t,n))];case"SparseToDense":return[fs.a(Object(Pa.d)("sparseIndices",e,t,n),Object(Pa.d)("outputShape",e,t,n),Object(Pa.d)("sparseValues",e,t,n),Object(Pa.d)("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("keepDims",e,t,n);return[Fr.a(Object(Pa.d)("x",e,t,n),r,a)]}case"Mean":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("keepDims",e,t,n);return[Mr.a(Object(Pa.d)("x",e,t,n),r,a)]}case"Min":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("keepDims",e,t,n);return[zr.a(Object(Pa.d)("x",e,t,n),r,a)]}case"Sum":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("keepDims",e,t,n);return[Na.a(Object(Pa.d)("x",e,t,n),r,a)]}case"All":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("keepDims",e,t,n);return[jn.a(Object(Pa.d)("x",e,t,n),r,a)]}case"Any":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("keepDims",e,t,n);return[Nn.a(Object(Pa.d)("x",e,t,n),r,a)]}case"ArgMax":{const r=Object(Pa.d)("axis",e,t,n);return[Tn.a(Object(Pa.d)("x",e,t,n),r)]}case"ArgMin":{const r=Object(Pa.d)("axis",e,t,n);return[Cn.a(Object(Pa.d)("x",e,t,n),r)]}case"Prod":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("keepDims",e,t,n);return[Qr.a(Object(Pa.d)("x",e,t,n),r,a)]}case"Cumsum":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("exclusive",e,t,n),s=Object(Pa.d)("reverse",e,t,n);return[Xn.a(Object(Pa.d)("x",e,t,n),r,a,s)]}case"Bincount":const r=Object(Pa.d)("x",e,t,n),a=Object(Pa.d)("weights",e,t,n),s=Object(Pa.d)("size",e,t,n);return[ms.a(r,a,s)];case"DenseBincount":{const r=Object(Pa.d)("x",e,t,n),a=Object(Pa.d)("weights",e,t,n),s=Object(Pa.d)("size",e,t,n),i=Object(Pa.d)("binaryOutput",e,t,n);return[bs.a(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Object(Pa.d)("n",e,t,n),a=Object(Pa.d)("axis",e,t,n);let s=Object(Pa.d)("tensors",e,t,n);return s=s.slice(0,r),[Un.a(s,a)]}case"Gather":{const r=Object(Pa.d)("x",e,t,n),a=Object(Pa.d)("indices",e,t,n);return[hr.a(r,$n.a(a,"int32"),0)]}case"GatherV2":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("batchDims",e,t,n),s=Object(Pa.d)("x",e,t,n),i=Object(Pa.d)("indices",e,t,n);return[hr.a(s,$n.a(i,"int32"),r,a)]}case"Reverse":{const r=Object(Pa.d)("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=Object(Pa.d)("x",e,t,n);return[aa.a(s,a)]}case"ReverseV2":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("x",e,t,n);return[aa.a(a,r)]}case"Slice":{const r=Object(Pa.d)("begin",e,t,n),a=Object(Pa.d)("size",e,t,n);return[fa.a(Object(Pa.d)("x",e,t,n),r,a)]}case"StridedSlice":{const r=Object(Pa.d)("begin",e,t,n),a=Object(Pa.d)("end",e,t,n),s=Object(Pa.d)("strides",e,t,n),i=Object(Pa.d)("beginMask",e,t,n),o=Object(Pa.d)("endMask",e,t,n),u=Object(Pa.d)("ellipsisMask",e,t,n),c=Object(Pa.d)("newAxisMask",e,t,n),l=Object(Pa.d)("shrinkAxisMask",e,t,n),d=Object(Pa.d)("x",e,t,n);return[Sa.a(d,r,a,s,i,o,u,c,l)]}case"Pack":return Object(vn.fi)((()=>{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("tensors",e,t,n),s=a[0].shape,i=Oa.a(a[0]).shape,o=a.map((e=>{const t=vn.si.arraysEqual(e.shape,s);if(!t&&!vn.si.arraysEqual(Oa.a(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:En.a(e,s)}));return[ka.a(o,r)]}));case"Unpack":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("tensor",e,t,n);return Fa.a(a,r)}case"Tile":{const r=Object(Pa.d)("reps",e,t,n);return[Ea.a(Object(Pa.d)("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Object(Pa.d)("axis",e,t,n),a=Object(Pa.d)("numOrSizeSplits",e,t,n),s=Object(Pa.d)("x",e,t,n);return ya.a(s,a,r)}case"ScatterNd":{const r=Object(Pa.d)("indices",e,t,n),a=Object(Pa.d)("values",e,t,n),s=Object(Pa.d)("shape",e,t,n);return[gs.a(r,a,s)]}case"GatherNd":{const r=Object(Pa.d)("x",e,t,n),a=Object(Pa.d)("indices",e,t,n);return[ys.a(r,a)]}case"SparseToDense":{const r=Object(Pa.d)("sparseIndices",e,t,n),a=Object(Pa.d)("outputShape",e,t,n),s=Object(Pa.d)("sparseValues",e,t,n),i=Object(Pa.d)("defaultValue",e,t,n);return[fs.a(r,s,a,s.dtype===i.dtype?i:$n.a(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=Ka.nd.sparseFillEmptyRows(Object(Pa.d)("indices",e,t,n),Object(Pa.d)("values",e,t,n),Object(Pa.d)("denseShape",e,t,n),Object(Pa.d)("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=Ka.nd.sparseReshape(Object(Pa.d)("inputIndices",e,t,n),Object(Pa.d)("inputShape",e,t,n),Object(Pa.d)("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Ka.nd.sparseSegmentMean(Object(Pa.d)("data",e,t,n),Object(Pa.d)("indices",e,t,n),Object(Pa.d)("segmentIds",e,t,n))];case"SparseSegmentSum":return[Ka.nd.sparseSegmentSum(Object(Pa.d)("data",e,t,n),Object(Pa.d)("indices",e,t,n),Object(Pa.d)("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"FFT":return[cr.a(Object(Pa.d)("x",e,t,n))];case"IFFT":return[mr.a(Object(Pa.d)("x",e,t,n))];case"RFFT":return[sa.a(Object(Pa.d)("x",e,t,n))];case"IRFFT":return[br.a(Object(Pa.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=Ka.yd.stringNGrams(Object(Pa.d)("data",e,t,n),Object(Pa.d)("dataSplits",e,t,n),Object(Pa.d)("separator",e,t,n),Object(Pa.d)("nGramWidths",e,t,n),Object(Pa.d)("leftPad",e,t,n),Object(Pa.d)("rightPad",e,t,n),Object(Pa.d)("padWidth",e,t,n),Object(Pa.d)("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=Ka.yd.stringSplit(Object(Pa.d)("input",e,t,n),Object(Pa.d)("delimiter",e,t,n),Object(Pa.d)("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[Ka.yd.stringToHashBucketFast(Object(Pa.d)("input",e,t,n),Object(Pa.d)("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return vn.fi((()=>((e,t,n)=>{switch(e.op){case"Cast":return[$n.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("dtype",e,t,n))];case"ExpandDims":{const r=Object(Pa.d)("axis",e,t,n);return[or.a(Object(Pa.d)("x",e,t,n),r)]}case"Squeeze":{const r=Object(Pa.d)("axis",e,t,n);return[Oa.a(Object(Pa.d)("x",e,t,n),r)]}case"Reshape":return[En.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("shape",e,t,n))];case"MirrorPad":return[Pr.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("padding",e,t,n),Object(Pa.d)("mode",e,t,n))];case"PadV2":case"Pad":return[Yr.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("padding",e,t,n),Object(Pa.d)("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Object(Pa.d)("blockShape",e,t,n),a=Object(Pa.d)("paddings",e,t,n);return[ga.a(Object(Pa.d)("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Object(Pa.d)("blockShape",e,t,n),a=Object(Pa.d)("crops",e,t,n);return[Ln.a(Object(Pa.d)("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Object(Pa.d)("blockSize",e,t,n),a=Object(Pa.d)("dataFormat",e,t,n).toUpperCase();return[Zn.a(Object(Pa.d)("x",e,t,n),r,a)]}case"BroadcastTo":return[Bn.a(Object(Pa.d)("x",e,t,n),Object(Pa.d)("shape",e,t,n))];case"BroadcastArgs":return[xs.a(Object(Pa.d)("s0",e,t,n),Object(Pa.d)("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=Object(Pa.d)("keyDType",e,t,n),s=Object(Pa.d)("valueDType",e,t,n),i=new hs(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(Pa.d)("tableHandle",e,t,n,r),s=Object(Pa.d)("keys",e,t,n),i=Object(Pa.d)("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(Pa.d)("tableHandle",e,t,n,r),s=Object(Pa.d)("keys",e,t,n),i=Object(Pa.d)("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Object(Pa.d)("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,a);case"custom":const s=Object(Va.b)(e.op);if(s&&s.customExecutor)return s.customExecutor(new Ba(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return vn.si.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}function d(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,c=Object.keys(e).map((e=>Object(Pa.g)(e)[0]));let l=[];null!=r&&(l=r.map((e=>Object(Pa.g)(e.name)[0])));const d=[...t];for(;d.length>0;){const e=d.pop();(h(e)||p(e)||f(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&(-1===c.indexOf(e.name)&&-1===l.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function h(e){return ws.indexOf(e.op)>=0}function p(e){return Os.indexOf(e.op)>=0}function f(e){return ks.indexOf(e.op)>=0}function m(){return m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},m.apply(this,arguments)}async function b(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new js(e,t);return await n.load(),n}function g(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&vn.si.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function y(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(g(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=vn.si.sizeFromShape(i.shape),l=n||i.dtype,d=vn.si.getArrayFromDType(l,c);for(let e=0;e<c;++e)d[e]=t(u[e],a);return o.makeTensorInfo(i.shape,l,d)}}function x(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(g(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=n||i.dtype,l=t(u,c,a);return o.makeTensorInfo(i.shape,c,l)}}function v(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function w(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;g([a],"leakyRelu");const i=vn.si.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=vn.si.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}function O(e){return(t,n,r,a,s)=>{const i=vn.Vd.assertAndGetBroadcastShape(t,n),o=i.length,u=vn.si.computeStrides(i),c=vn.si.sizeFromShape(i),l=vn.si.getTypedArrayFromDType(s,c),d=t.length,h=n.length,p=vn.si.computeStrides(t),f=vn.si.computeStrides(n),m=vn.Vd.getBroadcastDims(t,i),b=vn.Vd.getBroadcastDims(n,i);if(m.length+b.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=vn.si.indexToLoc(t,o,u),s=n.slice(-d);m.forEach((e=>s[e]=0));const i=vn.si.locToIndex(s,d,p),c=n.slice(-h);b.forEach((e=>c[e]=0));const g=vn.si.locToIndex(c,h,f);l[t]=e(r[i],a[g])}return[l,i]}}function k(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;g([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=Fs(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}function I(e){return(t,n,r)=>{const a=vn.si.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function S(e,t,n,r,a){if("linear"===n)return v({inputs:{x:t},backend:e});if("relu"===n)return Ms({inputs:{x:t},backend:e});if("elu"===n)return As({inputs:{x:t},backend:e});if("relu6"===n)return Ls({inputs:{x:t},backend:e});if("prelu"===n)return k({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return w({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Vs({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function j(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}function N(e,t,n="float32"){if("complex64"===n){return j({inputs:{real:N(e,t,"float32"),imag:N(e,t,"float32")},backend:e})}const r=vn.si.makeZerosTypedArray(vn.si.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function T(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}function C(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return v({inputs:{x:a},backend:n});const e=N(n,a.shape,a.dtype),t=C({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=j({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=T({inputs:{input:a},backend:n}),t=C({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!vn.si.hasEncodingLoss(a.dtype,s)){const e=v({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=vn.si.toTypedArray([0],a.dtype),[r,s]=O(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}function E(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;g([s,i],e);const u=o.data.get(s.dataId).values,c=o.data.get(i.dataId).values,l="string"===s.dtype?vn.Vd.fromUint8ToStringArray(u):u,d="string"===s.dtype?vn.Vd.fromUint8ToStringArray(c):c,h=r||s.dtype,[p,f]=t(s.shape,i.shape,l,d,h);return o.makeTensorInfo(f,h,p)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=C({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.imag,a=o.data.get(t.complexTensorInfos.real.dataId).values,u=o.data.get(r.dataId).values,c=C({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),l=o.data.get(c.dataId),d=l.complexTensorInfos.imag,h=o.data.get(l.complexTensorInfos.real.dataId).values,p=o.data.get(d.dataId).values,[f,m,b]=n(s.shape,i.shape,a,u,h,p),g=o.makeTensorInfo(b,"float32",f),y=o.makeTensorInfo(b,"float32",m),x=j({inputs:{real:g,imag:y},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo(y),x}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,c]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(c,a,u)}}}function A(e){return(t,n,r,a,s,i)=>{const o=vn.Vd.assertAndGetBroadcastShape(t,n),u=vn.si.sizeFromShape(o),c=o.length,l=vn.si.computeStrides(o),d=vn.si.getTypedArrayFromDType("float32",u),h=vn.si.getTypedArrayFromDType("float32",u),p=vn.Vd.getBroadcastDims(t,o),f=vn.Vd.getBroadcastDims(n,o),m=vn.Vd.mergeRealAndImagArrays(r,a),b=vn.Vd.mergeRealAndImagArrays(s,i),g=t.length,y=vn.si.computeStrides(t),x=n.length,v=vn.si.computeStrides(n);if(p.length+f.length===0)for(let t=0;t<d.length;t++){const n=t%m.length,r=t%b.length,a=e(m[2*n],m[2*n+1],b[2*r],b[2*r+1]);d[t]=a.real,h[t]=a.imag}else for(let t=0;t<d.length;t++){const n=vn.si.indexToLoc(t,c,l),r=n.slice(-g);p.forEach((e=>r[e]=0));const a=vn.si.locToIndex(r,g,y),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=vn.si.locToIndex(s,x,v),o=e(m[2*a],m[2*a+1],b[2*i],b[2*i+1]);d[t]=o.real,h[t]=o.imag}return[d,h,o]}}function $(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=vn.si.sizeFromShape(a.shape),o=vn.si.inferFromImplicitShape(s,i),u=vn.si.sizeFromShape(o);vn.si.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.imag;c.complexTensorInfos.real.shape=o,e.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}function R(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;g([a,s],"matMul");const u=a.shape.length,c=s.shape.length,l=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[c-1]:s.shape[c-2],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[c-2]:s.shape[c-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),b=vn.si.sizeFromShape(f),y=vn.si.sizeFromShape(m),x=vn.ge.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,p]);vn.si.assert(l===d,(()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const v=o?[y,p,d]:[y,d,p],w=$({inputs:{x:a},backend:n,attrs:{shape:i?[b,l,h]:[b,h,l]}}),O=$({inputs:{x:s},backend:n,attrs:{shape:v}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],S=o?O.shape[1]:O.shape[2],j=Math.max(b,y),N=n.data.get(w.dataId).values,T=n.data.get(O.dataId).values,C=vn.si.computeStrides(w.shape),E=vn.si.computeStrides(O.shape),[A,R,D]=i?[C[0],1,C[1]]:[C[0],C[1],1],[F,_,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],z=I*S,L=Object(vn.ie)([j,I,S],w.dtype),P=L.values,B=n.blockSize;for(let e=0;e<j;e++)for(let t=0;t<I;t+=B)for(let n=0;n<S;n+=B)for(let r=0;r<k;r+=B){const a=Math.min(t+B,I),s=Math.min(n+B,S),i=Math.min(r+B,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,b-1)*A,s=Math.min(e,y-1)*M;n+=N[r+o*R+a*D]*T[a*F+t*_+s]}P[e*z+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(O),n.makeTensorInfo(x,L.dtype,L.values)}function D(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function F(e,t,n,r,a){const s=t.length,i=vn.si.sizeFromShape(t),o=vn.si.computeStrides(t),u=vn.si.computeStrides(a),c=vn.si.getTypedArrayFromDType(n,vn.si.sizeFromShape(a));for(let t=0;t<i;++t){const n=vn.si.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];c[vn.si.locToIndex(a,s,u)]=e[t]}return c}function _(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;g(a,"transpose");const i=new Array(a.shape.length);for(let e=0;e<i.length;e++)i[e]=a.shape[s[e]];const o=F(r.data.get(a.dataId).values,a.shape,a.dtype,s,i);return{dataId:r.write(o,i,a.dtype),shape:i,dtype:a.dtype}}function M(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,l=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Object(vn.ie)(a.outShape,n),b=m.values,g=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*g,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let g=0;g<a.outHeight;++g){const v=g*i-h,w=Math.max(0,v),O=Math.min(a.inHeight,l+v),k=n+g*y;for(let n=0;n<a.outWidth;++n){const i=n*o-p,l=Math.max(0,i),h=Math.min(a.inWidth,d+i);let g=f,y=0,v=0;for(let n=w;n<O;n+=u){const a=m+n*r[1];for(let n=l;n<h;n+=c){const i=e[a+n*r[2]+t];"max"===s&&i>g?g=i:"avg"===s&&(y+=i,v++)}if(isNaN(g))break}b[k+n*x+t]="avg"===s?y/v:g}}}return m}function z(e,t,n,r,a=!1,s=!1){const i=Object(vn.ie)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Object(vn.ie)(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const b=n*o-p;let g=b;for(;g<0;)g+=c;const y=Math.min(r.inHeight,d+b);for(let o=0;o<r.outWidth;++o){const d=o*u-f;let p=d;for(;p<0;)p+=l;const x=Math.min(r.inWidth,h+d);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=g;n<y;n+=c){const i=n-b;for(let o=p;o<x;o+=l){const u=o-d,c=m.get(e,n,o,t);c>v&&(v=c,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+u)}}i.set(w,e,n,o,t)}}return i}function L(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,c=a.dilationDepth,l=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,b=a.padInfo.top,g=a.padInfo.left,y="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Object(vn.ie)(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],O=a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[3]*a.outShape[4],I=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const S=w*i-m;let j=S;for(;j<0;)j+=c;const N=Math.min(a.inDepth,h+S),T=n+w*O;for(let n=0;n<a.outHeight;++n){const i=n*o-b;let h=i;for(;h<0;)h+=l;const m=Math.min(a.inHeight,p+i),w=T+n*k;for(let n=0;n<a.outWidth;++n){const i=n*u-g;let o=i;for(;o<0;)o+=d;const p=Math.min(a.inWidth,f+i),b=w+n*I;let O=y,k=0,S=0;for(let n=j;n<N;n+=c){const a=x+n*r[1];for(let n=h;n<m;n+=l){const i=a+n*r[2];for(let n=o;n<p;n+=d){const a=e[i+n*r[3]+t];if("max"===s&&a>O?O=a:"avg"===s&&(k+=a,S++),isNaN(O))break}if(isNaN(O))break}if(isNaN(O))break}v[b+t]="avg"===s?k/S:O}}}}return x}function P(e,t,n,r,a){const s=vn.Bh.isSliceContinous(r,t,n),i=vn.si.sizeFromShape(n),o=vn.si.computeStrides(r);if(s){const n=vn.Bh.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u="string"===a?vn.Vd.fromUint8ToStringArray(e):e,c=Object(vn.ie)(r,a,u),l=Object(vn.ie)(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(c.get(...r),...n)}return"string"===a?vn.Vd.fromStringArrayToUint8(l.values):l.values}function B(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;g(a,"slice");const[o,u]=vn.Bh.parseSliceParams(a,s,i);vn.Bh.assertParamsValid(a,o,u);const c=P(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,c)}function V(e,t,n,r,a){const s=vn.si.sizeFromShape(r),i=vn.si.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function W(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=Object(vn.ie)([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||i.set(r?1:t.size>0?i.get(o,s)+t.get(o,a):i.get(o,s)+1,o,s)}return i}function U(e,t,n,r){const a=vn.si.getArrayFromDType(n,vn.si.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=vn.si.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?vn.Vd.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}function G(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}function q(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=vn.si.parseAxisParam(a,t[0].shape)[0];let i=vn.Vd.computeOutShape(t.map((e=>e.shape)),s);if(0===vn.si.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>vn.si.sizeFromShape(e.shape)>0));if(1===o.length)return v({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(vn.Vd.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map((e=>T({inputs:{input:e},backend:n}))),t=o.map((e=>G({inputs:{input:e},backend:n}))),r=q({inputs:e,backend:n,attrs:{axis:s}}),a=q({inputs:t,backend:n,attrs:{axis:s}}),i=j({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const c=o.map((e=>{const t=vn.si.sizeFromShape(e.shape.slice(s));return $({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=vn.Vd.computeOutShape(c.map((e=>e.shape)),1);const d=U(l,i,t[0].dtype,1===c[0].shape[0]),h=vn.Vd.computeOutShape(o.map((e=>e.shape)),s),p=n.makeTensorInfo(h,t[0].dtype,d);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}function H(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r;g([a,s],"conv2d");const d=vn.Vd.convertConv2DDataFormat(u),h=vn.Vd.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,b=h.dilationWidth,y=h.padInfo.left,x=h.padInfo.top,v="channelsLast"===h.dataFormat,w=new vn.td(h.outShape,a.dtype),O=vn.si.computeStrides(a.shape),k=vn.si.computeStrides(s.shape),I=O[0],S=v?O[1]:O[2],j=v?O[2]:1,N=v?1:O[1],T=w.strides[0],C=v?w.strides[1]:w.strides[2],E=v?w.strides[2]:1,A=v?1:w.strides[1],$=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,D=w.values;for(let e=0;e<h.batchSize;++e){const t=e*I,n=e*T;for(let e=0;e<h.outHeight;++e){const r=n+e*C,a=e*h.strideHeight-x;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=h.inHeight)continue;const s=e*k[0],i=t+n*S;for(let e=0;e<h.outWidth;++e){const t=r+e*E,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*b;if(r<0||r>=h.inWidth)continue;const a=i+r*j;let o=s+e*k[1];for(let e=0;e<h.inChannels;++e){const n=$[a+e*N];for(let e=0;e<h.outChannels;++e)D[t+e*A]+=n*R[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}function Y(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;g([a,s],"depthwiseConv2DNative");const l=vn.si.computeStrides(a.shape),d=vn.si.computeStrides(s.shape);let h=u;null==h&&(h=[1,1]),vn.si.assert(vn.Vd.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const p=vn.Vd.computeConv2DInfo(a.shape,s.shape,i,h,o,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:b,dilationWidth:y,padInfo:x}=p,v=x.left,w=x.top,O=p.outChannels/p.inChannels,k=new vn.td(p.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,j=k.values;for(let e=0;e<p.batchSize;++e){const t=e*l[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=a+e*b;if(n<0||n>=p.inHeight)continue;const s=e*d[0],i=t+n*l[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-v;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const a=i+r*p.inChannels;let o=t,u=s+e*d[1];for(let e=0;e<p.inChannels;++e){const t=I[a+e];for(let e=0;e<O;++e)j[o+e]+=t*S[u+e];o+=O,u+=O}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}function K(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;g(a,"sum"),o="bool"===a.dtype?C({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):v({inputs:{x:a},backend:n});const u=o.shape.length,c=vn.si.parseAxisParam(s,o.shape),l=vn.Vd.getAxesPermutation(c,u);let d=c,h=o;null!=l&&(h=_({inputs:{x:o},backend:n,attrs:{perm:l}}),d=vn.Vd.getInnerMostAxes(d.length,u)),vn.Vd.assertAxesAreInnerMostDims("sum",d,h.shape.length);const[p,f]=vn.Vd.computeOutAndReduceShapes(h.shape,d);let m=N(n,p,vn.Vd.upcastType(h.dtype,"int32"));const b=vn.si.sizeFromShape(f),y=n.data.get(m.dataId).values,x=n.data.get(h.dataId).values;for(let e=0;e<y.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=x[t+e];y[e]=n}if(i){const e=m;m=$({inputs:{x:m},backend:n,attrs:{shape:vn.Vd.expandShapeToKeepDim(m.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=l&&n.disposeIntermediateTensorInfo(h),m}function X(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(vn.si.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),$({inputs:{x:a},backend:n,attrs:{shape:o}})}function Z(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[a,s],l=vn.si.sizeFromShape(c),d=vn.si.getTypedArrayFromDType("float32",l),h=vn.si.getTypedArrayFromDType("float32",l);for(let e=0;e<a;e++){const r=B({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=B({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=j({inputs:{real:r,imag:a},backend:n}),{real:c,imag:l}=Q(i,t,n),p=vn.Vd.mergeRealAndImagArrays(c,l);for(let t=0;t<s;t++){const n=vn.Vd.getComplexWithIndex(p,t);d[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",h),m=j({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Q(e,t,n){const r=vn.si.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=J(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",vn.si.createScalarValue(r,"float32")),i=v({inputs:{x:s},backend:n}),u=Do.kernelFunc({inputs:{a:e,b:s},backend:n}),c=Do.kernelFunc({inputs:{a:t,b:i},backend:n}),l=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:d}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=vn.Vd.exponent(a*r,t,n),u=vn.Vd.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),vn.Vd.assignToTypedArray(r,s,i,a)}return r}(vn.Vd.mergeRealAndImagArrays(s,i),r,t);return vn.Vd.splitRealAndImagArrays(e)}var o}function J(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=vn.Vd.mergeRealAndImagArrays(e,t),i=n/2,o=vn.Vd.complexWithEvenIndex(s),u=o.real,c=o.imag,l=[u.length],d=a.makeTensorInfo(l,"float32",u),h=a.makeTensorInfo(l,"float32",c),p=j({inputs:{real:d,imag:h},backend:a}),f=vn.Vd.complexWithOddIndex(s),m=f.real,b=f.imag,g=[m.length],y=a.makeTensorInfo(g,"float32",m),x=a.makeTensorInfo(g,"float32",b),v=j({inputs:{real:y,imag:x},backend:a}),w=J(u,c,i,r,a),O=w.real,k=w.imag,I=[O.length],S=a.makeTensorInfo(I,"float32",O),N=a.makeTensorInfo(I,"float32",k),C=j({inputs:{real:S,imag:N},backend:a}),E=J(m,b,i,r,a),A=E.real,$=E.imag,R=[A.length],D=a.makeTensorInfo(R,"float32",A),F=a.makeTensorInfo(R,"float32",$),_=j({inputs:{real:D,imag:F},backend:a}),M=vn.Vd.exponents(n,r),z=[M.real.length],L=a.makeTensorInfo(z,"float32",M.real),P=a.makeTensorInfo(z,"float32",M.imag),B=j({inputs:{real:L,imag:P},backend:a}),V=uo({inputs:{a:B,b:_},backend:a}),W=Ks({inputs:{a:C,b:V},backend:a}),U=Mo({inputs:{a:C,b:V},backend:a}),H=T({inputs:{input:W},backend:a}),Y=T({inputs:{input:U},backend:a}),K=G({inputs:{input:W},backend:a}),X=G({inputs:{input:U},backend:a}),Z=q({inputs:[H,Y],backend:a,attrs:{axis:0}}),Q=q({inputs:[K,X],backend:a,attrs:{axis:0}}),ee=a.data.get(Z.dataId).values,te=a.data.get(Q.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(Y),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(Z),a.disposeIntermediateTensorInfo(Q),{real:ee,imag:te}}function ee(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||vn.si.inferDtype(a),o=vn.si.getArrayFromDType(i,vn.si.sizeFromShape(r));return function(e,t){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}function te(e,t,n,r,a,s,i,o,u){const c=Object(vn.ie)([r,s],n);for(let n=0;n<r;n++){const r=[];let l=0;for(let t=0;t<a;t++){const s=e[n*a+t];l+=s*i[t],r.push(s)}if(l<0||l>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)c.values[n*s+e]=t.get(...t.indexToLoc(l*s+e))}return c}function ne(e,t,n){const r=Object(vn.ie)(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=t.locToIndex([a[0],a[2]]);a[2]=t.values[s];const i=e.locToIndex(a);0<=i&&i<e.values.length&&(r.values[n]=e.values[i])}return r}function re(e,t,n){const r=(t-e)/(n-1),a=vn.si.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}function ae(e,t,n,r){const a=vn.si.getTypedArrayFromDType(r,vn.si.sizeFromShape(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}function se(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const c=u.length,l=vn.si.parseAxisParam(s,u);let d=l;const h=vn.Vd.getAxesPermutation(d,c);let p=o.data.get(a.dataId).values;if(null!=h){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[h[t]];p=F(p,u,a.dtype,h,e),d=vn.Vd.getInnerMostAxes(d.length,c),u=e}g(a,"max"),vn.Vd.assertAxesAreInnerMostDims("max",d,c);const[f,m]=vn.Vd.computeOutAndReduceShapes(u,d),b=ae(p,vn.si.sizeFromShape(m),f,a.dtype),y=o.write(b,f,a.dtype);let x=f;if(i){x=vn.Vd.expandShapeToKeepDim(f,l)}return{dataId:y,shape:x,dtype:a.dtype}}function ie(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=vn.si.parseAxisParam([o],a.shape),c=se({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=vn.Vd.expandShapeToKeepDim(c.shape,u),d=$({inputs:{x:c},backend:n,attrs:{shape:l}}),h=Mo({inputs:{a:a,b:d},backend:n}),p=jo({inputs:{x:h},backend:n}),f=K({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=$({inputs:{x:f},backend:n,attrs:{shape:l}}),b=Ro({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function oe(e,t,n){const r=vn.si.createScalarValue(-1,n);return io([],t,r,e,n)}function ue(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=T({inputs:{input:r},backend:n}),t=ue({inputs:{x:e},backend:n}),a=G({inputs:{input:r},backend:n}),s=ue({inputs:{x:a},backend:n}),i=j({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return ee({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}function ce(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return X({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{vn.si.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),vn.si.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=q({inputs:t.map((e=>{const t=X({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}function le(e,t,n,r){const[a,s]=vn.Vd.computeOutAndReduceShapes(e,r),i=Object(vn.ri)(t,"int32"),o=vn.si.makeZerosTypedArray(vn.si.sizeFromShape(a),i),u=vn.si.sizeFromShape(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}function de(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return vn.si.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=vn.si.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}function he(e,t,n,r,a,s,i,o,u,c){const l=[r/a,a],d=e.values,h=t.values;if(0===r)return Object(vn.ie)(n,t.dtype);const p=Object(vn.ie)(l,t.dtype);p.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=d[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)c?p.values[u*a+n]+=h[e*a+n]:p.values[u*a+n]=0===t.rank?h[0]:h[e*a+n]}return p}function pe(e,t,n,r,a,s,i){const o=t[0],u=s[0],c=new Array(u),l=new Array(o),d=t[1];if(0===u){if(0!==o)throw new Error(vn.Vd.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[vn.si.getArrayFromDType(n,0),[0,d],vn.si.getArrayFromDType(a,0),c,l]}let h=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*d];if(n<0)throw new Error(vn.Vd.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=u)throw new Error(vn.Vd.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,u));++f[n],h=h&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];c[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&h){const t=e,n=r;for(let e=0;e<o;++e)l[e]=e;return[t,[o,d],n,c,l]}{const t=f[u-1],s=vn.si.getArrayFromDType(n,t*d),h=vn.si.getArrayFromDType(a,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*d],a=(0===n?0:f[n-1])+p[n];p[n]++;for(let n=0;n<d;++n)s[a*d+n]=e[t*d+n];h[a]=r[t],l[t]=a}for(let e=0;e<u;++e){if(0===p[e]){const t=0===e?0:f[e-1];s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;h[t]=i}}return[s,[t,d],h,c,l]}}function fe(e,t,n,r,a){const s=vn.si.sizeFromShape(r),i=t[0],o=a.length,u=[];let c=1,l=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==l)throw new Error(vn.Vd.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,e));l=e,u.push(1)}else{if(t<0)throw new Error(vn.Vd.getSparseReshapeNegativeOutputDimErrorMessage(e,t));c*=t,u.push(t)}}if(-1!==l){if(c<=0)throw new Error(vn.Vd.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(s/c);if(c*e!==s)throw new Error(vn.Vd.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[l]=e}if(vn.si.sizeFromShape(u)!==s)throw new Error(vn.Vd.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const d=r.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=vn.si.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*h[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],u]}function me(e,t,n,r,a,s=!1,i=0){const o=r.length,u=[t[0],e.length/t[0]],c=u[1],l=o>0?a[o-1]+1:0;if(l<0)throw new Error(vn.Vd.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=t.slice();d[0]=l;const h=d.reduce(((e,t)=>e*t),1),p=vn.si.getArrayFromDType(n,h);if(0===o)return l>0&&p.fill(i),[p,d];if(l<=0)throw new Error(vn.Vd.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,b=0,g=a[f];for(;;){let t=0;if(m<o){if(t=a[m],g===t){++m;continue}if(g>=t)throw new Error(vn.Vd.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(g<0||g>=l)throw new Error(vn.Vd.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(g,l));g>b&&p.fill(i,b*c,g*c);for(let t=f;t<m;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(vn.Vd.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],u[0]));for(let t=0;t<c;t++)p[g*c+t]+=e[n*c+t]}if(s)for(let e=0;e<c;e++)p[g*c+e]/=m-f;if(f=m,++m,b=g+1,g=t,m>o)break}return b<l&&p.fill(i,b*c,l*c),[p,d]}function be(e,t,n,r){const a=Object(vn.ie)(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}function ge(e,t,n,r,a,s,i,o){return new dl(n,r,a,s,i,o).compute(e,t)}function ye(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function xe(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;ye(e[u],t,n,a);const c=a.length-r;o[u]=c,s+=c,i=Math.max(i,c)}const u=vn.si.getArrayFromDType("int32",2*s),c=new Array(s),l=[r,i];let d=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*d]=e,u[2*d+1]=t,c[d]=a[d],++d;return[u,c,l]}function ve(e,t){const n=vn.si.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=vn.si.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}function we(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Object(vn.ie)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}function Oe(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);Oe(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const a=e[t];let s=n,i=r;for(vn.si.swap(e,n,t),yl(e[r],a)>0&&vn.si.swap(e,n,r);s<i;){for(vn.si.swap(e,s,i),s++,i--;yl(e[s],a)<0;)s+=1;for(;yl(e[i],a)>0;)i-=1}0===yl(e[n],a)?vn.si.swap(e,n,i):(i+=1,vn.si.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function ke(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=vn.si.getTypedArrayFromDType(n,i*r),c=vn.si.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(Oe(i,r),i=i.slice(0,r)),a&&i.sort(yl);const l=t*r,d=u.subarray(l,l+r),h=c.subarray(l,l+r);for(let e=0;e<r;e++)d[e]=i[e].value,h[e]=i[e].index}const l=t.slice();return l[l.length-1]=r,[Object(vn.ie)(l,n,u),Object(vn.ie)(l,"int32",c)]}function Ie(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return vn.si.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{n+=t*(Math.trunc(-n/(t-1))+1)}else if(n>t-1)if(t<=1)n=0;else{n-=t*Math.trunc(n/(t-1))}return vn.si.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return vn.si.clamp(0,e,t-1)}(e,t);default:return e}}function Se(e,t,n,r,a,s,i,o,u,c,l){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+c]:l}function je(e,t,n,r,a,s,i,o,u,c,l){return Se(e,t,n,r,a,s,i,Math.round(o),Math.round(u),c,l)}function Ne(e,t,n,r,a,s,i,o,u,c,l){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1;return(p-o)*((f-u)*Se(e,t,n,r,a,s,i,d,h,c,l)+(u-h)*Se(e,t,n,r,a,s,i,d,f,c,l))+(o-d)*((f-u)*Se(e,t,n,r,a,s,i,p,h,c,l)+(u-h)*Se(e,t,n,r,a,s,i,p,f,c,l))}function Te(e,t,n,r){const a=vn.si.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new vn.td(s,r,e),c=[],l=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(l)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,c.push(t)}}const d=s.slice();d[1]=Object.keys(i).length;const h=new vn.td(d,r);c.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)h.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[a]=d[1],{outputValues:h.values,outputShape:p,indices:o}}function Ce(e,t){if(!(e in wl)){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;if(n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete wl[e]}),!1),1===e)return n.getContext("webgl",Ol)||n.getContext("experimental-webgl",Ol);return n.getContext("webgl2",Ol)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;wl[e]=n}const n=wl[e];return null==n||n.isContextLost()?(delete wl[e],Ce(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),wl[e])}function Ee(e,t){return[t,e]}function Ae(e){const t=vn.si.sizeFromShape(e),n=Math.ceil(t/4);return vn.si.sizeToSquarishShape(n)}function $e(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Re(e,t){const n=e;let r,a,s,i,o,u,c,l,d,h;return 2===Object(vn.Ye)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,l=1,d=n.HALF_FLOAT,h=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,c=4,l=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}function De(e,t){const n=t();return Object(vn.Ye)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function Fe(e){return!!(Object(vn.Ye)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function _e(e,t){return Ue(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function Me(e,t){const n=Ue(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(De(e,(()=>e.shaderSource(n,t))),De(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=jl.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>vn.si.rightPad((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),c=i.slice(r-1,r),l=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${vn.si.rightPad(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}function ze(e,t){if(De(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Le(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(De(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),De(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),De(e,(()=>e.enableVertexAttribArray(o))),!0)}function Pe(e,t,n,r){De(e,(()=>function(e,t,n){Ge(e,n),De(e,(()=>e.activeTexture(e.TEXTURE0+n))),De(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),De(e,(()=>e.uniform1i(n,r)))}function Be(e,t,n){De(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),De(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function Ve(e,t){De(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),De(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function We(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function Ue(e,t,n){const r=De(e,(()=>t()));if(null==r)throw new Error(n);return r}function Ge(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function qe(e,t=2){return vn.si.sizeFromShape(e.slice(0,e.length-t))}function He(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Ye(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[qe(e),...He(e)]),t}function Ke(e){return e%2==0}function Xe(e,t){if(e=e.slice(-2),t=t.slice(-2),vn.si.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Ke(n)&&Ke(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Ke(e[0])&&Ke(t[0])}function Ze(e,t){return null!=e.getExtension(t)}function Qe(e){try{if(null!=Ce(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Je(e){if(0===e)return!1;const t=Ce(e);if(1!==e){if(Ze(t,"EXT_color_buffer_float"))return et(t);const e="EXT_color_buffer_half_float";if(Ze(t,e)){const n=t.getExtension(e);return function(e,t){const n=Re(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}if(!Ze(t,"OES_texture_float"))return!1;if(!Ze(t,"WEBGL_color_buffer_float"))return!1;return et(t)}function et(e){const t=Re(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function tt(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&vn.si.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}function nt(){let e,t,n,r,a,s,i,o,u,c;return 2===Object(vn.Ye)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function rt(e,t,n="index"){const r=vn.si.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function at(e,t,n="index"){const r=vn.si.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function st(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function it(e){const t=vn.si.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function ot(e,t,n){const r=[];if(e.forEach((e=>{const t=vn.si.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ft(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?ct(e,r):ut(e,r);e.shapeInfo.logicalShape.length<=t.logicalShape.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=Al(e.shapeInfo.logicalShape,t.logicalShape),u=pt(i),c=i-s;let l;const d=["x","y","z","w","u","v"];l=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${d[e+c]} = 0;`)).join("\n");let h="";h=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+c]}`)).join(", ");let p="return outputValue;";const f=1===vn.si.sizeFromShape(e.shapeInfo.logicalShape),m=1===vn.si.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${l}\n      vec4 outputValue = get${r}(${h});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&vn.si.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=pt(u),l=Al(e.shapeInfo.logicalShape,t.logicalShape),d=u-o;let h;const p=["x","y","z","w","u","v"];h=0===o?"":u<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+d]} = 0;`)).join("\n");let f="";f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+d]}`)).join(", ");return`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      return get${r}(${f});\n    }\n  `}(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=nt(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let c,l,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${$l}\n    ${Rl}\n    ${Dl}\n  `}(o);t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return lt();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(vn.si.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),l=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(c=function(e,t,n){switch(e.length){case 0:return lt();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(vn.si.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${at(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=rt(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${at(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=rt(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=rt(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=rt(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),l=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(d+=Fl);return[d,u,l,a,c,s,n.userCode].join("\n")}function ut(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=dt(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${ht(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=dt(n);if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&vn.si.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${s[0]}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=vn.si.squeezeShape(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${ut(mt(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${bt(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ht(e)}\n      }\n    `;const c=s[0],l=s[1],d=dt(r);if(1===l)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===c)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=vn.si.squeezeShape(n),c=o;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${ut(mt(e,c),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${bt(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${ht(e)}\n      }\n    `;const l=e.shapeInfo.texShape,d=l[0],h=l[1],p=e.shapeInfo.flatOffset;if(h===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(h===i&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=dt(r);if(t)return`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:c}=vn.si.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${ut(mt(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${bt(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${ht(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,b=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==l)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===s&&null==l)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const g=dt(r);if(t)return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${b}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${g});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${g});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:c}=vn.si.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${ut(mt(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${bt(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${ht(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=dt(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${h}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=vn.si.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${ut(mt(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${bt(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,c=t[2]*u,l=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${ht(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===l&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=dt(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${c} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function ct(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=nt();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=nt();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=nt();if(null!=s&&vn.si.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${ct(mt(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${bt(s,r)});\n        }\n      `}const o=nt();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],c=i[1],l=Math.ceil(n[2]/2),d=l*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${c}, ${d}, ${l}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=nt();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=u[0],l=u[1],d=Math.ceil(s[i-1]/2);let h=d*Math.ceil(s[i-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,h*=s[i-e-1],f=`b${e} * ${h} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}function lt(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function dt(e){return`offset${e}`}function ht(e){const t=e.name,n=vn.si.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function pt(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ft(e,t,n){const{newShape:r,keptDims:a}=vn.si.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,u=!e&&s>1&&!vn.si.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function mt(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function bt(e,t){return t.map((t=>e[t])).join(", ")}function gt(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!vn.si.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!vn.si.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function yt(e){return Object(vn.Ye)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}function xt(e){const t=nt();return function(e,t){const n=Ue(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(De(e,(()=>e.shaderSource(n,t))),De(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function vt(e){return function(e,t){const n=Ue(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return De(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),De(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function wt(e){return function(e,t){const n=Ue(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return De(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),De(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function Ot(e,t,n,r,a,s){!function(e,t){const n=Object(vn.Ye)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return Ue(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return De(e,(()=>e.bindTexture(o,i))),De(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),De(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),De(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),De(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Object(vn.Ye)().getNumber("WEBGL_VERSION")?De(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):De(e,(()=>e.texStorage2D(o,1,r,t,n))),De(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function kt(e){return e.internalFormatFloat}function It(e){return e.internalFormatHalfFloat}function St(e){return e.downloadTextureFormat}function jt(e){return e.internalFormatPackedFloat}function Nt(e){return e.internalFormatPackedHalfFloat}function Tt(e,t,n,r,a,s,i){const o=e,u=new Float32Array(function(e,t){const[n,r]=$e(e,t);return n*r*4}(s,i));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,u),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),u}function Ct(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Et(e,t){return 1===t?[e]:Ct(e,t)}function At(e,t,n,r,a){const s=function(e,t){switch(e){case Sl.PACKED_2X2_FLOAT32:return jt(t);case Sl.PACKED_2X2_FLOAT16:return Nt(t);case Sl.UNPACKED_FLOAT32:return kt(t);case Sl.UNPACKED_FLOAT16:return It(t);case Sl.PACKED_4X1_UNSIGNED_BYTE:return St(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=$e(e[0],e[1]);i=t*n}else{const[t,n]=Ee(e[0],e[1]);i=t*n}const o=function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function $t(e,t){if(e===Il.UPLOAD)return Sl.PACKED_2X2_FLOAT32;if(e===Il.RENDER||null==e)return function(e){return Object(vn.Ye)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Sl.PACKED_2X2_FLOAT32:Sl.UNPACKED_FLOAT32:e?Sl.PACKED_2X2_FLOAT16:Sl.UNPACKED_FLOAT16}(t);if(e===Il.DOWNLOAD||e===Il.PIXELS)return Sl.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Rt(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}function Dt(){return Dt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Dt.apply(this,arguments)}function Ft(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function _t(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Ft({inputs:{x:r},backend:n}),u=Ft({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}function Mt({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let c;return c=Object(vn.Ye)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Md(i.shape,t):new Dd(i.shape,e),o.runWebGLProgram(c,[i],u)}}function zt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:c}=i,l=o;if(r&&"complex64"===u.dtype){const t=l.texData.get(u.dataId),n=l.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new Wd(e,u.shape,c.shape);return l.runWebGLProgram(i,[a,s],Object(vn.ri)(n.dtype,r.dtype))})),s=_t({inputs:{real:r,imag:a},backend:l});return l.disposeIntermediateTensorInfo(r),l.disposeIntermediateTensorInfo(a),s}const d=s||Object(vn.ri)(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||l.shouldExecuteOnCPU([u,c]))&&null!=a){const e=l.texData.get(u.dataId).values,t=l.texData.get(c.dataId).values,n="string"===u.dtype?vn.Vd.fromUint8ToStringArray(e):e,r="string"===u.dtype?vn.Vd.fromUint8ToStringArray(t):t,[s,i]=a(u.shape,c.shape,n,r,d),o=l.makeTensorInfo(i,d);return l.texData.get(o.dataId).values=s,o}let h;return h=Object(vn.Ye)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Ud(t,u.shape,c.shape,n):new Wd(e,u.shape,c.shape),l.runWebGLProgram(h,[u,c],d)}}function Lt(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Zd:Xd;if("leakyrelu"===e)return t?Yd:Hd;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}function Pt(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=vn.Vd.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new nh(eh,r.shape,a.shape),i=new nh(th,r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=_t({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=cd(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Object(vn.Ye)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ud(rh,r.shape,a.shape):new Wd(rh,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}function Bt(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=vn.si.sizeFromShape(a.shape),u=vn.si.inferFromImplicitShape(s,o),c=vn.si.sizeFromShape(u);vn.si.assert(o===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const l=i.texData.get(a.dataId);return!l.isPacked||Xe(a.shape,u)||null!==l.texture&&Xe(l.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[qe(e.shape),...He(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[qe(t),...He(t)],i=new $d(s,r),o=n.runWebGLProgram(i,[a],e.dtype,[r],!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,i)}function Vt(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=vn.Vd.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:c}=a[i];let l,d;l="mean"===n?0===i?new ih({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},o):new ih({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c}):new oh({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},n),d=s,s=r.runWebGLProgram(l,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}function Wt(e,t,n){const r=Object(vn.Ye)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ch(e.shape,t):new uh(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Ut(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=e.shape.length,s=vn.si.parseAxisParam(t,e.shape);let i=s;const o=vn.Vd.getAxesPermutation(i,a),u=null!=o;let c=e;u&&(c=Wt(e,o,r),i=vn.Vd.getInnerMostAxes(i.length,a)),vn.Vd.assertAxesAreInnerMostDims("sum",i,a);const[l,d]=vn.Vd.computeOutAndReduceShapes(c.shape,i);let h=l;n&&(h=vn.Vd.expandShapeToKeepDim(l,s));const p=vn.si.sizeFromShape(d),f=Bt({inputs:{x:c},attrs:{shape:[vn.si.sizeFromShape(e.shape)/p,p]},backend:r}),m=Vt(f,Object(vn.Th)(e.dtype),"sum",r),b=Bt({inputs:{x:m},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),u&&r.disposeIntermediateTensorInfo(c),b}(a,s,i,n)}function Gt(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let u;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId),t=Cd(e.values,a.shape,a.dtype,s,o);u=i.makeTensorInfo(o,a.dtype);i.texData.get(u.dataId).values=t}else u=Wt(a,s,i);return u}function qt({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const c=e.shape.length,l=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],h=r?t.shape[l-1]:t.shape[l-2],p=n?e.shape[c-1]:e.shape[c-2],f=r?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),b=t.shape.slice(0,-2),g=vn.si.sizeFromShape(m),y=vn.si.sizeFromShape(b),x=vn.ge.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);vn.si.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[g,d,p]:[g,p,d],w=r?[y,f,h]:[y,h,f],O=Bt({inputs:{x:e},backend:a,attrs:{shape:v}}),k=Bt({inputs:{x:t},backend:a,attrs:{shape:w}}),I=[O,k],S=Math.max(g,y),j=n?O.shape[1]:O.shape[2],N=null!=s,T=null!=i,C="leakyrelu"===u,E=null!=u?Lt(u,!0):null;let A;if((1===p||1===f)&&j>1e3&&!1===(N||T||C||null!=E)){let e=O,t=k;n&&(e=Gt({inputs:{x:O},backend:a,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=Gt({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),I.push(t));const s=1===f;let i=e;1!==f&&(i=Bt({inputs:{x:e},backend:a,attrs:{shape:[S,j,1]}}),I.push(i));const o=1===f?2:1;let u=t;s&&(u=Bt({inputs:{x:t},backend:a,attrs:{shape:[S,1,j]}}),I.push(u));const c=Pt({inputs:{a:i,b:u},backend:a});A=Ut({inputs:{x:c},backend:a,attrs:{axis:o,keepDims:!0}}),I.push(c)}else{const u=Object(vn.ri)(e.dtype,t.dtype),c=new Jd(v,w,[S,p,f],n,r,N,E,T,C),l=[O,k];if(null!=s&&l.push(s),T&&l.push(i),C){const e=a.makeTensorInfo([],"float32",vn.si.createScalarValue(o,"float32"));l.push(e),I.push(e)}A=a.runWebGLProgram(c,l,u)}const $=Bt({inputs:{x:A},backend:a,attrs:{shape:x}});I.push(A);for(const e of I)a.disposeIntermediateTensorInfo(e);return $}function Ht(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=vn.Vd.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new Nh(o,n,null==r),c=[t];null!=r&&c.push(r);const l=e.runWebGLProgram(u,c,"int32");if(1===l.shape[1])return l;const d=Ht(e,t,n,l);return e.disposeIntermediateTensorInfo(l),d}function Yt(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=vn.Vd.computeOptimalWindowSize(a[a.length-1]),i=new Th(a,s,n,null==r),o=e.runWebGLProgram(i,null==r?[t]:[t,r],"int32");if(o.shape.length===t.shape.length){const r=Yt(e,t,n,o);return e.disposeIntermediateTensorInfo(o),r}return o}function Kt(e,t,n,r){const a=[n];if(vn.Vd.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Object(vn.Ye)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=vn.Vd.computeOutAndReduceShapes(i.shape,a),c=vn.si.sizeFromShape(u),l=Bt({inputs:{x:i},backend:e,attrs:{shape:[-1,c]}});n.push(l);const d=Ht(e,l,r);n.push(d);const h=Bt({inputs:{x:d},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return Yt(e,t,r)}function Xt(){return Xt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Xt.apply(this,arguments)}function Zt(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=vn.Bh.parseSliceParams(a,s,i);if(vn.Bh.assertParamsValid(a,o,u),0===vn.si.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=gd(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),l=vn.Bh.isSliceContinous(a.shape,o,u);if(c||!l){const e=Object(vn.Ye)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tp(u):new Jh(u);return n.runWebGLProgram(e,[a],a.dtype,[o])}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Xt(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=vn.Bh.computeFlatOffset(t,vn.si.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}function Qt(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ft({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}function Jt(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function en(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function tn(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ft({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}function nn(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Qt({inputs:{input:e},backend:n}))),a=e.map((e=>tn({inputs:{input:e},backend:n}))),s=nn(r,t,n),i=nn(a,t,n),o=_t({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=vn.si.sizeFromShape(e.shape.slice(t));return Bt({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=vn.Vd.computeOutShape(a.map((e=>e.shape)),1),o=Hl(s,i,r,1===a[0].shape[0]),u=vn.Vd.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,o);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Object(vn.Ye)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=nn(e.slice(0,r),t,n),s=nn(e.slice(r),t,n),i=nn([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Object(vn.Ye)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new xp(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=vn.Vd.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Bt({inputs:{x:e},attrs:{shape:[-1,vn.si.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new yp(s.map((e=>e.shape))),u=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=Bt({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),c}function rn(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=vn.si.parseAxisParam(a,t[0].shape)[0],i=vn.Vd.computeOutShape(t.map((e=>e.shape)),s);if(0===vn.si.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>vn.si.sizeFromShape(e.shape)>0));if(1===o.length)return Ft({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));return vn.Vd.assertParamsConsistent(u,s),nn(o,s,n)}function an({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,c=r.texData.get(e.dataId),l="channelsLast"===n.dataFormat;let d;const h=[];if(!((1===u[0]*u[1]*u[2]||1===n.outChannels)&&n.inChannels>1e3)&&c.isPacked&&l&&null!=c.texture&&u[2]%2!=0&&vn.si.arraysEqual(c.shape.slice(-3),u.slice(-3))){const l={dataId:e.dataId,shape:[1,u[0]*u[1]*(u[2]+1),n.inChannels],dtype:e.dtype},p=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,vn.si.assert(Xe(c.shape,l.shape),(()=>`packed reshape ${c.shape} to ${l.shape} isn't free`));const f=Bt({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});h.push(f);const m=qt({a:l,b:f,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),b=r.texData.get(m.dataId);vn.si.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=p,b.shape=n.outShape,d=Ft({inputs:{x:m},backend:r}),d.shape=n.outShape,h.push(m)}else{const c=Bt({inputs:{x:e},backend:r,attrs:{shape:[1,l?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),p=Bt({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),f=qt({a:c,b:p,transposeA:false,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});d=Bt({inputs:{x:f},backend:r,attrs:{shape:n.outShape}}),h.push(c),h.push(p),h.push(f)}for(const e of h)r.disposeIntermediateTensorInfo(e);return d}function sn({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:h,dataFormat:p}=n,f="channelsLast"===p,m=u*c*l,b=h*d,g=[m,b],y=[],x=Bt({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=Bt({inputs:{x:t},backend:r,attrs:{shape:[1,m,vn.si.sizeFromShape(t.shape)/m]}});y.push(x),y.push(v);const w=new Ip(g,n),O=r.runWebGLProgram(w,[x],"float32",[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]]),k=Bt({inputs:{x:O},backend:r,attrs:{shape:[1,g[0],g[1]]}});y.push(O),y.push(k);const I=null!=a,S=null!=s,j="leakyrelu"===o,N=o?Lt(o,!0):null,T=new Jd(k.shape,v.shape,[1,b,n.outChannels],!0,!1,I,N,S,j),C=[k,v];if(a&&C.push(a),S&&C.push(s),j){const e=r.makeTensorInfo([],"float32",vn.si.createScalarValue(i,"float32"));C.push(e),y.push(e)}const E=r.runWebGLProgram(T,C,"float32"),A=Bt({inputs:{x:E},backend:r,attrs:{shape:f?[1,h,d,n.outChannels]:[1,n.outChannels,h,d]}});y.push(E);for(const e of y)r.disposeIntermediateTensorInfo(e);return A}function on(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function un(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function cn(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(vn.si.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),Bt({inputs:{x:s},backend:r,attrs:{shape:o}})}function ln(e,t,n){const r=n.texData.get(e.dataId),a=vn.si.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=Bt({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new yf("real",o,t),c=new yf("imag",o,t),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(u,l,"float32"),h=n.runWebGLProgram(c,l,"float32"),p=_t({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);const f=Bt({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}function dn(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||vn.si.inferDtype(a),"string"===s){const e=vn.si.getArrayFromDType(s,vn.si.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new vf(r,a);return t.runWebGLProgram(e,[],s,[[a]])}}function hn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=vn.si.parseAxisParam(i,a.shape)[0];if(Object(vn.Ye)().get("DEBUG")){const e=n.readSync(s.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];vn.si.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const c=vn.Vd.segment_util.collectGatherOpShapeInfo(a,s,u,o),l=vn.si.sizeFromShape(s.shape),d=[],h=Bt({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=Bt({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(h),d.push(p);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),r=Jl(t,e,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const m=new Mf(h.shape,f),b=n.runWebGLProgram(m,[h,p],h.dtype);d.push(b);const g=Bt({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}function pn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=vn.si.parseAxisParam(s,a.shape);let c=u;const l=vn.Vd.getAxesPermutation(c,o),d=null!=l,h=n.shouldExecuteOnCPU([a]);let p=a;if(d){if(h){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[l[e]];const r=Cd(e,a.shape,a.dtype,l,t);p=n.makeTensorInfo(t,a.dtype);n.texData.get(p.dataId).values=r}else p=Wt(a,l,n);c=vn.Vd.getInnerMostAxes(c.length,o)}vn.Vd.assertAxesAreInnerMostDims("max",c,o);const[f,m]=vn.Vd.computeOutAndReduceShapes(p.shape,c);let b,g=f;if(i&&(g=vn.Vd.expandShapeToKeepDim(f,u)),h){const e=n.texData.get(p.dataId),t=id(e.values,vn.si.sizeFromShape(m),g,a.dtype);b=n.makeTensorInfo(g,a.dtype);n.texData.get(b.dataId).values=t}else b=function(e,t,n,r){const a=vn.si.sizeFromShape(t),s=Bt({inputs:{x:e},attrs:{shape:[vn.si.sizeFromShape(e.shape)/a,a]},backend:r}),i=Vt(s,e.dtype,"max",r),o=Bt({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(p,m,g,n);return d&&n.disposeIntermediateTensorInfo(p),b}function fn(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=vn.si.parseAxisParam([s],a.shape),o=pn({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=vn.Vd.expandShapeToKeepDim(o.shape,i),c=Bt({inputs:{x:o},backend:n,attrs:{shape:u}}),l=Lm({inputs:{a:a,b:c},backend:n}),d=hf({inputs:{x:l},backend:n}),h=Ut({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),p=Bt({inputs:{x:h},backend:n,attrs:{shape:u}}),f=_m({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}function mn(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Qt({inputs:{input:r},backend:n}),t=mn({inputs:{x:e},backend:n}),a=tn({inputs:{input:r},backend:n}),s=mn({inputs:{x:a},backend:n}),i=_t({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return dn({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}function bn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>vn.si.decodeString(e))):e,r=Object(vn.ie)(a.shape,a.dtype,t),i=Nd(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new Og(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}function gn(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function yn(e){let t=1;for(;t<e;)t*=2;return t}n.r(t),n.d(t,"AdadeltaOptimizer",(function(){return vn.d})),n.d(t,"AdagradOptimizer",(function(){return vn.e})),n.d(t,"AdamOptimizer",(function(){return vn.f})),n.d(t,"AdamaxOptimizer",(function(){return vn.g})),n.d(t,"MomentumOptimizer",(function(){return vn.dc})),n.d(t,"Optimizer",(function(){return vn.oc})),n.d(t,"OptimizerConstructors",(function(){return vn.pc})),n.d(t,"RMSPropOptimizer",(function(){return vn.wc})),n.d(t,"SGDOptimizer",(function(){return vn.Oc})),n.d(t,"Tensor",(function(){return vn.sd})),n.d(t,"TensorBuffer",(function(){return vn.td})),n.d(t,"Variable",(function(){return vn.Bd})),n.d(t,"Rank",(function(){return vn.yc})),n.d(t,"sumOutType",(function(){return vn.Th})),n.d(t,"upcastType",(function(){return vn.ri})),n.d(t,"abs",(function(){return vn.Ed})),n.d(t,"acos",(function(){return vn.Fd})),n.d(t,"acosh",(function(){return vn.Gd})),n.d(t,"add",(function(){return vn.Hd})),n.d(t,"addN",(function(){return vn.Id})),n.d(t,"all",(function(){return vn.Jd})),n.d(t,"any",(function(){return vn.Kd})),n.d(t,"argMax",(function(){return vn.Ld})),n.d(t,"argMin",(function(){return vn.Md})),n.d(t,"asin",(function(){return vn.Nd})),n.d(t,"asinh",(function(){return vn.Od})),n.d(t,"atan",(function(){return vn.Pd})),n.d(t,"atan2",(function(){return vn.Qd})),n.d(t,"atanh",(function(){return vn.Rd})),n.d(t,"avgPool",(function(){return vn.Sd})),n.d(t,"avgPool3d",(function(){return vn.Td})),n.d(t,"basicLSTMCell",(function(){return vn.Wd})),n.d(t,"batchToSpaceND",(function(){return vn.be})),n.d(t,"batchNorm",(function(){return vn.Xd})),n.d(t,"batchNorm2d",(function(){return vn.Yd})),n.d(t,"batchNorm3d",(function(){return vn.Zd})),n.d(t,"batchNorm4d",(function(){return vn.ae})),n.d(t,"bincount",(function(){return vn.ce})),n.d(t,"broadcastArgs",(function(){return vn.ee})),n.d(t,"broadcastTo",(function(){return vn.fe})),n.d(t,"buffer",(function(){return vn.ie})),n.d(t,"cast",(function(){return vn.je})),n.d(t,"ceil",(function(){return vn.ke})),n.d(t,"clipByValue",(function(){return vn.le})),n.d(t,"clone",(function(){return vn.me})),n.d(t,"complex",(function(){return vn.ne})),n.d(t,"concat",(function(){return vn.oe})),n.d(t,"concat1d",(function(){return vn.pe})),n.d(t,"concat2d",(function(){return vn.qe})),n.d(t,"concat3d",(function(){return vn.re})),n.d(t,"concat4d",(function(){return vn.se})),n.d(t,"conv1d",(function(){return vn.te})),n.d(t,"conv2d",(function(){return vn.ue})),n.d(t,"conv2dTranspose",(function(){return vn.ve})),n.d(t,"conv3d",(function(){return vn.we})),n.d(t,"conv3dTranspose",(function(){return vn.xe})),n.d(t,"cos",(function(){return vn.ze})),n.d(t,"cosh",(function(){return vn.Ae})),n.d(t,"cumsum",(function(){return vn.Ce})),n.d(t,"denseBincount",(function(){return vn.Ee})),n.d(t,"depthToSpace",(function(){return vn.Ge})),n.d(t,"depthwiseConv2d",(function(){return vn.He})),n.d(t,"diag",(function(){return vn.Je})),n.d(t,"dilation2d",(function(){return vn.Ke})),n.d(t,"div",(function(){return vn.Oe})),n.d(t,"divNoNan",(function(){return vn.Pe})),n.d(t,"dot",(function(){return vn.Qe})),n.d(t,"einsum",(function(){return vn.Se})),n.d(t,"elu",(function(){return vn.Te})),n.d(t,"equal",(function(){return vn.Ze})),n.d(t,"erf",(function(){return vn.af})),n.d(t,"exp",(function(){return vn.bf})),n.d(t,"expandDims",(function(){return vn.cf})),n.d(t,"expm1",(function(){return vn.df})),n.d(t,"eye",(function(){return vn.ef})),n.d(t,"fill",(function(){return vn.gf})),n.d(t,"floor",(function(){return vn.jf})),n.d(t,"floorDiv",(function(){return vn.kf})),n.d(t,"gather",(function(){return vn.mf})),n.d(t,"greater",(function(){return vn.vf})),n.d(t,"greaterEqual",(function(){return vn.wf})),n.d(t,"imag",(function(){return vn.yf})),n.d(t,"isFinite",(function(){return vn.Df})),n.d(t,"isInf",(function(){return vn.Ef})),n.d(t,"isNaN",(function(){return vn.Ff})),n.d(t,"leakyRelu",(function(){return vn.If})),n.d(t,"less",(function(){return vn.Jf})),n.d(t,"lessEqual",(function(){return vn.Kf})),n.d(t,"linspace",(function(){return vn.Mf})),n.d(t,"localResponseNormalization",(function(){return vn.Nf})),n.d(t,"log",(function(){return vn.Of})),n.d(t,"log1p",(function(){return vn.Pf})),n.d(t,"logSigmoid",(function(){return vn.Qf})),n.d(t,"logSoftmax",(function(){return vn.Rf})),n.d(t,"logSumExp",(function(){return vn.Sf})),n.d(t,"logicalAnd",(function(){return vn.Tf})),n.d(t,"logicalNot",(function(){return vn.Uf})),n.d(t,"logicalOr",(function(){return vn.Vf})),n.d(t,"logicalXor",(function(){return vn.Wf})),n.d(t,"matMul",(function(){return vn.Yf})),n.d(t,"max",(function(){return vn.ag})),n.d(t,"maxPool",(function(){return vn.bg})),n.d(t,"maxPool3d",(function(){return vn.cg})),n.d(t,"maxPoolWithArgmax",(function(){return vn.dg})),n.d(t,"maximum",(function(){return vn.eg})),n.d(t,"mean",(function(){return vn.fg})),n.d(t,"meshgrid",(function(){return vn.hg})),n.d(t,"min",(function(){return vn.ig})),n.d(t,"minimum",(function(){return vn.jg})),n.d(t,"mirrorPad",(function(){return vn.kg})),n.d(t,"mod",(function(){return vn.lg})),n.d(t,"moments",(function(){return vn.mg})),n.d(t,"mul",(function(){return vn.og})),n.d(t,"multiRNNCell",(function(){return vn.pg})),n.d(t,"multinomial",(function(){return vn.qg})),n.d(t,"neg",(function(){return vn.rg})),n.d(t,"notEqual",(function(){return vn.ug})),n.d(t,"oneHot",(function(){return vn.vg})),n.d(t,"ones",(function(){return vn.wg})),n.d(t,"onesLike",(function(){return vn.xg})),n.d(t,"outerProduct",(function(){return vn.zg})),n.d(t,"pad",(function(){return vn.Ag})),n.d(t,"pad1d",(function(){return vn.Bg})),n.d(t,"pad2d",(function(){return vn.Cg})),n.d(t,"pad3d",(function(){return vn.Dg})),n.d(t,"pad4d",(function(){return vn.Eg})),n.d(t,"pool",(function(){return vn.Fg})),n.d(t,"pow",(function(){return vn.Gg})),n.d(t,"prelu",(function(){return vn.Hg})),n.d(t,"print",(function(){return vn.Ig})),n.d(t,"prod",(function(){return vn.Jg})),n.d(t,"rand",(function(){return vn.Lg})),n.d(t,"randomGamma",(function(){return vn.Mg})),n.d(t,"randomNormal",(function(){return vn.Ng})),n.d(t,"randomUniform",(function(){return vn.Og})),n.d(t,"range",(function(){return vn.Pg})),n.d(t,"real",(function(){return vn.Rg})),n.d(t,"reciprocal",(function(){return vn.Sg})),n.d(t,"relu",(function(){return vn.Wg})),n.d(t,"relu6",(function(){return vn.Xg})),n.d(t,"reshape",(function(){return vn.Zg})),n.d(t,"reverse",(function(){return vn.ah})),n.d(t,"reverse1d",(function(){return vn.bh})),n.d(t,"reverse2d",(function(){return vn.ch})),n.d(t,"reverse3d",(function(){return vn.dh})),n.d(t,"reverse4d",(function(){return vn.eh})),n.d(t,"round",(function(){return vn.gh})),n.d(t,"rsqrt",(function(){return vn.hh})),n.d(t,"scalar",(function(){return vn.ih})),n.d(t,"selu",(function(){return vn.lh})),n.d(t,"separableConv2d",(function(){return vn.mh})),n.d(t,"setdiff1dAsync",(function(){return vn.qh})),n.d(t,"sigmoid",(function(){return vn.rh})),n.d(t,"sign",(function(){return vn.sh})),n.d(t,"sin",(function(){return vn.uh})),n.d(t,"sinh",(function(){return vn.vh})),n.d(t,"slice",(function(){return vn.wh})),n.d(t,"slice1d",(function(){return vn.xh})),n.d(t,"slice2d",(function(){return vn.yh})),n.d(t,"slice3d",(function(){return vn.zh})),n.d(t,"slice4d",(function(){return vn.Ah})),n.d(t,"softmax",(function(){return vn.Ch})),n.d(t,"softplus",(function(){return vn.Dh})),n.d(t,"spaceToBatchND",(function(){return vn.Eh})),n.d(t,"fft",(function(){return vn.ff})),n.d(t,"ifft",(function(){return vn.xf})),n.d(t,"irfft",(function(){return vn.Cf})),n.d(t,"rfft",(function(){return vn.fh})),n.d(t,"split",(function(){return vn.Ih})),n.d(t,"sqrt",(function(){return vn.Jh})),n.d(t,"square",(function(){return vn.Kh})),n.d(t,"squaredDifference",(function(){return vn.Lh})),n.d(t,"squeeze",(function(){return vn.Mh})),n.d(t,"stack",(function(){return vn.Nh})),n.d(t,"step",(function(){return vn.Oh})),n.d(t,"stridedSlice",(function(){return vn.Ph})),n.d(t,"sub",(function(){return vn.Rh})),n.d(t,"sum",(function(){return vn.Sh})),n.d(t,"tan",(function(){return vn.Uh})),n.d(t,"tanh",(function(){return vn.Vh})),n.d(t,"tensor",(function(){return vn.Wh})),n.d(t,"tensor1d",(function(){return vn.Xh})),n.d(t,"tensor2d",(function(){return vn.Yh})),n.d(t,"tensor3d",(function(){return vn.Zh})),n.d(t,"tensor4d",(function(){return vn.ai})),n.d(t,"tensor5d",(function(){return vn.bi})),n.d(t,"tensor6d",(function(){return vn.ci})),n.d(t,"tile",(function(){return vn.gi})),n.d(t,"topk",(function(){return vn.ii})),n.d(t,"truncatedNormal",(function(){return vn.li})),n.d(t,"unique",(function(){return vn.mi})),n.d(t,"unsortedSegmentSum",(function(){return vn.pi})),n.d(t,"unstack",(function(){return vn.qi})),n.d(t,"variable",(function(){return vn.vi})),n.d(t,"where",(function(){return vn.yi})),n.d(t,"whereAsync",(function(){return vn.zi})),n.d(t,"zeros",(function(){return vn.Ai})),n.d(t,"zerosLike",(function(){return vn.Bi})),n.d(t,"booleanMaskAsync",(function(){return vn.de})),n.d(t,"transpose",(function(){return vn.ki})),n.d(t,"norm",(function(){return vn.tg})),n.d(t,"movingAverage",(function(){return vn.ng})),n.d(t,"scatterND",(function(){return vn.jh})),n.d(t,"sparseToDense",(function(){return vn.Gh})),n.d(t,"gatherND",(function(){return vn.nf})),n.d(t,"dropout",(function(){return vn.Re})),n.d(t,"enclosingPowerOfTwo",(function(){return vn.We})),n.d(t,"cosineWindow",(function(){return vn.Be})),n.d(t,"inTopKAsync",(function(){return vn.Af})),n.d(t,"op",(function(){return vn.yg})),n.d(t,"OP_SCOPE_SUFFIX",(function(){return vn.lc})),n.d(t,"image",(function(){return vn.zf})),n.d(t,"linalg",(function(){return vn.Lf})),n.d(t,"losses",(function(){return vn.Xf})),n.d(t,"spectral",(function(){return vn.Hh})),n.d(t,"fused",(function(){return vn.lf})),n.d(t,"signal",(function(){return vn.th})),n.d(t,"sparse",(function(){return vn.Fh})),n.d(t,"string",(function(){return vn.Qh})),n.d(t,"Reduction",(function(){return vn.Cc})),n.d(t,"train",(function(){return vn.ji})),n.d(t,"enableProdMode",(function(){return vn.Ve})),n.d(t,"enableDebugMode",(function(){return vn.Ue})),n.d(t,"disableDeprecationWarnings",(function(){return vn.Le})),n.d(t,"deprecationWarn",(function(){return vn.Fe})),n.d(t,"disposeVariables",(function(){return vn.Ne})),n.d(t,"engine",(function(){return vn.Xe})),n.d(t,"memory",(function(){return vn.gg})),n.d(t,"profile",(function(){return vn.Kg})),n.d(t,"tidy",(function(){return vn.fi})),n.d(t,"dispose",(function(){return vn.Me})),n.d(t,"keep",(function(){return vn.Gf})),n.d(t,"time",(function(){return vn.hi})),n.d(t,"setBackend",(function(){return vn.oh})),n.d(t,"ready",(function(){return vn.Qg})),n.d(t,"getBackend",(function(){return vn.pf})),n.d(t,"removeBackend",(function(){return vn.Yg})),n.d(t,"findBackend",(function(){return vn.hf})),n.d(t,"findBackendFactory",(function(){return vn.if})),n.d(t,"registerBackend",(function(){return vn.Tg})),n.d(t,"backend",(function(){return vn.Ud})),n.d(t,"setPlatform",(function(){return vn.ph})),n.d(t,"getKernel",(function(){return vn.rf})),n.d(t,"getGradient",(function(){return vn.qf})),n.d(t,"getKernelsForBackend",(function(){return vn.sf})),n.d(t,"registerKernel",(function(){return vn.Vg})),n.d(t,"registerGradient",(function(){return vn.Ug})),n.d(t,"unregisterKernel",(function(){return vn.oi})),n.d(t,"unregisterGradient",(function(){return vn.ni})),n.d(t,"copyRegisteredKernels",(function(){return vn.ye})),n.d(t,"customGrad",(function(){return vn.De})),n.d(t,"grad",(function(){return vn.tf})),n.d(t,"grads",(function(){return vn.uf})),n.d(t,"valueAndGrad",(function(){return vn.ti})),n.d(t,"valueAndGrads",(function(){return vn.ui})),n.d(t,"variableGrads",(function(){return vn.wi})),n.d(t,"Environment",(function(){return vn.fb})),n.d(t,"env",(function(){return vn.Ye})),n.d(t,"ENV",(function(){return vn.bb})),n.d(t,"version_core",(function(){return vn.xi})),n.d(t,"nextFrame",(function(){return vn.sg})),n.d(t,"browser",(function(){return vn.he})),n.d(t,"io",(function(){return vn.Bf})),n.d(t,"math",(function(){return vn.Zf})),n.d(t,"serialization",(function(){return vn.nh})),n.d(t,"test_util",(function(){return vn.ei})),n.d(t,"util",(function(){return vn.si})),n.d(t,"backend_util",(function(){return vn.Vd})),n.d(t,"broadcast_util",(function(){return vn.ge})),n.d(t,"tensor_util",(function(){return vn.di})),n.d(t,"slice_util",(function(){return vn.Bh})),n.d(t,"gather_util",(function(){return vn.of})),n.d(t,"scatter_util",(function(){return vn.kh})),n.d(t,"device_util",(function(){return vn.Ie})),n.d(t,"kernel_impls",(function(){return vn.Hf})),n.d(t,"KernelBackend",(function(){return vn.Eb})),n.d(t,"DataStorage",(function(){return vn.R})),n.d(t,"Abs",(function(){return vn.a})),n.d(t,"Acos",(function(){return vn.b})),n.d(t,"Acosh",(function(){return vn.c})),n.d(t,"Add",(function(){return vn.h})),n.d(t,"AddN",(function(){return vn.i})),n.d(t,"All",(function(){return vn.j})),n.d(t,"Any",(function(){return vn.k})),n.d(t,"ArgMax",(function(){return vn.l})),n.d(t,"ArgMin",(function(){return vn.m})),n.d(t,"Asin",(function(){return vn.n})),n.d(t,"Asinh",(function(){return vn.o})),n.d(t,"Atan",(function(){return vn.p})),n.d(t,"Atanh",(function(){return vn.r})),n.d(t,"Atan2",(function(){return vn.q})),n.d(t,"AvgPool",(function(){return vn.s})),n.d(t,"AvgPoolGrad",(function(){return vn.v})),n.d(t,"AvgPool3D",(function(){return vn.t})),n.d(t,"AvgPool3DGrad",(function(){return vn.u})),n.d(t,"BatchMatMul",(function(){return vn.w})),n.d(t,"BatchToSpaceND",(function(){return vn.x})),n.d(t,"Bincount",(function(){return vn.y})),n.d(t,"BroadcastTo",(function(){return vn.A})),n.d(t,"BroadcastArgs",(function(){return vn.z})),n.d(t,"Cast",(function(){return vn.B})),n.d(t,"Ceil",(function(){return vn.C})),n.d(t,"ClipByValue",(function(){return vn.D})),n.d(t,"Complex",(function(){return vn.E})),n.d(t,"ComplexAbs",(function(){return vn.F})),n.d(t,"Concat",(function(){return vn.G})),n.d(t,"Conv2D",(function(){return vn.H})),n.d(t,"Conv2DBackpropFilter",(function(){return vn.I})),n.d(t,"Conv2DBackpropInput",(function(){return vn.J})),n.d(t,"Conv3D",(function(){return vn.K})),n.d(t,"Conv3DBackpropFilterV2",(function(){return vn.L})),n.d(t,"Conv3DBackpropInputV2",(function(){return vn.M})),n.d(t,"Cos",(function(){return vn.N})),n.d(t,"Cosh",(function(){return vn.O})),n.d(t,"Cumsum",(function(){return vn.Q})),n.d(t,"CropAndResize",(function(){return vn.P})),n.d(t,"DenseBincount",(function(){return vn.S})),n.d(t,"DepthToSpace",(function(){return vn.T})),n.d(t,"DepthwiseConv2dNative",(function(){return vn.U})),n.d(t,"DepthwiseConv2dNativeBackpropFilter",(function(){return vn.V})),n.d(t,"DepthwiseConv2dNativeBackpropInput",(function(){return vn.W})),n.d(t,"Diag",(function(){return vn.X})),n.d(t,"Dilation2D",(function(){return vn.Y})),n.d(t,"Dilation2DBackpropInput",(function(){return vn.ab})),n.d(t,"Dilation2DBackpropFilter",(function(){return vn.Z})),n.d(t,"RealDiv",(function(){return vn.Ac})),n.d(t,"Einsum",(function(){return vn.cb})),n.d(t,"Elu",(function(){return vn.db})),n.d(t,"EluGrad",(function(){return vn.eb})),n.d(t,"Erf",(function(){return vn.hb})),n.d(t,"Equal",(function(){return vn.gb})),n.d(t,"Exp",(function(){return vn.ib})),n.d(t,"ExpandDims",(function(){return vn.jb})),n.d(t,"Expm1",(function(){return vn.kb})),n.d(t,"FFT",(function(){return vn.lb})),n.d(t,"Fill",(function(){return vn.mb})),n.d(t,"FlipLeftRight",(function(){return vn.nb})),n.d(t,"Floor",(function(){return vn.ob})),n.d(t,"FloorDiv",(function(){return vn.pb})),n.d(t,"FusedBatchNorm",(function(){return vn.rb})),n.d(t,"GatherV2",(function(){return vn.vb})),n.d(t,"GatherNd",(function(){return vn.ub})),n.d(t,"Greater",(function(){return vn.wb})),n.d(t,"GreaterEqual",(function(){return vn.xb})),n.d(t,"Identity",(function(){return vn.zb})),n.d(t,"IFFT",(function(){return vn.yb})),n.d(t,"Imag",(function(){return vn.Ab})),n.d(t,"IsFinite",(function(){return vn.Bb})),n.d(t,"IsInf",(function(){return vn.Cb})),n.d(t,"IsNan",(function(){return vn.Db})),n.d(t,"LeakyRelu",(function(){return vn.Hb})),n.d(t,"Less",(function(){return vn.Ib})),n.d(t,"LessEqual",(function(){return vn.Jb})),n.d(t,"LinSpace",(function(){return vn.Kb})),n.d(t,"Log",(function(){return vn.Lb})),n.d(t,"Log1p",(function(){return vn.Mb})),n.d(t,"LogicalAnd",(function(){return vn.Ob})),n.d(t,"LogicalNot",(function(){return vn.Pb})),n.d(t,"LogicalOr",(function(){return vn.Qb})),n.d(t,"LogSoftmax",(function(){return vn.Nb})),n.d(t,"LRN",(function(){return vn.Fb})),n.d(t,"LRNGrad",(function(){return vn.Gb})),n.d(t,"Max",(function(){return vn.Rb})),n.d(t,"Maximum",(function(){return vn.Xb})),n.d(t,"MaxPool",(function(){return vn.Sb})),n.d(t,"MaxPoolGrad",(function(){return vn.Vb})),n.d(t,"MaxPool3D",(function(){return vn.Tb})),n.d(t,"MaxPool3DGrad",(function(){return vn.Ub})),n.d(t,"MaxPoolWithArgmax",(function(){return vn.Wb})),n.d(t,"Mean",(function(){return vn.Yb})),n.d(t,"Min",(function(){return vn.Zb})),n.d(t,"Minimum",(function(){return vn.ac})),n.d(t,"MirrorPad",(function(){return vn.bc})),n.d(t,"Mod",(function(){return vn.cc})),n.d(t,"Multinomial",(function(){return vn.ec})),n.d(t,"Multiply",(function(){return vn.fc})),n.d(t,"Neg",(function(){return vn.gc})),n.d(t,"NotEqual",(function(){return vn.kc})),n.d(t,"NonMaxSuppressionV3",(function(){return vn.hc})),n.d(t,"NonMaxSuppressionV4",(function(){return vn.ic})),n.d(t,"NonMaxSuppressionV5",(function(){return vn.jc})),n.d(t,"OnesLike",(function(){return vn.nc})),n.d(t,"OneHot",(function(){return vn.mc})),n.d(t,"Pack",(function(){return vn.qc})),n.d(t,"PadV2",(function(){return vn.rc})),n.d(t,"Pool",(function(){return vn.sc})),n.d(t,"Pow",(function(){return vn.tc})),n.d(t,"Prelu",(function(){return vn.uc})),n.d(t,"Prod",(function(){return vn.vc})),n.d(t,"Range",(function(){return vn.xc})),n.d(t,"Real",(function(){return vn.zc})),n.d(t,"Reciprocal",(function(){return vn.Bc})),n.d(t,"Relu",(function(){return vn.Dc})),n.d(t,"Reshape",(function(){return vn.Fc})),n.d(t,"ResizeNearestNeighbor",(function(){return vn.Ic})),n.d(t,"ResizeNearestNeighborGrad",(function(){return vn.Jc})),n.d(t,"ResizeBilinear",(function(){return vn.Gc})),n.d(t,"ResizeBilinearGrad",(function(){return vn.Hc})),n.d(t,"Relu6",(function(){return vn.Ec})),n.d(t,"Reverse",(function(){return vn.Kc})),n.d(t,"Round",(function(){return vn.Mc})),n.d(t,"Rsqrt",(function(){return vn.Nc})),n.d(t,"ScatterNd",(function(){return vn.Pc})),n.d(t,"Select",(function(){return vn.Qc})),n.d(t,"Selu",(function(){return vn.Rc})),n.d(t,"Slice",(function(){return vn.Wc})),n.d(t,"Sin",(function(){return vn.Uc})),n.d(t,"Sinh",(function(){return vn.Vc})),n.d(t,"Sign",(function(){return vn.Tc})),n.d(t,"Sigmoid",(function(){return vn.Sc})),n.d(t,"Softplus",(function(){return vn.Yc})),n.d(t,"Sqrt",(function(){return vn.gd})),n.d(t,"Sum",(function(){return vn.pd})),n.d(t,"SpaceToBatchND",(function(){return vn.Zc})),n.d(t,"SplitV",(function(){return vn.fd})),n.d(t,"Softmax",(function(){return vn.Xc})),n.d(t,"SparseFillEmptyRows",(function(){return vn.ad})),n.d(t,"SparseReshape",(function(){return vn.bd})),n.d(t,"SparseSegmentMean",(function(){return vn.cd})),n.d(t,"SparseSegmentSum",(function(){return vn.dd})),n.d(t,"SparseToDense",(function(){return vn.ed})),n.d(t,"SquaredDifference",(function(){return vn.id})),n.d(t,"Square",(function(){return vn.hd})),n.d(t,"StridedSlice",(function(){return vn.kd})),n.d(t,"StringNGrams",(function(){return vn.ld})),n.d(t,"StringSplit",(function(){return vn.md})),n.d(t,"StringToHashBucketFast",(function(){return vn.nd})),n.d(t,"Sub",(function(){return vn.od})),n.d(t,"Tan",(function(){return vn.qd})),n.d(t,"Tanh",(function(){return vn.rd})),n.d(t,"Tile",(function(){return vn.ud})),n.d(t,"TopK",(function(){return vn.vd})),n.d(t,"Transform",(function(){return vn.wd})),n.d(t,"Transpose",(function(){return vn.xd})),n.d(t,"Unique",(function(){return vn.yd})),n.d(t,"Unpack",(function(){return vn.zd})),n.d(t,"UnsortedSegmentSum",(function(){return vn.Ad})),n.d(t,"ZerosLike",(function(){return vn.Cd})),n.d(t,"Step",(function(){return vn.jd})),n.d(t,"FromPixels",(function(){return vn.qb})),n.d(t,"RotateWithOffset",(function(){return vn.Lc})),n.d(t,"_FusedMatMul",(function(){return vn.Dd})),n.d(t,"FusedConv2D",(function(){return vn.sb})),n.d(t,"FusedDepthwiseConv2D",(function(){return vn.tb})),n.d(t,"CallbackList",(function(){return za.b})),n.d(t,"CustomCallback",(function(){return za.c})),n.d(t,"History",(function(){return za.e})),n.d(t,"Callback",(function(){return za.a})),n.d(t,"callbacks",(function(){return za.l})),n.d(t,"EarlyStopping",(function(){return za.d})),n.d(t,"InputSpec",(function(){return za.f})),n.d(t,"SymbolicTensor",(function(){return za.k})),n.d(t,"LayersModel",(function(){return za.h})),n.d(t,"input",(function(){return za.o})),n.d(t,"loadLayersModel",(function(){return za.q})),n.d(t,"model",(function(){return za.s})),n.d(t,"registerCallbackConstructor",(function(){return za.u})),n.d(t,"sequential",(function(){return za.w})),n.d(t,"RNN",(function(){return za.i})),n.d(t,"Sequential",(function(){return za.j})),n.d(t,"LayerVariable",(function(){return za.g})),n.d(t,"version_layers",(function(){return za.x})),n.d(t,"constraints",(function(){return za.m})),n.d(t,"initializers",(function(){return za.n})),n.d(t,"layers",(function(){return za.p})),n.d(t,"metrics",(function(){return za.r})),n.d(t,"models",(function(){return za.t})),n.d(t,"regularizers",(function(){return za.v})),n.d(t,"GraphModel",(function(){return js})),n.d(t,"loadGraphModel",(function(){return b})),n.d(t,"deregisterOp",(function(){return Va.a})),n.d(t,"registerOp",(function(){return Va.c})),n.d(t,"version_converter",(function(){return Ns})),n.d(t,"data",(function(){return Ts})),n.d(t,"version",(function(){return Rg}));var xn={};n.r(xn),n.d(xn,"simpleAbsImpl",(function(){return D})),n.d(xn,"addImpl",(function(){return Hs})),n.d(xn,"bincountImpl",(function(){return V})),n.d(xn,"bincountReduceImpl",(function(){return W})),n.d(xn,"ceilImpl",(function(){return Ai})),n.d(xn,"concatImpl",(function(){return U})),n.d(xn,"equalImpl",(function(){return fo})),n.d(xn,"expImpl",(function(){return So})),n.d(xn,"expm1Impl",(function(){return Co})),n.d(xn,"floorImpl",(function(){return Vo})),n.d(xn,"gatherNdImpl",(function(){return te})),n.d(xn,"gatherV2Impl",(function(){return ne})),n.d(xn,"greaterImpl",(function(){return Qo})),n.d(xn,"greaterEqualImpl",(function(){return tu})),n.d(xn,"lessImpl",(function(){return du})),n.d(xn,"lessEqualImpl",(function(){return fu})),n.d(xn,"linSpaceImpl",(function(){return re})),n.d(xn,"logImpl",(function(){return yu})),n.d(xn,"maxImpl",(function(){return ae})),n.d(xn,"maximumImpl",(function(){return Du})),n.d(xn,"minimumImpl",(function(){return Uu})),n.d(xn,"multiplyImpl",(function(){return io})),n.d(xn,"negImpl",(function(){return oe})),n.d(xn,"notEqualImpl",(function(){return oc})),n.d(xn,"prodImpl",(function(){return le})),n.d(xn,"rangeImpl",(function(){return de})),n.d(xn,"rsqrtImpl",(function(){return Ec})),n.d(xn,"sigmoidImpl",(function(){return Bs})),n.d(xn,"sliceImpl",(function(){return P})),n.d(xn,"sparseFillEmptyRowsImpl",(function(){return pe})),n.d(xn,"sparseReshapeImpl",(function(){return fe})),n.d(xn,"sparseSegmentReductionImpl",(function(){return me})),n.d(xn,"sqrtImpl",(function(){return tl})),n.d(xn,"squaredDifferenceImpl",(function(){return sl})),n.d(xn,"stridedSliceImpl",(function(){return be})),n.d(xn,"stringNGramsImpl",(function(){return ge})),n.d(xn,"stringSplitImpl",(function(){return xe})),n.d(xn,"stringToHashBucketFastImpl",(function(){return ve})),n.d(xn,"subImpl",(function(){return Fo})),n.d(xn,"tileImpl",(function(){return we})),n.d(xn,"topKImpl",(function(){return ke})),n.d(xn,"transposeImpl",(function(){return F})),n.d(xn,"uniqueImpl",(function(){return Te}));var vn=n("HIu9"),wn=(n("n7g5"),n("/nzz")),On=n("Vloo");Object(On.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(wn.a)(this)};var kn=n("T0gV");Object(On.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(kn.a)(this)};var In=n("2pXM");Object(On.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(In.a)(this)};var Sn=n("IjOl");Object(On.d)().prototype.add=function(e){return this.throwIfDisposed(),Object(Sn.a)(this,e)};var jn=n("BMWi");Object(On.d)().prototype.all=function(e,t){return this.throwIfDisposed(),Object(jn.a)(this,e,t)};var Nn=n("H9TD");Object(On.d)().prototype.any=function(e,t){return this.throwIfDisposed(),Object(Nn.a)(this,e,t)};var Tn=n("81bp");Object(On.d)().prototype.argMax=function(e){return this.throwIfDisposed(),Object(Tn.a)(this,e)};var Cn=n("i2y0");Object(On.d)().prototype.argMin=function(e){return this.throwIfDisposed(),Object(Cn.a)(this,e)};var En=n("6RbH"),An=n("qCmv");Object(On.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(An.b)(1===this.size,(()=>"The array must have only 1 element.")),Object(En.a)(this,[])};var $n=n("VWKH");Object(On.d)().prototype.asType=function(e){return this.throwIfDisposed(),Object($n.a)(this,e)},Object(On.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(En.a)(this,[this.size])},Object(On.d)().prototype.as2D=function(e,t){return this.throwIfDisposed(),Object(En.a)(this,[e,t])},Object(On.d)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Object(En.a)(this,[e,t,n])},Object(On.d)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Object(En.a)(this,[e,t,n,r])},Object(On.d)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Object(En.a)(this,[e,t,n,r,a])};var Rn=n("DQih");Object(On.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(Rn.a)(this)};var Dn=n("jyGP");Object(On.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(Dn.a)(this)};var Fn=n("y5x8");Object(On.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(Fn.a)(this)};var _n=n("stJV");Object(On.d)().prototype.atan2=function(e){return this.throwIfDisposed(),Object(_n.a)(this,e)};var Mn=n("BQvL");Object(On.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(Mn.a)(this)};var zn=n("zCKB");Object(On.d)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Object(zn.a)(this,e,t,n,r)};var Ln=n("nF6w");Object(On.d)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Object(Ln.a)(this,e,t)};var Pn=n("BKSR");Object(On.d)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Pn.a)(this,e,t,n,r,a)};var Bn=n("Myfv");Object(On.d)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Object(Bn.a)(this,e)},Object(On.d)().prototype.cast=function(e){return this.throwIfDisposed(),Object($n.a)(this,e)};var Vn=n("GkXz");Object(On.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Vn.a)(this)};var Wn=n("o8ld");Object(On.d)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Object(Wn.a)(this,e,t)};var Un=n("PurG");Object(On.d)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof On.a&&(e=[e]),Object(Un.a)([this,...e],t)};var Gn=n("4px1");Object(On.d)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Gn.a)(this,e,t,n,r,a,s)};var qn=n("EOdB");Object(On.d)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Object(qn.a)(this,e,t,n,r,a)};var Hn=n("UY8A");Object(On.d)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Hn.a)(this,e,t,n,r,a,s)};var Yn=n("s144");Object(On.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(Yn.a)(this)};var Kn=n("MvpJ");Object(On.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(Kn.a)(this)};var Xn=n("ZGBu");Object(On.d)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Object(Xn.a)(this,e,t,n)};var Zn=n("TTC5");Object(On.d)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Object(Zn.a)(this,e,t)};var Qn=n("b/7Q");Object(On.d)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Qn.a)(this,e,t,n,r,a,s)};var Jn=n("9O3H");Object(On.d)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Jn.a)(this,e,t,n,r,a)};var er=n("E2tP");Object(On.d)().prototype.divNoNan=function(e){return this.throwIfDisposed(),Object(er.a)(this,e)};var tr=n("J/Nb");Object(On.d)().prototype.div=function(e){return this.throwIfDisposed(),Object(tr.a)(this,e)};var nr=n("h5te");Object(On.d)().prototype.dot=function(e){return this.throwIfDisposed(),Object(nr.a)(this,e)};var rr=n("tnC0");Object(On.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(rr.a)(this)};var ar=n("tZSd");Object(On.d)().prototype.equal=function(e){return this.throwIfDisposed(),Object(ar.a)(this,e)};var sr=n("KZu2");Object(On.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(sr.a)(this)};var ir=n("pI0a");Object(On.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(ir.a)(this)};var or=n("dKcc");Object(On.d)().prototype.expandDims=function(e){return this.throwIfDisposed(),Object(or.a)(this,e)};var ur=n("oRLg");Object(On.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(ur.a)(this)};var cr=n("Vs/U");Object(On.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(cr.a)(this)},Object(On.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(En.a)(this,[this.size])};var lr=n("/0Av");Object(On.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(lr.a)(this)};var dr=n("a4Y6");Object(On.d)().prototype.floorDiv=function(e){return this.throwIfDisposed(),Object(dr.a)(this,e)};var hr=n("DSJG");Object(On.d)().prototype.gather=function(e,t){return this.throwIfDisposed(),Object(hr.a)(this,e,t)};var pr=n("LIhl");Object(On.d)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Object(pr.a)(this,e)};var fr=n("L2At");Object(On.d)().prototype.greater=function(e){return this.throwIfDisposed(),Object(fr.a)(this,e)};var mr=n("qzbf");Object(On.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(mr.a)(this)};var br=n("ZLVG");Object(On.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(br.a)(this)};var gr=n("izwh");Object(On.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(gr.a)(this)};var yr=n("V0g5");Object(On.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(yr.a)(this)};var xr=n("f62m");Object(On.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(xr.a)(this)};var vr=n("F/nV");Object(On.d)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Object(vr.a)(this,e)};var wr=n("hYe0");Object(On.d)().prototype.lessEqual=function(e){return this.throwIfDisposed(),Object(wr.a)(this,e)};var Or=n("+VIV");Object(On.d)().prototype.less=function(e){return this.throwIfDisposed(),Object(Or.a)(this,e)};var kr=n("CGXl");Object(On.d)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Object(kr.a)(this,e,t,n,r)};var Ir=n("zunn");Object(On.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(Ir.a)(this)};var Sr=n("Klcu");Object(On.d)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Object(Sr.a)(this,e)};var jr=n("f1WP");Object(On.d)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Object(jr.a)(this,e,t)};var Nr=n("V7pg");Object(On.d)().prototype.log=function(){return this.throwIfDisposed(),Object(Nr.a)(this)};var Tr=n("B4Jo");Object(On.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(Tr.a)(this)};var Cr=n("axJg");Object(On.d)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Object(Cr.a)(this,e)};var Er=n("XjY9");Object(On.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Er.a)(this)};var Ar=n("jyi7");Object(On.d)().prototype.logicalOr=function(e){return this.throwIfDisposed(),Object(Ar.a)(this,e)};var $r=n("28uj");Object(On.d)().prototype.logicalXor=function(e){return this.throwIfDisposed(),Object($r.a)(this,e)};var Rr=n("vTEK");Object(On.d)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Object(Rr.a)(this,e,t,n)};var Dr=n("PJQw");Object(On.d)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Object(Dr.a)(this,e,t,n,r)};var Fr=n("tsju");Object(On.d)().prototype.max=function(e,t){return this.throwIfDisposed(),Object(Fr.a)(this,e,t)};var _r=n("ZuVY");Object(On.d)().prototype.maximum=function(e){return this.throwIfDisposed(),Object(_r.a)(this,e)};var Mr=n("f/sF");Object(On.d)().prototype.mean=function(e,t){return this.throwIfDisposed(),Object(Mr.a)(this,e,t)};var zr=n("I4Wd");Object(On.d)().prototype.min=function(e,t){return this.throwIfDisposed(),Object(zr.a)(this,e,t)};var Lr=n("IbvB");Object(On.d)().prototype.minimum=function(e){return this.throwIfDisposed(),Object(Lr.a)(this,e)};var Pr=n("TKdW");Object(On.d)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Object(Pr.a)(this,e,t)};var Br=n("jSy6");Object(On.d)().prototype.mod=function(e){return this.throwIfDisposed(),Object(Br.a)(this,e)};var Vr=n("TvjY");Object(On.d)().prototype.mul=function(e){return this.throwIfDisposed(),Object(Vr.a)(this,e)};var Wr=n("uiqz");Object(On.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(Wr.a)(this)};var Ur=n("Q4qi");Object(On.d)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Object(Ur.a)(this,e,t,n)};var Gr=n("zz8d");Object(On.d)().prototype.notEqual=function(e){return this.throwIfDisposed(),Object(Gr.a)(this,e)};var qr=n("Jd0k");Object(On.d)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Object(qr.a)(this,e,t,n)};var Hr=n("i9Yk");Object(On.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(Hr.a)(this)};var Yr=n("bhue");Object(On.d)().prototype.pad=function(e,t){return this.throwIfDisposed(),Object(Yr.a)(this,e,t)};var Kr=n("s8iC");Object(On.d)().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Kr.a)(this,e,t,n,r,a,s)};var Xr=n("0vIi");Object(On.d)().prototype.pow=function(e){return this.throwIfDisposed(),Object(Xr.a)(this,e)};var Zr=n("6RlV");Object(On.d)().prototype.prelu=function(e){return this.throwIfDisposed(),Object(Zr.a)(this,e)};var Qr=n("GeDt");Object(On.d)().prototype.prod=function(e,t){return this.throwIfDisposed(),Object(Qr.a)(this,e,t)};var Jr=n("zRhu");Object(On.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Jr.a)(this)};var ea=n("Kc3e");Object(On.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(ea.a)(this)};var ta=n("WpCK");Object(On.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(ta.a)(this)},Object(On.d)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Object(En.a)(this,e.shape)},Object(On.d)().prototype.reshape=function(e){return this.throwIfDisposed(),Object(En.a)(this,e)};var na=n("i5X8");Object(On.d)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Object(na.a)(this,e,t,n)};var ra=n("xSKm");Object(On.d)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Object(ra.a)(this,e,t,n)};var aa=n("5gGe");Object(On.d)().prototype.reverse=function(e){return this.throwIfDisposed(),Object(aa.a)(this,e)};var sa=n("/2Wz");Object(On.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(sa.a)(this)};var ia=n("dRLb");Object(On.d)().prototype.round=function(){return this.throwIfDisposed(),Object(ia.a)(this)};var oa=n("dsom");Object(On.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(oa.a)(this)};var ua=n("C683");Object(On.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(ua.a)(this)};var ca=n("YLoS");Object(On.d)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(ca.a)(this,e,t,n,r,a,s)};var la=n("PRjJ");Object(On.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(la.a)(this)};var da=n("yGDk");Object(On.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(da.a)(this)};var ha=n("G/uF");Object(On.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(ha.a)(this)};var pa=n("FGFg");Object(On.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(pa.a)(this)};var fa=n("O7pG");Object(On.d)().prototype.slice=function(e,t){return this.throwIfDisposed(),Object(fa.a)(this,e,t)};var ma=n("Qo3Y");Object(On.d)().prototype.softmax=function(e){return this.throwIfDisposed(),Object(ma.a)(this,e)};var ba=n("sWob");Object(On.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(ba.a)(this)};var ga=n("TbFj");Object(On.d)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Object(ga.a)(this,e,t)};var ya=n("Km0G");Object(On.d)().prototype.split=function(e,t){return this.throwIfDisposed(),Object(ya.a)(this,e,t)};var xa=n("2qJO");Object(On.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(xa.a)(this)};var va=n("9rnT");Object(On.d)().prototype.square=function(){return this.throwIfDisposed(),Object(va.a)(this)};var wa=n("s49F");Object(On.d)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Object(wa.a)(this,e)};var Oa=n("3IVC");Object(On.d)().prototype.squeeze=function(e){return this.throwIfDisposed(),Object(Oa.a)(this,e)};var ka=n("7exT");Object(On.d)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof On.a?[this,e]:[this,...e];return Object(ka.a)(n,t)};var Ia=n("IBm2");Object(On.d)().prototype.step=function(e){return this.throwIfDisposed(),Object(Ia.a)(this,e)};var Sa=n("v+nw");Object(On.d)().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Object(Sa.a)(this,e,t,n,r,a,s,i,o)};var ja=n("7JZ3");Object(On.d)().prototype.sub=function(e){return this.throwIfDisposed(),Object(ja.a)(this,e)};var Na=n("zFAV");Object(On.d)().prototype.sum=function(e,t){return this.throwIfDisposed(),Object(Na.a)(this,e,t)};var Ta=n("VYYy");Object(On.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(Ta.a)(this)};var Ca=n("z2op");Object(On.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(Ca.a)(this)};var Ea=n("5oWy");Object(On.d)().prototype.tile=function(e){return this.throwIfDisposed(),Object(Ea.a)(this,e)},Object(On.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object($n.a)(this,"bool")},Object(On.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object($n.a)(this,"float32")},Object(On.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object($n.a)(this,"int32")};var Aa=n("9+YK");Object(On.d)().prototype.topk=function(e,t){return this.throwIfDisposed(),Object(Aa.a)(this,e,t)};var $a=n("koUT");Object(On.d)().prototype.transpose=function(e){return this.throwIfDisposed(),Object($a.a)(this,e)};var Ra=n("Cn86");Object(On.d)().prototype.unique=function(e){return this.throwIfDisposed(),Object(Ra.a)(this,e)};var Da=n("Uom0");Object(On.d)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Object(Da.a)(this,e,t)};var Fa=n("tH7w");Object(On.d)().prototype.unstack=function(e){return this.throwIfDisposed(),Object(Fa.a)(this,e)};var _a=n("XL4q");Object(On.d)().prototype.where=function(e,t){return this.throwIfDisposed(),Object(_a.a)(e,this,t)};var Ma=n("ZRUZ");Object(On.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(Ma.a)(this)};var za=n("0hhO");Object(vn.Ye)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}));var La=n("txfa"),Pa=n("GhFD");class Ba{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Object(Pa.e)(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Object(Pa.e)(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(La.f)(this.node.rawAttrs,e,t);if(null!=n.s)return Object(La.i)(this.node.rawAttrs,e,t);if(null!=n.b)return Object(La.c)(this.node.rawAttrs,e,t);if(null!=n.shape)return Object(La.k)(this.node.rawAttrs,e,t);if(null!=n.type)return Object(La.e)(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(La.g)(this.node.rawAttrs,e,t);if(null!=n.list.s)return Object(La.h)(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Object(La.j)(this.node.rawAttrs,e,t);if(null!=n.list.b)return Object(La.b)(this.node.rawAttrs,e,t);if(null!=n.list.type)return Object(La.d)(this.node.rawAttrs,e,t)}return t}}var Va=n("Ukiz"),Wa=n("QLnx");var Ua=n("bsxM"),Ga=n("393e"),qa=n("9oR1");class Ha{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(vn.ih)(0),Object(vn.Gf)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),r(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Object(vn.Gf)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Object(vn.Wh)([],[0].concat(this.elementShape));const n=this.readMany(e);return r(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(vn.Nh)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Object(vn.Wh)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return r(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(vn.oe)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Object(vn.qi)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Object(vn.fi)((()=>{t=Object(vn.Zg)(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Object(vn.Zg)(Object(vn.wh)(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class Ya{constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);r(t,e.shape,"TensorList shape mismatch: "),Object(vn.Gf)(e)})),this.idTensor=Object(vn.ih)(0),this.maxNumElements=a,Object(vn.Gf)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Ya([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);r(e,this.elementShape,"TensorList shape mismatch: ");const a=s(this.elementShape,this.tensors,e);return Object(vn.fi)((()=>{const e=this.tensors.map((e=>Object(vn.Zg)(e,a)));return Object(vn.Nh)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=s(this.elementShape,this.tensors,e),a=this.tensors.pop();return r(a.shape,e,"TensorList shape mismatch: "),Object(vn.Zg)(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(r(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(vn.Gf)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);r(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=s(this.elementShape,this.tensors,t);return Object(vn.Zg)(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);r(this.elementShape,t.shape,"TensorList shape mismatch: "),Object(vn.Gf)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);r(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=s(this.elementShape,this.tensors,n);return 0===e.length?Object(vn.Wh)([],[0].concat(a)):Object(vn.fi)((()=>{const t=e.map((e=>Object(vn.Zg)(this.tensors[e],a)));return Object(vn.Nh)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);r(this.elementShape,t,"TensorList shape mismatch: ");const n=s(this.elementShape,this.tensors,t);return 0===this.size()?Object(vn.Wh)([],[0].concat(n)):Object(vn.fi)((()=>{const e=this.tensors.map((e=>Object(vn.Zg)(e,n)));return Object(vn.oe)(e,0)}))}}var Ka=n("tzXg"),Xa=n("1ncO"),Za=n("s/7G"),Qa=n("YJlT"),Ja=n("MLUI");var es=n("3hN3"),ts=n("xJ83"),ns=n("dMGs"),rs=n("sxV+"),as=n("qdaq"),ss=n("tmMy"),is=n("Qr1B"),os=n("cuXz");var us=n("9MFc"),cs=n("QWbY");var ls=n("wFwg"),ds=n("pRRN");class hs{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Object(vn.ih)(0),this.tensorMap=new Map,Object(vn.Gf)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ds.a(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Object(vn.fi)((()=>{const e=Object(vn.qi)(t),r=n.length,a=e.length;vn.si.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];Object(vn.Gf)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Object(vn.fi)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=this.findWithDefault(n[r],t);e.push(a)}return Object(vn.Nh)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var ps=n("J7Up");var fs=n("MZyz");var ms=n("jtlB"),bs=n("FZ96");var gs=n("u3dQ"),ys=n("6o7b");var xs=n("+gnc");class vs{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=l({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}const ws=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Os=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],ks=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];class Is{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Is(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=d(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>Object(Pa.g)(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,c=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||c.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return c}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Object(Pa.g)(e)[0]])),a=t.map((e=>Object(Pa.g)(e)[0]));let s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return Object(vn.fi)((()=>{const n=new vs(this.weightMap,u,l,this.functionExecutorMap),r=m({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=Object(Pa.g)(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=c(t,r,n,this._resourceManager);if(vn.si.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>Object(Pa.e)(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const s=Object(Pa.f)(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=Object(Pa.b)(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Object(vn.Ye)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const s=new vs(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);const i=t.map((e=>Object(Pa.e)(e,this.tensorsMap,s))),o=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[Object(Pa.g)(e)[0]])),i=n.map((e=>Object(Pa.g)(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:p}=d(e,o,this.weightMap,this._initNodes),f=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),b=m({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Object(Pa.g)(t),a=[];a[r]=e[t],b[n]=a}));const g={},y=this.getFrozenTensorIds(b),x={};for(;f.length>0;){const e=this.processStack(s,f,t,b,x,y,i,g,u);await Promise.all(e)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const v=o.filter((e=>!h(e)&&!Object(Pa.e)(e.name,b,t))).map((e=>e.name));if(v.length>0){let e="";throw null!=l&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${v}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return b}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&Object(Pa.d)("isConstant",e.node,r,n)&&([d]=Object(Pa.b)(e.node.name,n)),null==r[e.node.name]){const h=c(e.node,r,n,this._resourceManager);d||([d]=Object(Pa.b)(e.node.name,n));const p=n.currentContext;vn.si.isPromise(h)?l.push(h.then((c=>(r[d]=c,n.currentContext=p,this.checkTensorForDisposal(d,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),c)))):(r[d]=h,this.checkTensorForDisposal(d,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=Object(Pa.b)(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Object(Pa.e)(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Object(Pa.e)(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Object(Pa.g)(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));vn.si.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&vn.si.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Object(Pa.g)(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Object(Pa.g)(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Ss{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class js{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Ss}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=vn.Bf.browserHTTPRequest(e,this.loadOptions);else{const t=vn.Bf.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(vn.Bf.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=vn.Bf.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Is(La.a.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=La.a.Instance.transformGraph(e.modelInitializer);this.initializer=new Is(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=vn.Bf.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof vn.sd||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}const Ns="3.13.0";var Ts=n("an0W");const Cs=vn.Hf.whereImpl;class Es extends vn.Eb{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new vn.R(this,Object(vn.Xe)())}nextDataId(){return Es.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(vn.Ye)().get("IS_NODE")&&vn.Vd.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&vn.si.isString(n[0])){const a=n.map((e=>vn.si.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return vn.Vd.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>vn.si.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(vn.ie)(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Object(vn.Xe)().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=vn.si.now();e();return{kernelMs:vn.si.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){g([e],"where");const t=this.readSync(e.dataId);return Cs(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Es.nextDataId=0;Object(vn.Tg)("cpu",(()=>new Es),1);const As=y(vn.db,(e=>e>=0?e:Math.exp(e)-1)),$s={kernelName:vn.db,backendName:"cpu",kernelFunc:As},Rs={kernelName:vn.zb,backendName:"cpu",kernelFunc:v},Ds={kernelName:vn.Hb,backendName:"cpu",kernelFunc:w},Fs=O(((e,t)=>e<0?t*e:e)),_s={kernelName:vn.uc,backendName:"cpu",kernelFunc:k},Ms=y(vn.Dc,(e=>Math.max(0,e))),zs={kernelName:vn.Dc,backendName:"cpu",kernelFunc:Ms},Ls=y(vn.Ec,(e=>Math.min(Math.max(0,e),6))),Ps={kernelName:vn.Ec,backendName:"cpu",kernelFunc:Ls},Bs=I((e=>1/(1+Math.exp(-e)))),Vs=y(vn.Sc,(e=>1/(1+Math.exp(-e)))),Ws={kernelName:vn.Sc,backendName:"cpu",kernelFunc:Vs},Us={kernelName:vn.E,backendName:"cpu",kernelFunc:j},Gs={kernelName:vn.zc,backendName:"cpu",kernelFunc:T},qs={kernelName:vn.B,backendName:"cpu",kernelFunc:C},Hs=O(((e,t)=>e+t)),Ys=A(((e,t,n,r)=>({real:e+n,imag:t+r}))),Ks=E(vn.h,Hs,Ys),Xs={kernelName:vn.h,backendName:"cpu",kernelFunc:Ks},Zs={kernelName:vn.Fc,backendName:"cpu",kernelFunc:$},Qs={kernelName:vn.w,backendName:"cpu",kernelFunc:R},Js={kernelName:vn.Dd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=R({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),i&&(p=Ks({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),l&&(f=S(n,h,l,o,d),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}},ei={kernelName:vn.a,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;g(t,"abs");let r=new Float32Array(vn.si.sizeFromShape(t.shape));return r=D(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},ti=y(vn.b,(e=>Math.acos(e))),ni={kernelName:vn.b,backendName:"cpu",kernelFunc:ti},ri=y(vn.c,(e=>Math.acosh(e))),ai={kernelName:vn.c,backendName:"cpu",kernelFunc:ri},si={kernelName:vn.i,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;g(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=Object(vn.ie)(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}},ii={kernelName:vn.xd,backendName:"cpu",kernelFunc:_},oi={kernelName:vn.j,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;g(a,"all");const o=vn.si.parseAxisParam(s,a.shape);let u=o;const c=vn.Vd.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=_({inputs:{x:a},backend:n,attrs:{perm:c}}),u=vn.Vd.getInnerMostAxes(u.length,a.shape.length)),vn.Vd.assertAxesAreInnerMostDims("all",u,l.shape.length);const[d,h]=vn.Vd.computeOutAndReduceShapes(l.shape,u),p=vn.si.sizeFromShape(h),f=vn.si.makeZerosTypedArray(vn.si.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const b=n.makeTensorInfo(d,l.dtype,f);if(i){const e=$({inputs:{x:b},backend:n,attrs:{shape:vn.Vd.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},ui={kernelName:vn.k,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;g(a,"any");const o=vn.si.parseAxisParam(s,a.shape);let u=o;const c=vn.Vd.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=_({inputs:{x:a},backend:n,attrs:{perm:c}}),u=vn.Vd.getInnerMostAxes(u.length,a.shape.length)),vn.Vd.assertAxesAreInnerMostDims("any",u,l.shape.length);const[d,h]=vn.Vd.computeOutAndReduceShapes(l.shape,u),p=vn.si.sizeFromShape(h),f=vn.si.makeZerosTypedArray(vn.si.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const b=n.makeTensorInfo(d,l.dtype,f);if(i){const e=$({inputs:{x:b},backend:n,attrs:{shape:vn.Vd.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},ci={kernelName:vn.l,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;g(a,"argMax");let i=vn.si.parseAxisParam(s,a.shape);const o=vn.Vd.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=_({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=vn.Vd.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],vn.Vd.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[l,d]=vn.Vd.computeOutAndReduceShapes(u.shape,i),h=vn.si.sizeFromShape(l),p=vn.si.makeZerosTypedArray(h,"int32"),f=vn.si.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a>n&&(n=a,r=e)}p[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",p)}},li={kernelName:vn.m,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;g(a,"argMin");let i=vn.si.parseAxisParam(s,a.shape);const o=vn.Vd.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=_({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=vn.Vd.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],vn.Vd.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[l,d]=vn.Vd.computeOutAndReduceShapes(u.shape,i),h=vn.si.sizeFromShape(l),p=vn.si.makeZerosTypedArray(h,"int32"),f=vn.si.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a<n&&(n=a,r=e)}p[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",p)}},di=y(vn.n,(e=>Math.asin(e))),hi={kernelName:vn.n,backendName:"cpu",kernelFunc:di},pi=y(vn.o,(e=>Math.asinh(e))),fi={kernelName:vn.o,backendName:"cpu",kernelFunc:pi},mi=y(vn.p,(e=>Math.atan(e))),bi={kernelName:vn.p,backendName:"cpu",kernelFunc:mi},gi=O(((e,t)=>Math.atan2(e,t))),yi=E(vn.q,gi),xi={kernelName:vn.q,backendName:"cpu",kernelFunc:yi},vi=y(vn.r,(e=>Math.atanh(e))),wi={kernelName:vn.r,backendName:"cpu",kernelFunc:vi},Oi={kernelName:vn.s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;g(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;vn.si.assert(vn.Vd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=vn.Vd.computePool2DInfo(a.shape,s,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&vn.si.arraysEqual(c.inShape,c.outShape))l=v({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=vn.si.computeStrides(a.shape),r=M(e,0,a.dtype,t,c,"avg");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}},ki={kernelName:vn.t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;g(a,"avgPool3d");const l=vn.Vd.computePool3DInfo(a.shape,s,i,1,o,u,c),d=L(n.data.get(a.dataId).values,0,a.dtype,vn.si.computeStrides(a.shape),l,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}},Ii={kernelName:vn.u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;g([a,s],"avgPool3DGrad");const l=vn.Vd.computePool3DInfo(s.shape,i,o,1,u,c),d=l.strideDepth,h=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,b=l.filterWidth,y=l.dilationDepth,x=l.dilationHeight,v=l.dilationWidth,w=l.effectiveFilterDepth,O=l.effectiveFilterHeight,k=l.effectiveFilterWidth,I=w-1-l.padInfo.front,S=k-1-l.padInfo.left,j=O-1-l.padInfo.top,N=Object(vn.ie)(s.shape,"float32"),T=1/(f*m*b),C=n.bufferSync(a);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inDepth;++n)for(let r=0;r<l.inHeight;++r)for(let a=0;a<l.inWidth;++a){const s=n-I,i=r-j,o=a-S;let u=0;for(let n=0;n<w;n+=y){const r=(s+n)/d;if(!(r<0||r>=l.outDepth||Math.floor(r)!==r))for(let n=0;n<O;n+=x){const a=(i+n)/h;if(!(a<0||a>=l.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=v){const s=(o+n)/p;if(s<0||s>=l.outWidth||Math.floor(s)!==s)continue;u+=C.get(e,r,a,s,t)}}}N.set(u*T,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},Si={kernelName:vn.v,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;g([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=vn.Vd.computePool2DInfo(i.shape,o,u,1,c),d=l.strideHeight,h=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,b=l.dilationWidth,y=l.effectiveFilterHeight,x=l.effectiveFilterWidth,v=x-1-l.padInfo.left,w=y-1-l.padInfo.top,O=Object(vn.ie)(i.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,S=Object(vn.ie)(a.shape,"float32",I);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const a=n-w,s=r-v;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/d;if(!(r<0||r>=l.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=b){const a=(s+n)/h;if(a<0||a>=l.outWidth||Math.floor(a)!==a)continue;i+=S.get(e,r,a,t)}}O.set(i*k,e,n,r,t)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}},ji={kernelName:vn.rb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;vn.si.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),vn.si.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),vn.si.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),g([a,o,u,s,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const l=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),b=f.length,y=p.length,x=h.length,v=d.length;let w=0,O=0,k=0,I=0;for(let e=0;e<l.length;++e)m[e]=f[w++]+(l[e]-d[O++])*p[k++]/Math.sqrt(h[I++]+c),w>=b&&(w=0),O>=v&&(O=0),k>=y&&(k=0),I>=x&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}},Ni={kernelName:vn.Wc,backendName:"cpu",kernelFunc:B},Ti={kernelName:vn.x,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;g([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=vn.Vd.getReshaped(a.shape,s,o),c=vn.Vd.getPermuted(u.length,s.length),l=vn.Vd.getReshapedPermuted(a.shape,s,o),d=vn.Vd.getSliceBeginCoords(i,s.length),h=vn.Vd.getSliceSize(l,i,s.length),p=$({inputs:{x:a},backend:n,attrs:{shape:u}}),f=_({inputs:{x:p},backend:n,attrs:{perm:c}}),m=$({inputs:{x:f},backend:n,attrs:{shape:l}}),b=B({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}},Ci={kernelName:vn.y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=V(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},Ei={kernelName:vn.z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=vn.Vd.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Ai=I((e=>Math.ceil(e))),$i=x(vn.C,Ai),Ri={kernelName:vn.C,backendName:"cpu",kernelFunc:$i},Di=y(vn.D,((e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e)),Fi={kernelName:vn.D,backendName:"cpu",kernelFunc:Di},_i={kernelName:vn.F,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(vn.si.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.imag,i=n.data.get(a.complexTensorInfos.real.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;e++){r[e]=Math.hypot(i[e],o[e])}return n.makeOutput(r,t.shape,"float32")}},Mi={kernelName:vn.Ab,backendName:"cpu",kernelFunc:G},zi={kernelName:vn.G,backendName:"cpu",kernelFunc:q},Li={kernelName:vn.H,backendName:"cpu",kernelFunc:H},Pi={kernelName:vn.I,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;g([a,s],"conv2dBackpropFilter");const d=vn.Vd.convertConv2DDataFormat(u),h=vn.Vd.computeConv2DInfo(a.shape,l,i,1,o,c,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:b}=h,y="channelsLast"===h.dataFormat,x=new vn.td(h.filterShape,"float32"),v=h.padInfo.left,w=h.padInfo.top,O=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new vn.td(a.shape,a.dtype,O),S=new vn.td(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(h.outHeight,(h.inHeight+w-e)/p);for(let r=0;r<b;++r){const a=Math.max(0,Math.ceil((v-r)/f)),s=Math.min(h.outWidth,(h.inWidth+v-r)/f);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let u=0;for(let c=0;c<h.batchSize;++c)for(let l=t;l<n;++l){const t=e+l*p-w;for(let e=a;e<s;++e){const n=r+e*f-v;u+=y?I.get(c,t,n,i)*S.get(c,l,e,o):I.get(c,i,t,n)*S.get(c,o,l,e)}}x.set(u,e,r,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Bi={kernelName:vn.J,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r;g([a,s],"conv2dBackpropInput");const d=vn.si.computeStrides(s.shape),h=vn.si.computeStrides(a.shape);let p=vn.Vd.convertConv2DDataFormat(c);const f=vn.Vd.computeConv2DInfo(i,s.shape,o,1,u,l,!1,p),m=new vn.td(f.inShape,"float32"),b=m.values,y=n.data.get(a.dataId).values,x=n.data.get(s.dataId).values,[v,w,O]=d,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:j,inHeight:N,inWidth:T,outChannels:C,outHeight:E,outWidth:A,strideHeight:$,strideWidth:R}=f;p=f.dataFormat;const D=I-1-f.padInfo.top,F=S-1-f.padInfo.left,_="channelsLast"===p,M=m.strides[0],z=_?m.strides[1]:m.strides[2],L=_?m.strides[2]:1,P=_?1:m.strides[1],B=h[0],V=_?h[1]:h[2],W=_?h[2]:1,U=_?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<j;++t)for(let n=0;n<N;++n){const r=n-D,a=Math.max(0,Math.ceil(r/$)),s=Math.min(E,(I+r)/$);for(let i=0;i<T;++i){const o=i-F,u=Math.max(0,Math.ceil(o/R)),c=Math.min(A,(S+o)/R);let l=0;for(let n=a;n<s;++n){const a=n*$-r;for(let r=u;r<c;++r){const s=B*e+V*n+W*r,i=v*(I-1-a)+w*(S-1-(r*R-o))+O*t;for(let e=0;e<C;++e){l+=y[s+U*e]*x[i+e]}}}b[M*e+z*n+L*i+P*t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Vi={kernelName:vn.K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;g([a,s],"conv3d");const c=vn.Vd.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:b}=c,y=b.front,x=b.left,v=b.top,w=new vn.td(c.outShape,a.dtype),O=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,S=vn.si.computeStrides(a.shape),j=vn.si.computeStrides(s.shape);for(let e=0;e<c.batchSize;++e){const t=e*S[0],n=e*w.strides[0];for(let e=0;e<c.outDepth;++e){const r=n+e*w.strides[1],a=e*c.strideDepth-y;for(let e=0;e<l;++e){const n=a+e*p;if(n<0||n>=c.inDepth)continue;const s=e*j[0],i=t+n*S[1];for(let e=0;e<c.outHeight;++e){const t=r+e*w.strides[2],n=e*c.strideHeight-v;for(let e=0;e<d;++e){const r=n+e*f;if(r<0||r>=c.inHeight)continue;const a=s+e*j[1],o=i+r*S[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-x;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=c.inWidth)continue;const s=o+t*c.inChannels;let i=a+e*j[2];for(let e=0;e<c.inChannels;++e){const t=O[s+e];for(let e=0;e<c.outChannels;++e)I[n+e]+=t*k[i+e];i+=c.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Wi={kernelName:vn.L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;g([a,s],"conv3dBackpropFilterV2");const c=vn.si.computeStrides(a.shape),l=vn.si.computeStrides(s.shape),d=vn.Vd.computeConv3DInfo(a.shape,u,i,1,o),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,b=d.filterHeight,y=d.filterWidth,x=new vn.td(d.filterShape,"float32"),v=x.values,[w,O,k,I]=x.strides,S=n.data.get(s.dataId).values,[j,N,T,C]=l,E=n.data.get(a.dataId).values,[A,$,R,D]=c,F=d.padInfo.front,_=d.padInfo.left,M=d.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((F-e)/h)),n=Math.min(d.outDepth,(d.inDepth+F-e)/h),r=e*w;for(let a=0;a<b;++a){const s=Math.max(0,Math.ceil((M-a)/p)),i=Math.min(d.outHeight,(d.inHeight+M-a)/p),o=a*O+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((_-r)/f)),c=Math.min(d.outWidth,(d.inWidth+_-r)/f),l=r*k+o;for(let o=0;o<d.inChannels;++o){const m=o*I+l;for(let l=0;l<d.outChannels;++l){let b=0;for(let m=0;m<d.batchSize;++m){const d=m*A,g=m*j;for(let m=t;m<n;++m){const t=(e+m*h-F)*$+d,n=m*N+g;for(let e=s;e<i;++e){const s=(a+e*p-M)*R+t,i=e*T+n;for(let e=u;e<c;++e){b+=E[(r+e*f-_)*D+s+o]*S[e*C+i+l]}}}}v[m+l]=b}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Ui={kernelName:vn.M,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;g([a],"conv3dBackpropInputV2");const c=vn.si.computeStrides(a.shape),l=vn.si.computeStrides(s.shape),d=vn.Vd.computeConv3DInfo(u,s.shape,o,1,i),h=new vn.td(d.inShape,"float32"),p=h.values,[f,m,b,y]=h.strides,x=n.data.get(a.dataId).values,[v,w,O,k]=c,I=n.data.get(s.dataId).values,[S,j,N,T]=l,{batchSize:C,filterDepth:E,filterHeight:A,filterWidth:$,inChannels:R,inDepth:D,inHeight:F,inWidth:_,outChannels:M,outDepth:z,outHeight:L,outWidth:P,strideDepth:B,strideHeight:V,strideWidth:W}=d,U=E-1-d.padInfo.front,G=A-1-d.padInfo.top,q=$-1-d.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let n=0;n<D;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(z,(E+r)/B);for(let i=0;i<F;++i){const o=i-G,u=Math.max(0,Math.ceil(o/V)),c=Math.min(L,(A+o)/V);for(let l=0;l<_;++l){const d=l-q,h=Math.max(0,Math.ceil(d/W)),g=Math.min(P,($+d)/W);let C=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<c;++r){const s=r*V-o;for(let i=h;i<g;++i){const o=v*e+w*n+O*r+k*i,u=S*(E-1-a)+j*(A-1-s)+N*($-1-(i*W-d))+T*t;for(let e=0;e<M;++e){C+=x[o+e]*I[u+e]}}}}p[f*e+m*n+b*i+y*l+t]=C}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},Gi=y(vn.N,(e=>Math.cos(e))),qi={kernelName:vn.N,backendName:"cpu",kernelFunc:Gi},Hi=y(vn.O,(e=>Math.cosh(e))),Yi={kernelName:vn.O,backendName:"cpu",kernelFunc:Hi},Ki={kernelName:vn.P,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,[l,d,h,p]=a.shape,f=s.shape[0],[m,b]=o,g=Object(vn.ie)([f,m,b,p],"float32"),y=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=vn.si.computeStrides(a.shape),O=vn.si.computeStrides(g.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],a=y[t+2],s=y[t+3],i=x[e];if(i>=l)continue;const o=m>1?(a-n)*(d-1)/(m-1):0,f=b>1?(s-r)*(h-1)/(b-1):0;for(let t=0;t<m;t++){const l=m>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(l<0||l>d-1)for(let n=0;n<b;n++)for(let r=0;r<p;r++){g.values[r+n*O[2]+t*O[1]+e*O[0]]=c}else if("bilinear"===u){const n=Math.floor(l),a=Math.ceil(l),o=l-n;for(let u=0;u<b;u++){const l=b>1?r*(h-1)+u*f:.5*(r+s)*(h-1);if(l<0||l>h-1){for(let n=0;n<p;n++){g.values[n+u*O[2]+t*O[1]+e*O[0]]=c}continue}const d=Math.floor(l),m=Math.ceil(l),y=l-d;for(let r=0;r<p;r++){let s=r+d*w[2]+n*w[1]+i*w[0];const c=v[s];s=r+m*w[2]+n*w[1]+i*w[0];const l=v[s];s=r+d*w[2]+a*w[1]+i*w[0];const h=v[s];s=r+m*w[2]+a*w[1]+i*w[0];const p=v[s],f=c+(l-c)*y;s=r+u*O[2]+t*O[1]+e*O[0],g.values[s]=f+(h+(p-h)*y-f)*o}}}else for(let n=0;n<b;++n){const a=b>1?r*(h-1)+n*f:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<p;r++){g.values[r+n*O[2]+t*O[1]+e*O[0]]=c}continue}const o=Math.round(a),u=Math.round(l);for(let r=0;r<p;r++){g.values[r+n*O[2]+t*O[1]+e*O[0]]=v[r+o*w[2]+u*w[1]+i*w[0]]}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Xi={kernelName:vn.Q,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;g(a,"cumsum");const u=vn.Vd.getAxesPermutation([s],a.shape.length);let c=a;null!=u&&(c=_({inputs:{x:a},backend:n,attrs:{perm:u}}));const l=vn.Vd.getInnerMostAxes(1,a.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const d=Object(vn.ri)(c.dtype,"int32"),h=vn.si.makeZerosTypedArray(vn.si.sizeFromShape(c.shape),d),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=i?0:p[n];else{const r=m(e,t-1);h[n]=i?p[r]+h[r]:p[n]+h[r]}}const b=n.makeTensorInfo(c.shape,d,h);if(null!=u){const e=_({inputs:{x:b},backend:n,attrs:{perm:vn.Vd.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),e}return b}},Zi={kernelName:vn.S,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=V(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=W(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},Qi={kernelName:vn.T,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;vn.si.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=a.shape[0],u=a.shape[1],c=a.shape[2],l=a.shape[3],d=u*s,h=c*s,p=l/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*d*h*p);let b=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<h;++t){const a=Math.floor(t/s),i=(r*s+t%s)*p;for(let t=0;t<p;++t){m[b++]=f[t+i+l*(a+c*(n+u*e))]}}}return n.makeTensorInfo([o,d,h,p],a.dtype,m)}},Ji={kernelName:vn.U,backendName:"cpu",kernelFunc:Y},eo={kernelName:vn.V,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r;g([a,s],"depthwiseConv2dNativeBackpropFilter");const d=vn.Vd.computeConv2DInfo(a.shape,l,i,o,u,c,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,b=new vn.td(d.filterShape,"float32"),y=d.padInfo.left,x=d.padInfo.top,v=d.outChannels/d.inChannels,w=n.data.get(a.dataId).values,O=new vn.td(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new vn.td(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((x-e)/h)),n=Math.min(d.outHeight,(d.inHeight+x-e)/h);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/p)),s=Math.min(d.outWidth,(d.inWidth+y-r)/p);for(let i=0;i<d.outChannels;++i){const o=Math.trunc(i/v),u=i%v;let c=0;for(let u=0;u<d.batchSize;++u)for(let l=t;l<n;++l){const t=e+l*h-x;for(let e=a;e<s;++e){c+=O.get(u,t,r+e*p-y,o)*I.get(u,l,e,i)}}b.set(c,e,r,o,u)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},to={kernelName:vn.W,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r;g([a,s],"depthwiseConv2DNativeBackpropInput");const d=vn.si.computeStrides(a.shape),h=vn.si.computeStrides(s.shape),p=vn.Vd.computeConv2DInfo(l,s.shape,i,o,u,c,!0),f=new vn.td(p.inShape,"float32"),m=f.values,[b,y,x]=f.strides,v=n.data.get(a.dataId).values,[w,O,k]=d,I=n.data.get(s.dataId).values,[S,j,N]=h,{batchSize:T,filterHeight:C,filterWidth:E,inChannels:A,inHeight:$,inWidth:R,outChannels:D,outHeight:F,outWidth:_,strideHeight:M,strideWidth:z}=p,L=C-1-p.padInfo.top,P=E-1-p.padInfo.left,B=D/A;for(let e=0;e<T;++e)for(let t=0;t<A;++t)for(let n=0;n<$;++n){const r=n-L,a=Math.max(0,Math.ceil(r/M)),s=Math.min(F,(C+r)/M);for(let i=0;i<R;++i){const o=i-P,u=Math.max(0,Math.ceil(o/z)),c=Math.min(_,(E+o)/z);let l=0;for(let n=a;n<s;++n){const a=n*M-r;for(let r=u;r<c;++r){const s=w*e+O*n+k*r,i=S*(C-1-a)+j*(E-1-(r*z-o))+N*t;for(let e=0;e<B;++e){l+=v[s+(t*B+e)]*I[i+e]}}}m[b*e+y*n+x*i+t]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},no={kernelName:vn.X,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=vn.si.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Object(vn.ie)([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},ro={kernelName:vn.Y,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,c=u.data.get(r.dataId).values,l=r.shape.length,d=u.data.get(a.dataId).values,h=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:O,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:j}=vn.Vd.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),N=vn.si.sizeFromShape(j),T=j.length,C=vn.si.getArrayFromDType(r.dtype,N);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*v-x.top;for(let s=0;s<y;++s){const i=s*w-x.left;for(let o=0;o<b;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<O;++t){const s=n+t*I;if(s>=0&&s<f)for(let n=0;n<k;++n){const p=i+n*S;if(p>=0&&p<m){const i=vn.si.locToIndex([e,s,p,o],l,vn.si.computeStrides(r.shape)),f=vn.si.locToIndex([t,n,o],h,vn.si.computeStrides(a.shape)),m=c[i]+d[f];m>u&&(u=m)}}}C[vn.si.locToIndex([e,t,s,o],T,vn.si.computeStrides(j))]=u}}}return{dataId:u.write(vn.si.toTypedArray(C,r.dtype),j,r.dtype),shape:j,dtype:r.dtype}}},ao={kernelName:vn.Z,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=vn.si.toNestedArray(r.shape,c.data.get(r.dataId).values),d=vn.si.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:b,outWidth:g,padInfo:y,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:O,dilationHeight:k,dilationWidth:I,outShape:S}=vn.Vd.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);vn.si.assert(s.rank===S.length,(()=>`Error in ${vn.Z}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const j=vn.si.toNestedArray(S,c.data.get(s.dataId).values),N=vn.si.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<b;++t){const n=t*x-y.top;for(let r=0;r<g;++r){const a=r*v-y.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*k;if(r>=0&&r<p)for(let n=0;n<O;++n){const c=a+n*I;if(c>=0&&c<f){const a=l[e][r][c][s]+d[t][n][s];a>i&&(i=a,o=t,u=n)}}}N[o][u][s]+=j[e][t][r][s]}}}return{dataId:c.write(vn.si.toTypedArray(N,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},so={kernelName:vn.ab,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=vn.si.toNestedArray(r.shape,c.data.get(r.dataId).values),d=vn.si.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:b,outWidth:g,padInfo:y,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:O,dilationHeight:k,dilationWidth:I,outShape:S}=vn.Vd.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);vn.si.assert(s.rank===S.length,(()=>`Error in ${vn.ab}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const j=vn.si.toNestedArray(S,c.data.get(s.dataId).values),N=vn.si.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<b;++t){const n=t*x-y.top;for(let r=0;r<g;++r){const a=r*v-y.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*k;if(r>=0&&r<p)for(let n=0;n<O;++n){const c=a+n*I;if(c>=0&&c<f){const a=l[e][r][c][s]+d[t][n][s];a>i&&(i=a,o=r,u=c)}}}N[e][o][u][s]+=j[e][t][r][s]}}}return{dataId:c.write(vn.si.toTypedArray(N,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},io=O(((e,t)=>e*t)),oo=A(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),uo=E(vn.fc,io,oo),co={kernelName:vn.fc,backendName:"cpu",kernelFunc:uo},lo={kernelName:vn.pd,backendName:"cpu",kernelFunc:K},ho={kernelName:vn.cb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=vn.Vd.decodeEinsumEquation(a,s.length);vn.Vd.checkEinsumDimSizes(i.length,u,s);const{path:c,steps:l}=vn.Vd.getEinsumComputePath(o,u),d=l.length;let h=null,p=i.length;const f=[];for(let e=0;e<d;++e){for(const t of l[e]){const{permutationIndices:e,expandDims:r}=vn.Vd.getEinsumPermutation(p,u[t]);let a;vn.Vd.isIdentityPermutation(e)?a=s[t]:(a=_({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);vn.si.arraysEqual(a.shape,i)||(a=$({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===h?h=a:(h=uo({inputs:{a:a,b:h},backend:n}),f.push(h))}e<d-1&&(c[e]>=0&&(h=K({inputs:{x:h},backend:n,attrs:{axis:c[e]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},po={kernelName:vn.eb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;g([r,a],"eluGrad");const s=new Float32Array(vn.si.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},fo=O(((e,t)=>e===t?1:0)),mo=E(vn.gb,fo,null,"bool"),bo={kernelName:vn.gb,backendName:"cpu",kernelFunc:mo},go=vn.Vd.ERF_P,yo=vn.Vd.ERF_A1,xo=vn.Vd.ERF_A2,vo=vn.Vd.ERF_A3,wo=vn.Vd.ERF_A4,Oo=vn.Vd.ERF_A5,ko=y(vn.hb,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+go*n);return t*(1-((((Oo*r+wo)*r+vo)*r+xo)*r+yo)*r*Math.exp(-n*n))})),Io={kernelName:vn.hb,backendName:"cpu",kernelFunc:ko},So=I((e=>Math.exp(e))),jo=x(vn.ib,So,"float32"),No={kernelName:vn.ib,backendName:"cpu",kernelFunc:jo},To={kernelName:vn.jb,backendName:"cpu",kernelFunc:X},Co=I((e=>Math.expm1(e))),Eo=x(vn.kb,Co),Ao={kernelName:vn.kb,backendName:"cpu",kernelFunc:Eo},$o=O(((e,t)=>e/t)),Ro=E(vn.Ac,$o),Do={kernelName:vn.Ac,backendName:"cpu",kernelFunc:Ro},Fo=O(((e,t)=>e-t)),_o=A(((e,t,n,r)=>({real:e-n,imag:t-r}))),Mo=E(vn.od,Fo,_o),zo={kernelName:vn.od,backendName:"cpu",kernelFunc:Mo},Lo={kernelName:vn.lb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=vn.si.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Z(i,!1,n),u=$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Po={kernelName:vn.mb,backendName:"cpu",kernelFunc:ee},Bo={kernelName:vn.nb,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=vn.si.getTypedArrayFromDType(n.dtype,vn.si.sizeFromShape(n.shape)),[s,i,o,u]=n.shape,c=r.data.get(n.dataId).values;for(let e=0;e<s;e++){const t=e*o*i*u;for(let e=0;e<i;e++){const n=e*(o*u);for(let e=0;e<o;e++){const r=e*u;for(let s=0;s<u;s++){const i=Math.round(o-e-1),l=t+n+r+s;let d=c[l];if(i>=0&&i<o){d=c[t+n+i*u+s]}a[l]=d}}}}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Vo=I((e=>Math.floor(e))),Wo=x(vn.ob,Vo),Uo={kernelName:vn.ob,backendName:"cpu",kernelFunc:Wo},Go=O(((e,t)=>Math.floor(e/t))),qo=E(vn.pb,Go,null,"int32"),Ho={kernelName:vn.pb,backendName:"cpu",kernelFunc:qo},Yo={kernelName:vn.sb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=H({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=Ks({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=S(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Ko={kernelName:vn.tb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Y({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=Ks({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=S(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Xo={kernelName:vn.ub,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=vn.si.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,c,l,d]=vn.Vd.prepareAndValidate(r,a);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const h=te(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,c,o,l,d,r.shape,s);return n.makeTensorInfo(u,r.dtype,h.values)}},Zo={kernelName:vn.vb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;g([a,s],"gatherV2");const u=vn.si.parseAxisParam(i,a.shape)[0],c=n.data.get(s.dataId).values,l=a.shape[u];for(let e=0;e<c.length;++e){const t=c[e];vn.si.assert(t<=l-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${l-1}]`))}let d=o;null==o&&(d=0);const h=vn.si.sizeFromShape(s.shape),p=vn.Vd.segment_util.collectGatherOpShapeInfo(a,s,u,d),f=$({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=$({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),b=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=n.bufferSync(m),x=ne(n.bufferSync(f),y,b);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,x.dtype,x.values)}},Qo=O(((e,t)=>e>t?1:0)),Jo=E(vn.wb,Qo,null,"bool"),eu={kernelName:vn.wb,backendName:"cpu",kernelFunc:Jo},tu=O(((e,t)=>e>=t?1:0)),nu=E(vn.xb,tu,null,"bool"),ru={kernelName:vn.xb,backendName:"cpu",kernelFunc:nu},au={kernelName:vn.yb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=vn.si.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Z(i,!0,n),u=$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},su=y(vn.Bb,(e=>Number.isFinite(e)?1:0),"bool"),iu={kernelName:vn.Bb,backendName:"cpu",kernelFunc:su},ou=y(vn.Cb,(e=>Math.abs(e)===1/0?1:0),"bool"),uu={kernelName:vn.Cb,backendName:"cpu",kernelFunc:ou},cu=y(vn.Db,(e=>Number.isNaN(e)?1:0),"bool"),lu={kernelName:vn.Db,backendName:"cpu",kernelFunc:cu},du=O(((e,t)=>e<t?1:0)),hu=E(vn.Ib,du,null,"bool"),pu={kernelName:vn.Ib,backendName:"cpu",kernelFunc:hu},fu=O(((e,t)=>e<=t?1:0)),mu=E(vn.Jb,fu,null,"bool"),bu={kernelName:vn.Jb,backendName:"cpu",kernelFunc:mu},gu={kernelName:vn.Kb,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=re(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},yu=I((e=>Math.log(e))),xu=x(vn.Lb,yu),vu={kernelName:vn.Lb,backendName:"cpu",kernelFunc:xu},wu=y(vn.Mb,(e=>Math.log1p(e))),Ou={kernelName:vn.Mb,backendName:"cpu",kernelFunc:wu},ku=O(((e,t)=>e&&t)),Iu=E(vn.Ob,ku,null,"bool"),Su={kernelName:vn.Ob,backendName:"cpu",kernelFunc:Iu},ju=y(vn.Pb,(e=>e?0:1),"bool"),Nu={kernelName:vn.Pb,backendName:"cpu",kernelFunc:ju},Tu=O(((e,t)=>e||t)),Cu=E(vn.Qb,Tu,null,"bool"),Eu={kernelName:vn.Qb,backendName:"cpu",kernelFunc:Cu},Au={kernelName:vn.Fb,backendName:"cpu",kernelFunc:function(e){function t(e){const t=e%l;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,d);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}const{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{depthRadius:i,bias:o,alpha:u,beta:c}=a;g(s,"LRN");const l=s.shape[3],d=l-1,h=r.data.get(s.dataId).values,p=vn.si.sizeFromShape(s.shape),f=new Float32Array(p);for(let e=0;e<p;e++){const n=t(e),r=h[e]*Math.pow(o+u*n,-c);f[e]=r}return r.makeTensorInfo(s.shape,s.dtype,f)}},$u={kernelName:vn.Gb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r;g(i,"LRNGrad");const d=vn.si.sizeFromShape(i.shape),h=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,b=new Float32Array(d),y=d;for(let e=0;e<y;e++){const t=e%h,n=e-t+Math.max(0,t-o),r=e-t+Math.min(h,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=c*a+u;for(let t=n;t<r;t++){let n=-2*c*l*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-l)),n*=p[e],b[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,b)}},Ru={kernelName:vn.Rb,backendName:"cpu",kernelFunc:se},Du=O(((e,t)=>Math.max(e,t))),Fu=E(vn.Xb,Du),_u={kernelName:vn.Xb,backendName:"cpu",kernelFunc:Fu},Mu={kernelName:vn.Sb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;g(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;vn.si.assert(vn.Vd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=vn.Vd.computePool2DInfo(a.shape,s,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&vn.si.arraysEqual(c.inShape,c.outShape))l=v({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=vn.si.computeStrides(a.shape),r=M(e,0,a.dtype,t,c,"max");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}},zu={kernelName:vn.Tb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;g(a,"maxPool3d");const l=vn.Vd.computePool3DInfo(a.shape,s,i,1,o,u,c),d=L(n.data.get(a.dataId).values,0,a.dtype,vn.si.computeStrides(a.shape),l,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}},Lu={kernelName:vn.Ub,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;g([a,s],"maxPool3DGrad");const l=vn.Vd.computePool3DInfo(s.shape,i,o,1,u,c),d=function(e,t){const n=Object(vn.ie)(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let b=0;b<t.inChannels;++b)for(let g=0;g<t.outDepth;++g){const y=g*r-h;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,c+y);for(let r=0;r<t.outHeight;++r){const c=r*a-p;let h=c;for(;h<0;)h+=o;const w=Math.min(t.inHeight,l+c);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let O=p;for(;O<0;)O+=u;const k=Math.min(t.inWidth,d+p);let I=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let r=h;r<w;r+=o){const a=r-c;for(let s=O;s<k;s+=u){const i=s-p,o=e.get(m,t,r,s,b);o>=I&&(I=o,S=n*l*d+a*l+i)}}}n.set(S,m,g,r,a,b)}}}return n}(n.bufferSync(s),l),h=l.strideDepth,p=l.strideHeight,f=l.strideWidth,m=l.dilationDepth,b=l.dilationHeight,y=l.dilationWidth,x=l.effectiveFilterDepth,v=l.effectiveFilterHeight,w=l.effectiveFilterWidth,O=x-1-l.padInfo.front,k=w-1-l.padInfo.left,I=v-1-l.padInfo.top,S=Object(vn.ie)(s.shape,"float32"),j=n.bufferSync(a);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inDepth;++n)for(let r=0;r<l.inHeight;++r)for(let a=0;a<l.inWidth;++a){const s=n-O,i=r-I,o=a-k;let u=0;for(let n=0;n<x;n+=m){const r=(s+n)/h;if(!(r<0||r>=l.outDepth||Math.floor(r)!==r))for(let a=0;a<v;a+=b){const s=(i+a)/p;if(!(s<0||s>=l.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=y){const c=(o+i)/f;if(c<0||c>=l.outWidth||Math.floor(c)!==c)continue;const h=x*v*w-1-d.get(e,r,s,c,t)===n*v*w+a*w+i?1:0;if(0===h)continue;u+=j.get(e,r,s,c,t)*h}}}S.set(u,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},Pu={kernelName:vn.Vb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;g([s,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=vn.Vd.computePool2DInfo(o.shape,u,c,1,l,d),p=n.data.get(o.dataId).values,f=Object(vn.ie)(h.outShape,o.dtype,z(p,o.shape,o.dtype,h).values),m=h.strideHeight,b=h.strideWidth,y=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,O=w-1-h.padInfo.left,k=v-1-h.padInfo.top,I=Object(vn.ie)(o.shape,"float32"),S=n.data.get(a.dataId).values,j=Object(vn.ie)(a.shape,"float32",S);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-k,s=r-O;let i=0;for(let n=0;n<v;n+=y){const r=(a+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=x){const o=(s+a)/b;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const u=v*w-1-f.get(e,r,o,t)===n*w+a?1:0;if(0===u)continue;i+=j.get(e,r,o,t)*u}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},Bu={kernelName:vn.Wb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;g(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=vn.Vd.computePool2DInfo(r.shape,a,s,[1,1],i),[d,h]=function(e,t,n,r,a){const s=M(e,0,n,vn.si.computeStrides(t),a,"max"),i=z(e,t,n,a,!0,r);return[s.values,i.values]}(c,r.shape,r.dtype,o,l),p=u.write(d,l.outShape,r.dtype),f=u.write(h,l.outShape,r.dtype);return[{dataId:p,shape:l.outShape,dtype:r.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}},Vu={kernelName:vn.Yb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=vn.si.parseAxisParam(s,a.shape),u=vn.Vd.computeOutAndReduceShapes(a.shape,o),c=vn.si.sizeFromShape(u[1]),l=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(d);const h=C({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(h);const p=Ro({inputs:{a:h,b:d},backend:n});l.push(p);const f=K({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},Wu={kernelName:vn.Zb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;g(a,"min");const o=vn.si.parseAxisParam(s,a.shape);let u=o;const c=vn.Vd.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=_({inputs:{x:a},backend:n,attrs:{perm:c}}),u=vn.Vd.getInnerMostAxes(u.length,a.shape.length)),vn.Vd.assertAxesAreInnerMostDims("min",u,l.shape.length);const[d,h]=vn.Vd.computeOutAndReduceShapes(l.shape,u),p=vn.si.sizeFromShape(h),f=vn.si.makeZerosTypedArray(vn.si.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const b=n.makeTensorInfo(d,l.dtype,f);if(i){const e=$({inputs:{x:b},backend:n,attrs:{shape:vn.Vd.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},Uu=O(((e,t)=>Math.min(e,t))),Gu=E(vn.ac,Uu),qu={kernelName:vn.ac,backendName:"cpu",kernelFunc:Gu},Hu={kernelName:vn.bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;g(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),c=s.map(((e,t)=>e[0]+a.shape[t])),l="reflect"===i?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,p=vn.si.computeStrides(a.shape),f=vn.si.sizeFromShape(o),m=o.length,b=vn.si.computeStrides(o),y=vn.si.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=vn.si.indexToLoc(e,m,b);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-l:t[e]>=c[e]&&(t[e]=2*(c[e]-1)-t[e]+l);t=t.map(((e,t)=>e-u[t]));const n=vn.si.locToIndex(t,h,p);y[e]=d[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},Yu=O(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Ku=E(vn.cc,Yu),Xu={kernelName:vn.cc,backendName:"cpu",kernelFunc:Ku};var Zu=n("ljux");const Qu={kernelName:vn.Xc,backendName:"cpu",kernelFunc:ie},Ju={kernelName:vn.ec,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;g(a,"multinomial");const u=o?a:ie({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],d=n.data.get(u.dataId).values,h=[c,s],p=vn.si.makeZerosTypedArray(vn.si.sizeFromShape(h),"int32");for(let e=0;e<c;++e){const t=e*l,n=new Float32Array(l-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];const r=Zu.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",p)}},ec={kernelName:vn.gc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;g(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=oe(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},tc=vn.Hf.nonMaxSuppressionV3Impl,nc={kernelName:vn.hc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;g(a,"NonMaxSuppression");const c=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=tc(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},rc=vn.Hf.nonMaxSuppressionV4Impl,ac={kernelName:vn.ic,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r;g(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=rc(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},sc=vn.Hf.nonMaxSuppressionV5Impl,ic={kernelName:vn.jc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r;g(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=c,{selectedIndices:b,selectedScores:y}=sc(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},oc=O(((e,t)=>e!==t?1:0)),uc=E(vn.kc,oc,null,"bool"),cc={kernelName:vn.kc,backendName:"cpu",kernelFunc:uc},lc={kernelName:vn.mc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;g(a,"oneHot");const u=vn.si.sizeFromShape(a.shape),c=new Float32Array(u*s);c.fill(o);const l=n.data.get(a.dataId).values;for(let e=0;e<u;++e)l[e]>=0&&l[e]<s&&(c[e*s+l[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",c)}},dc={kernelName:vn.Cd,backendName:"cpu",kernelFunc:ue},hc={kernelName:vn.nc,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=T({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=G({inputs:{input:a},backend:r}),i=ue({inputs:{x:s},backend:r}),o=j({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return ee({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}},pc={kernelName:vn.qc,backendName:"cpu",kernelFunc:ce},fc={kernelName:vn.rc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;g(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),c=n.data.get(a.dataId).values,l=vn.si.sizeFromShape(a.shape),d=a.shape.length,h=vn.si.computeStrides(a.shape),p=vn.si.sizeFromShape(o),f=o.length,m=vn.si.computeStrides(o),b=vn.si.getTypedArrayFromDType(a.dtype,p);0!==i&&b.fill(i);for(let e=0;e<l;e++){const t=vn.si.indexToLoc(e,d,h).map(((e,t)=>e+u[t]));b[vn.si.locToIndex(t,f,m)]=c[e]}return{dataId:n.write(b,o,a.dtype),shape:o,dtype:a.dtype}}},mc=O(((e,t)=>Math.pow(e,t))),bc=E(vn.tc,mc),gc={kernelName:vn.tc,backendName:"cpu",kernelFunc:bc},yc={kernelName:vn.vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;g(a,"prod");const o=a.shape.length,u=vn.si.parseAxisParam(s,a.shape),c=vn.Vd.getAxesPermutation(u,o);let l=u,d=a;const h=[];null!=c&&(d=_({inputs:{x:a},backend:n,attrs:{perm:c}}),h.push(d),l=vn.Vd.getInnerMostAxes(l.length,o));const p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:b}=le(d.shape,d.dtype,p,l);let y=m;return i&&(y=vn.Vd.expandShapeToKeepDim(m,u)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,b,f)}},xc={kernelName:vn.xc,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=de(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},vc=y(vn.Bc,(e=>1/e)),wc={kernelName:vn.Bc,backendName:"cpu",kernelFunc:vc},Oc={kernelName:vn.Gc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;g(a,"resizeBilinear");const u=vn.si.computeStrides(a.shape),[c,l]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,b=new Float32Array(vn.si.sizeFromShape([d,c,l,f])),y=[s&&c>1?h-1:h,s&&l>1?p-1:p],x=[s&&c>1?c-1:c,s&&l>1?l-1:l];let v=0;const w=y[0]/x[0],O=y[1]/x[1];for(let e=0;e<d;e++)for(let t=0;t<c;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(h-1,Math.ceil(n)),o=e*u[0]+r*u[1],c=e*u[0]+s*u[1];for(let e=0;e<l;e++){let t;t=i?O*(e+.5)-.5:O*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),l=o+n*u[2],d=c+n*u[2],h=o+s*u[2],g=c+s*u[2];for(let e=0;e<f;e++){const t=m[l+e],n=m[d+e],s=t+(m[h+e]-t)*r;b[v++]=s+(n+(m[g+e]-n)*r-s)*a}}}return n.makeTensorInfo([d,c,l,f],"float32",b)}},kc={kernelName:vn.Hc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;g([s,a],"resizeBilinearGrad");const o=vn.si.computeStrides(a.shape),[u,c,l,d]=a.shape,[,h,p]=s.shape,f=new Float32Array(u*c*l*d),m=[i&&h>1?c-1:c,i&&p>1?l-1:l],b=[i&&h>1?h-1:h,i&&p>1?p-1:p],y=m[0]/b[0],x=m[1]/b[1],v=n.data.get(s.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<h;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),c-1),s=t+r*o[1],i=t+a*o[1],u=n-r,h=1-u;for(let e=0;e<p;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),l-1),a=t-n,c=1-a,p=s+n*o[2],m=s+r*o[2],b=i+n*o[2],g=i+r*o[2],y=h*c,O=h*a,k=u*c,I=u*a;for(let e=0;e<d;e++){const t=v[w++];f[p+e]+=t*y,f[m+e]+=t*O,f[b+e]+=t*k,f[g+e]+=t*I}}}}return n.makeTensorInfo([u,l,c,d],"float32",f)}},Ic={kernelName:vn.Ic,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;g(a,"resizeNearestNeighbor");const u=vn.si.computeStrides(a.shape),[c,l]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,b=new Float32Array(d*c*l*f),y=[s&&c>1?h-1:h,s&&l>1?p-1:p],x=[s&&c>1?c-1:c,s&&l>1?l-1:l],v=y[0]/x[0],w=y[1]/x[1];let O=0;for(let e=0;e<d;e++){const t=e*u[0];for(let e=0;e<c;e++){const n=i?v*(e+.5):v*e;let r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<l;e++){const t=i?w*(e+.5):w*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){b[O++]=m[r+e]}}}}return n.makeTensorInfo([d,c,l,f],a.dtype,b)}},Sc={kernelName:vn.Jc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;g([s,a],"resizeNearestNeighborGrad");const o=vn.si.computeStrides(a.shape),u=vn.si.computeStrides(s.shape),[c,l,d,h]=a.shape,[,p,f]=s.shape,m=new Float32Array(c*l*d*h),b=n.data.get(s.dataId).values,y=[i&&p>1?l-1:l,i&&f>1?d-1:d],x=[i&&p>1?p-1:p,i&&f>1?f-1:f],v=y[0]/x[0],w=y[1]/x[1],O=1/v,k=1/w,I=2*Math.ceil(O)+2,S=2*Math.ceil(k)+2;for(let e=0;e<c;e++){const t=e*o[0];for(let e=0;e<l;e++){const n=t+e*o[1],r=Math.floor(e*O),a=Math.floor(r-I/2);for(let r=0;r<d;r++){const s=n+r*o[2],c=Math.floor(r*k),g=Math.floor(c-S/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<I;s++){const c=s+a;if(c<0||c>=p)continue;const h=t+c*u[1],m=c*v;if(e===Math.min(l-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+g;if(t<0||t>=f)continue;const a=h+t*u[2],s=t*w;r===Math.min(d-1,i?Math.round(s):Math.floor(s))&&(o+=b[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},jc={kernelName:vn.Kc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;g(a,"reverse");const i=a.shape.length,o=vn.si.parseAxisParam(s,a.shape);if(0===i)return v({inputs:{x:a},backend:n});const u=new vn.td(a.shape,a.dtype),c=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(c.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Nc={kernelName:vn.Lc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=vn.si.getTypedArrayFromDType(r.dtype,vn.si.sizeFromShape(r.shape)),[c,l,d,h]=r.shape,[p,f]=vn.Vd.getImageCenter(i,l,d),m=Math.sin(a),b=Math.cos(a),g=o.data.get(r.dataId).values;for(let e=0;e<c;e++){const t=e*d*l*h;for(let e=0;e<l;e++){const n=e*(d*h);for(let r=0;r<d;r++){const a=r*h;for(let i=0;i<h;i++){const o=[c,e,r,i],y=o[2],x=o[1];let v=(y-p)*b-(x-f)*m,w=(y-p)*m+(x-f)*b;v=Math.round(v+p),w=Math.round(w+f);let O=s;if("number"!=typeof s&&(O=3===i?255:s[i]),v>=0&&v<d&&w>=0&&w<l){O=g[t+w*(d*h)+v*h+i]}u[t+n+a+i]=O}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Tc=y(vn.Mc,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Cc={kernelName:vn.Mc,backendName:"cpu",kernelFunc:Tc},Ec=I((e=>1/Math.sqrt(e))),Ac=x(vn.Nc,Ec),$c={kernelName:vn.Nc,backendName:"cpu",kernelFunc:Ac},Rc={kernelName:vn.Pc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=vn.Vd.calculateShapes(s,a,i),h=he(n.bufferSync(a),n.bufferSync(s),i,d,c,u,o,l,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}},Dc={kernelName:vn.Qc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;g([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=Object(vn.ri)(a.dtype,s.dtype),d=vn.si.makeZerosTypedArray(vn.si.sizeFromShape(a.shape),l);let h=0;const p=0===i||i>1||1===a.shape.length?1:vn.si.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)d[h++]=1===o[e]?u[e]:c[e];return n.makeTensorInfo(a.shape,l,d)}},Fc=vn.Vd.SELU_SCALEALPHA,_c=vn.Vd.SELU_SCALE,Mc=y(vn.Rc,(e=>e>=0?_c*e:Fc*(Math.exp(e)-1))),zc={kernelName:vn.Rc,backendName:"cpu",kernelFunc:Mc},Lc=y(vn.Tc,(e=>e<0?-1:e>0?1:0)),Pc={kernelName:vn.Tc,backendName:"cpu",kernelFunc:Lc},Bc=y(vn.Uc,(e=>Math.sin(e))),Vc={kernelName:vn.Uc,backendName:"cpu",kernelFunc:Bc},Wc=y(vn.Vc,(e=>Math.sinh(e))),Uc={kernelName:vn.Vc,backendName:"cpu",kernelFunc:Wc},Gc=Math.log(1.1920928955078125e-7)+2,qc=y(vn.Yc,(e=>{const t=e>-Gc,n=e<Gc,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),Hc={kernelName:vn.Yc,backendName:"cpu",kernelFunc:qc},Yc={kernelName:vn.Zc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;g([a],"spaceToBatchND");const o=vn.si.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const c=fc.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),l=vn.Vd.getReshaped(c.shape,s,o,!1),d=vn.Vd.getPermuted(l.length,s.length,!1),h=vn.Vd.getReshapedPermuted(c.shape,s,o,!1),p=$({inputs:{x:c},backend:n,attrs:{shape:l}}),f=_({inputs:{x:p},backend:n,attrs:{perm:d}}),m=$({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},Kc={kernelName:vn.ad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[d,h,p,f,m]=pe(o,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},Xc={kernelName:vn.bd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[c,l,d]=fe(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},Zc={kernelName:vn.cd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[c,l]=me(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(l,r.dtype,c)}},Qc={kernelName:vn.dd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[c,l]=me(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(l,r.dtype,c)}},Jc={kernelName:vn.ed,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=vn.Vd.calculateShapes(s,a,o),p=he(n.bufferSync(a),n.bufferSync(s),o,h,l,c,u,d,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},el={kernelName:vn.fd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=vn.si.parseAxisParam(i,a.shape)[0],u=vn.Vd.prepareSplitSize(a,s,o),c=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map((e=>{const t=[...l];t[o]=e;const r=B({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},tl=I((e=>Math.sqrt(e))),nl=y(vn.gd,(e=>Math.sqrt(e))),rl={kernelName:vn.gd,backendName:"cpu",kernelFunc:nl},al={kernelName:vn.hd,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;g(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},sl=O(((e,t)=>{const n=e-t;return n*n})),il=E(vn.id,sl),ol={kernelName:vn.id,backendName:"cpu",kernelFunc:il},ul=y(vn.jd,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),cl={kernelName:vn.jd,backendName:"cpu",kernelFunc:ul},ll={kernelName:vn.kd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r;g(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:b,isSimpleSlice:y,begin:x,end:v,strides:w}=vn.Bh.sliceInfo(a.shape,s,i,o,u,c,l,d,h);let O;if(m)O=$({inputs:{x:a},backend:n,attrs:{shape:f}});else if(b||y){vn.si.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=vn.Bh.computeOutShape(x,v,w),t=B({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});O=$({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=be(p,n.bufferSync(a),w,x);O=n.makeTensorInfo(f,e.dtype,e.values)}return O}};class dl{constructor(e,t,n,r,a,s){this.separator=vn.si.encodeString(e),this.nGramWidths=t,this.leftPad=vn.si.encodeString(n),this.rightPad=vn.si.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),c=Math.max(0,o-(a-(i+1))),l=s-(u+c),d=t+(u>0?0:i-o);let h=0;h+=u*this.leftPad.length;for(let t=0;t<l;++t)h+=e[d+t].length;h+=c*this.rightPad.length;h+=(u+c+l-1)*this.separator.length,n[r+i]=new Uint8Array(h);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[d+t]),m(this.separator);if(l>0){m(e[d+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=vn.si.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const o=this.getNumNGrams(t[n+1]-t[n],s);this.createNGrams(e,r,i,a,o,s),a+=o})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;this.createNGrams(e,r,i,a,1,s+2*this.padWidth)}}return[i,s]}}const hl={kernelName:vn.ld,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,h=n.data.get(l.dataId).values,p=n.data.get(d.dataId).values,[f,m]=ge(h,p,a,s,i,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},pl={kernelName:vn.md,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[c,l,d]=xe(o,u,a),h=l.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},fl={kernelName:vn.nd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=ve(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},ml=y(vn.qd,(e=>Math.tan(e))),bl={kernelName:vn.qd,backendName:"cpu",kernelFunc:ml},gl=y(vn.rd,(e=>Math.tanh(e))),yl=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n},xl={kernelName:vn.wd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=n,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=[l,f,m,p],g=vn.si.computeStrides(a.shape),y=g[0],x=g[1],v=g[2],w=vn.si.getTypedArrayFromDType(a.dtype,vn.si.sizeFromShape(b));w.fill(u);const O=r.data.get(a.dataId).values,k=r.data.get(s.dataId).values;for(let e=0;e<l;++e){const t=1===s.shape[0]?k:k.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let s;const c=t[6]*r+t[7]*n+1;if(0===c)continue;const l=(t[3]*r+t[4]*n+t[5])/c,p=Ie((t[0]*r+t[1]*n+t[2])/c,h,o),f=Ie(l,d,o);switch(i){case"nearest":s=je(O,d,h,y,x,v,e,f,p,a,u);break;case"bilinear":s=Ne(O,d,h,y,x,v,e,f,p,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*y+n*x+r*v+a]=s}return r.makeTensorInfo(b,a.dtype,w)}return{dataId:r.write(w,b,a.dtype),shape:a.shape,dtype:a.dtype}}},vl=[Js,ei,ni,ai,Xs,si,oi,ui,ci,li,hi,fi,bi,xi,wi,Oi,ki,Ii,Si,Qs,ji,Ti,Ci,Ei,qs,Ri,Fi,Us,_i,zi,Li,Pi,Bi,Vi,Wi,Ui,qi,Yi,Ki,Xi,Zi,Qi,Ji,eo,to,no,ro,ao,so,ho,$s,po,bo,Io,No,To,Ao,Lo,Po,Bo,Uo,Ho,Yo,Ko,Xo,Zo,eu,ru,Rs,au,Mi,iu,uu,lu,Ds,pu,bu,gu,vu,Ou,Su,Nu,Eu,Au,$u,Ru,_u,Mu,zu,Lu,Pu,Bu,Vu,Wu,qu,Hu,Xu,Ju,co,ec,nc,ac,ic,cc,lc,hc,pc,fc,gc,_s,yc,xc,Gs,Do,wc,zs,Ps,Zs,Oc,kc,Ic,Sc,jc,Nc,Cc,$c,Rc,Dc,zc,Ws,Pc,Vc,Uc,Ni,Qu,Hc,Yc,Kc,Xc,Zc,Qc,Jc,el,rl,al,ol,cl,ll,hl,pl,fl,zo,lo,bl,{kernelName:vn.rd,backendName:"cpu",kernelFunc:gl},{kernelName:vn.ud,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;g(a,"tile");const i=we(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:vn.vd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;g(a,"topk");const o=n.data.get(a.dataId).values,[u,c]=ke(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}},xl,ii,{kernelName:vn.yd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;g(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:c}=Te(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},{kernelName:vn.zd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==s&&(u[c++]=a.shape[e]);const l=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let e=0;e<h.length;e++){l[s]=e;const t=B({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[e]=$({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}},{kernelName:vn.Ad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;g(a,"unsortedSegmentSum");const o=[],u=[],c=a.shape.length-s.shape.length;let l=s;for(let e=0;e<c;++e){const t=X({inputs:{input:l},backend:n,attrs:{dim:e+1}});l=t,u.push(t)}for(let e=0;e<i;++e){const t=vn.si.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=mo({inputs:{a:r,b:l},backend:n}),i=C({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),c=uo({inputs:{a:i,b:a},backend:n}),d=K({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});o.push(d),u.push(r),u.push(s),u.push(i),u.push(c),u.push(d)}const d=ce({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},dc];for(const e of vl)Object(vn.Vg)(e);const wl={},Ol={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};var kl,Il,Sl;!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(kl||(kl={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Il||(Il={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Sl||(Sl={}));const jl=/ERROR: [0-9]+:([0-9]+):/g;let Nl,Tl;const Cl=Object(vn.Ye)();Cl.registerFlag("HAS_WEBGL",(()=>Cl.getNumber("WEBGL_VERSION")>0)),Cl.registerFlag("WEBGL_VERSION",(()=>Qe(2)?2:Qe(1)?1:0)),Cl.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Cl.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Cl.get("WEBGL_VERSION"))),Cl.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Cl.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Cl.registerFlag("WEBGL_PACK",(()=>Cl.getBool("HAS_WEBGL"))),Cl.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Cl.getBool("WEBGL_PACK"))),Cl.registerFlag("WEBGL_PACK_CLIP",(()=>Cl.getBool("WEBGL_PACK"))),Cl.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Cl.getBool("WEBGL_PACK"))),Cl.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Cl.getBool("WEBGL_PACK"))),Cl.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Cl.getBool("WEBGL_PACK"))),Cl.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Cl.getBool("WEBGL_PACK"))),Cl.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Cl.getBool("WEBGL_PACK"))),Cl.registerFlag("WEBGL_PACK_REDUCE",(()=>Cl.getBool("WEBGL_PACK"))),Cl.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Cl.getBool("WEBGL_PACK"))),Cl.registerFlag("WEBGL_CONV_IM2COL",(()=>Cl.getBool("WEBGL_PACK"))),Cl.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==Nl){const t=Ce(e);Nl=t.getParameter(t.MAX_TEXTURE_SIZE)}return Nl}(Cl.getNumber("WEBGL_VERSION")))),Cl.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==Tl){const t=Ce(e);Tl=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Tl)}(Cl.getNumber("WEBGL_VERSION")))),Cl.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Cl.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Ce(e);return t=Ze(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Ze(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Cl.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Cl.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!vn.Ie.isMobile())),Cl.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Ce(e);if(1===e){if(!Ze(t,"OES_texture_float"))return!1}else if(!Ze(t,"EXT_color_buffer_float"))return!1;return et(t)}(Cl.getNumber("WEBGL_VERSION")))),Cl.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Cl.getBool("WEBGL_FORCE_F16_TEXTURES")&&Cl.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Cl.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Je(Cl.getNumber("WEBGL_VERSION")))),Cl.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Cl.getNumber("WEBGL_VERSION"))&&null!=Ce(e).fenceSync;var e})),Cl.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Cl.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Cl.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),Cl.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>vn.Ie.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),Cl.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Cl.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Cl.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Cl.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const El="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Al}=vn.Vd,$l="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Rl="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Dl="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Fl="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";class _l{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=kl.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=nt();this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?at(["r","c","d"],e):rt(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Ml{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=kl.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=nt();this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?at(["r","c","d"],e):rt(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class zl{constructor(e){this.variableNames=["A"],this.outTexUsage=Il.DOWNLOAD;const t=nt();this.outputShape=e,this.userCode=`\n      ${El}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Ll{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Il.DOWNLOAD;const t=nt();this.outputShape=e,this.userCode=`\n      ${El}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Pl{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=nt();this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":it(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class Bl{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=nt();this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":it(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}class Vl{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(vn.Ye)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){wl[e]=t}(t,e)):this.gl=Ce(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Object(vn.Ye)().getNumber("WEBGL_VERSION")){const e="OES_texture_half_float";if(this.textureFloatExtension=_e(this.gl,"OES_texture_float"),Ze(this.gl,e))this.textureHalfFloatExtension=_e(this.gl,e);else if(Object(vn.Ye)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ze(this.gl,r))this.colorBufferHalfFloatExtension=_e(this.gl,r);else if(Object(vn.Ye)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ze(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Ze(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=vt(this.gl),this.indexBuffer=wt(this.gl),this.framebuffer=function(e){return Ue(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Re(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(vn.Ye)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;De(e,(()=>e.finish())),De(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),De(e,(()=>e.deleteFramebuffer(this.framebuffer))),De(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),De(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),De(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Ee(t,n);return Ot(e,a,s,kt(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Ee(t,n);return Ot(e,a,s,It(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Ee(t,n);return Ot(e,a,s,St(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){De(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Object(vn.Ye)().getNumber("WEBGL_VERSION")?De(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):De(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Object(vn.Ye)().getNumber("WEBGL_VERSION")?De(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):De(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),De(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;De(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),2===Object(vn.Ye)().getNumber("WEBGL_VERSION")?De(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):De(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),De(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=$e(t,n);return Ot(e,a,s,Nt(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=$e(t,n);return Ot(e,a,s,jt(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ve(this.gl,this.framebuffer),this.outputTexture=null),De(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=Ee(t,n),i=new Uint8Array(t*n*4);return De(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Tt(this.gl,e,0,0,0,a,s)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();De(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return De(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),De(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),De(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(vn.Ye)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return De(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=xt(t));const n=function(e){return Ue(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return De(t,(()=>t.attachShader(n,this.vertexShader))),De(t,(()=>t.attachShader(n,e))),function(e,t){if(De(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&ze(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return De(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Le(e,t,"clipSpacePos",n,3,20,0)&&Le(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&De(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&ze(this.gl,this.program),De(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Ue(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),De(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Pe(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=$e(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&ze(this.gl,this.program),We(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),De(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),De(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=_e(this.gl,2===Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await vn.si.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||vn.si.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Be(this.gl,e,this.framebuffer),this.debug&&We(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Be(this.gl,this.outputTexture,this.framebuffer),this.debug&&We(this.gl)):Ve(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;Be(r,e,this.framebuffer),this.debug&&We(r),this.outputTexture=e,De(r,(()=>r.viewport(0,0,t,n))),De(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),De(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:Wl,bincountImpl:Ul,bincountReduceImpl:Gl,ceilImpl:ql,concatImpl:Hl,equalImpl:Yl,expImpl:Kl,expm1Impl:Xl,floorImpl:Zl,gatherNdImpl:Ql,gatherV2Impl:Jl,greaterImpl:ed,greaterEqualImpl:td,lessImpl:nd,lessEqualImpl:rd,linSpaceImpl:ad,logImpl:sd,maxImpl:id,maximumImpl:od,minimumImpl:ud,multiplyImpl:cd,negImpl:ld,notEqualImpl:dd,prodImpl:hd,rangeImpl:pd,rsqrtImpl:fd,sigmoidImpl:md,simpleAbsImpl:bd,sliceImpl:gd,sparseFillEmptyRowsImpl:yd,sparseReshapeImpl:xd,sparseSegmentReductionImpl:vd,sqrtImpl:wd,stridedSliceImpl:Od,stringNGramsImpl:kd,stringSplitImpl:Id,stringToHashBucketFastImpl:Sd,subImpl:jd,tileImpl:Nd,topKImpl:Td,transposeImpl:Cd,uniqueImpl:Ed}=xn;class Ad{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=yt(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Et("rc",this.rank),t=pt(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2);return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class $d{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?st(["r","c","d"],"inputShape"):rt(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":it(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Rd{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=$t(t,n),a=Rt(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=At(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===Sl.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Sl.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Sl.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Sl.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Sl.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=$t(n,r),s=Rt(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=At(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Object(vn.Ye)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}class Dd{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Fd="return abs(x);",_d="return x;";class Md{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class zd{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length);const t=e.length,n=Et("rc",t),r=pt(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Ld=vn.Hf.whereImpl,Pd={},Bd=Object(vn.Ye)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Vd extends vn.Eb{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(vn.Ye)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Vl)t=e;else{const n=Ce(Object(vn.Ye)().getNumber("WEBGL_VERSION"),e);t=new Vl(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Ce(Object(vn.Ye)().getNumber("WEBGL_VERSION"));t=new Vl(e),this.binaryCache=((n=Object(vn.Ye)().getNumber("WEBGL_VERSION"))in Pd||(Pd[n]={}),Pd[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Rd(this.gpgpu),this.numMBBeforeWarning=null==Object(vn.Ye)().global.screen?1024:Object(vn.Ye)().global.screen.height*Object(vn.Ye)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new vn.R(this,Object(vn.Xe)())}nextDataId(){return Vd.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(vn.Ye)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(vn.Ye)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Il.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Object(vn.Ye)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Il.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new Md(i,_d):new Dd(i,_d);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,l;if(u&&(c=vn.si.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);l=vn.Vd.mergeRealAndImagArrays(e,t)}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=vn.si.now()-c),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new Md(r,_d):new Dd(r,_d);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Object(vn.Ye)().getBool("DEBUG")&&!Object(vn.Ye)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(vn.Ye)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,l=null;if("complex64"!==s&&Object(vn.Ye)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(t.texture.texture,...Ae(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);c=vn.Vd.mergeRealAndImagArrays(e[0],e[1])}else if(null==l)c=this.getValuesFromTexture(e);else{const e=vn.si.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=l){const e=this.gpgpu.gl;De(e,(()=>e.deleteBuffer(l)))}const d=this.convertAndCacheOnCPU(e,c),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(vn.Xe)().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new Md(a,_d):new Dd(a,_d);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape);return Dt({tensorRef:Object(vn.Xe)().makeTensorFromDataId(c.dataId,c.shape,c.dtype)},this.texData.get(c.dataId).texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>vn.si.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(vn.ie)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Fe(n)){if(Object(vn.Ye)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=vn.si.sizeFromShape(t);if(Object(vn.Ye)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...Ae(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Object(vn.Ye)().getBool("WEBGL_PACK")&&!0===r,i=s?Ye(t):t,o=s?new Ll(i):new zl(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){var t=this;const n=this.activeTimers,r=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=r,a=!0):this.activeTimers.push(r),this.activeTimers=r,e();const s=vn.si.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=vn.si.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=n,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return async function(){if(Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=vn.si.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return t.uploadWaitMs=0,t.downloadWaitMs=0,o}()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:vn.si.now(),endMs:null}}endTimer(e){return Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=vn.si.now(),e)}async getQueryTime(e){if(Object(vn.Ye)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);return e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Bd){return Object(vn.Ye)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&vn.si.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){vn.Vd.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Ld(e.shape,t)}packedUnaryOp(e,t,n){const r=new Md(e.shape,t),a=this.compileAndRun(r,[e],n);return Object(vn.Xe)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=bd(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(vn.Ye)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Fd,e.dtype);const t=new Dd(e.shape,Fd),n=this.compileAndRun(t,[e]);return Object(vn.Xe)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&vn.si.isString(n[0])){const a=n.map((e=>vn.si.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Object(vn.Xe)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new zd(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Ad(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[qe(e.shape),...He(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[qe(t),...He(t)],s=new $d(a,n),i=this.runWebGLProgram(s,[r],e.dtype,[n],!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){const e=vn.si.sizeFromShape(a);vn.si.assert(e<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=Ye(a);let o;o=r?new Ml(i):new _l(i);const u=[null!=t?t:Ae(i)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===kl.DENSE){const t=null!=s?s:Ae(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===vn.si.sizeFromShape(i.shape))return o.values=vn.si.getTypedArrayFromDType(i.dtype,0),i;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&vn.si.sizeFromShape(t.shape)<=Object(vn.Ye)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Xe(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const l={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=ft(e.packedInputs,t.shape,s);let c="",l="",d="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=vn.si.computeStrides(o);d=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else l=`${o[0]>1}_${o[1]>1}`;const h=t.shape.length,p=2===o.length&&vn.si.arraysEqual(t.shape,s),f=1===vn.si.sizeFromShape(t.shape),m=vn.Vd.getBroadcastDims(t.shape,n.shape),b=!e.packedInputs&&h===n.shape.length&&vn.si.arraysEqual(s,n.texData.texShape);r+=`${h}_${b}_${i?u:""}_${o.length}_${f}_${m}_${p}_${c}_${l}_${d}_${e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`}_${a}`}else r+=`${t.shape}_${t.isUniform?"uniform":t.texData.texShape}_${a}`}));let a=e.constructor.name;return a+="_"+r+"_"+e.userCode+`${Object(vn.Ye)().getNumber("WEBGL_VERSION")}`,a}(e,c,l),h=this.getAndSaveBinary(d,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=ot(a,i,t),u=Me(e.gl,o),c=e.createProgram(u);let l=null;const d=e.getUniformLocation(c,"NAN",!1);1===Object(vn.Ye)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(c,"INFINITY",!1));const h=!1,p={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];p[r]=e.getUniformLocation(c,r,h),p[`offset${r}`]=e.getUniformLocation(c,`offset${r}`,h),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(c,`${r}Shape`,h),m[`${r}TexShape`]=e.getUniformLocation(c,`${r}TexShape`,h))}let b,g,y;t.enableShapeUniforms&&(b=e.getUniformLocation(c,"outShape",h),y=e.getUniformLocation(c,"outShapeStrides",h),g=e.getUniformLocation(c,"outTexShape",h));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(c,t.name,h)})),{program:t,fragmentShader:u,source:o,webGLProgram:c,uniformLocations:p,customUniformLocations:x,inShapeInfos:s,outShapeInfo:i,infLoc:l,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:b,outShapeStridesLocation:y,outTexShapeLocation:g}}(this.gpgpu,e,c,l))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(gt(t.inShapeInfos,n),gt([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Object(vn.Ye)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],u=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=ft(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(vn.si.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=vn.si.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,h,c,l,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Object(vn.Ye)().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=vn.si.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(vn.Ye)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return this.runWebGLProgram(e,t,n=n||t[0].dtype,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(vn.Ye)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(vn.fi)((()=>{if(!Object(vn.Ye)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(vn.Ye)().getBool("DEBUG");Object(vn.Ye)().set("DEBUG",!1);const t=this.abs(Object(vn.ih)(1e-8)).dataSync()[0];if(Object(vn.Ye)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let c;u&&(c=vn.si.now());let l=t.texShape;if(null==l&&(l=function(e,t=!1){let n=Object(vn.Ye)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?vn.si.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=vn.si.squeezeShape(e);e=t.newShape}let r=vn.si.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=qe(e);let n=2,a=2;return e.length&&([n,a]=He(e)),r=t*(n/2)*(a/2),vn.si.sizeToSquarishShape(r).map((e=>2*e))}return vn.si.sizeToSquarishShape(r)}(n,o),t.texShape=l),null!=a){const e=Ye(n);let s,i=l[1],d=l[0];const h=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!o&&h||([i,d]=$e(l[0],l[1])),s=o?new Bl(e,h):new Pl(e,h);const p=h?[d,i]:l,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=h?Il.PIXELS:Il.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,d,a);const b=this.runWebGLProgram(s,[f],r,[[d,i]],!0),g=this.texData.get(b.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),t.values=null,u&&(this.uploadWaitMs+=vn.si.now()-c)}else{const e=this.acquireTexture(l,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*vn.si.bytesPerElement(t)}}Vd.nextDataId=0;vn.Ie.isBrowser()&&Object(vn.Tg)("webgl",(()=>new Vd),2);class Wd{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=vn.Vd.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=yt(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Ud{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=vn.Vd.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=yt(a);let s="";if(r)if(0===a||1===vn.si.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${pt(a)} coords = getOutputCoords();\n        `,1===a)s+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Et("coords",a);s+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}const Gd={kernelName:vn.zb,backendName:"webgl",kernelFunc:Ft},qd={kernelName:vn.E,backendName:"webgl",kernelFunc:_t},Hd="return (a < 0.) ? b * a : a;",Yd="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Kd={kernelName:vn.Hb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",vn.si.createScalarValue(s,"float32")),o=Object(vn.Ye)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ud(Yd,a.shape,i.shape):new Wd(Hd,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},Xd="return (a < 0.) ? b * a : a;",Zd="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Qd={kernelName:vn.uc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Object(vn.Ye)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ud(Zd,r.shape,a.shape):new Wd(Xd,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};class Jd{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=yt(this.outputShape.length);const c=Math.ceil((r?e[1]:e[2])/2),l=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let g="rc.x",y="rc.x";e[0]<t[0]?g=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${g};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${l});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${p[0]});\n          result += (${h[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}const eh="return areal * breal - aimag * bimag;",th="return areal * bimag + aimag * breal;";class nh{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=vn.Vd.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const rh="return a * b;",ah={kernelName:vn.fc,backendName:"webgl",kernelFunc:Pt},sh={kernelName:vn.Fc,backendName:"webgl",kernelFunc:Bt};class ih{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${vn.si.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class oh{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}class uh{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=pt(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class ch{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=pt(this.rank),a=Ct("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}const lh={kernelName:vn.pd,backendName:"webgl",kernelFunc:Ut},dh={kernelName:vn.xd,backendName:"webgl",kernelFunc:Gt},hh={kernelName:vn.Dd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return qt({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}},ph="return abs(x);",fh={kernelName:vn.a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=bd(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Object(vn.Ye)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Md(r.shape,ph):new Dd(r.shape,ph),n.runWebGLProgram(a,[r],r.dtype)}},mh=Mt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),bh={kernelName:vn.b,backendName:"webgl",kernelFunc:mh},gh=Mt({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),yh={kernelName:vn.c,backendName:"webgl",kernelFunc:gh},xh="return a + b;",vh=zt({opSnippet:xh,packedOpSnippet:xh,supportsComplex:!0,cpuKernelImpl:Wl}),wh={kernelName:vn.h,backendName:"webgl",kernelFunc:vh};class Oh{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class kh{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Ih={kernelName:vn.i,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return Ft({inputs:{x:a[0]},backend:r});if(a.length>Object(vn.Ye)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>Object(vn.ri)(e,t))),i=a.map((e=>e.shape)),o=Object(vn.Ye)().getBool("WEBGL_PACK")?new kh(a[0].shape,i):new Oh(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},Sh={kernelName:vn.j,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=vn.si.parseAxisParam(s,a.shape);let c=u;const l=vn.Vd.getAxesPermutation(c,o);let d=a;null!=l&&(d=Gt({inputs:{x:a},backend:n,attrs:{perm:l}}),c=vn.Vd.getInnerMostAxes(c.length,o)),vn.Vd.assertAxesAreInnerMostDims("all",c,o);const[h,p]=vn.Vd.computeOutAndReduceShapes(d.shape,c),f=Bt({inputs:{x:d},backend:n,attrs:{shape:[-1,vn.si.sizeFromShape(p)]}}),m=Vt(f,f.dtype,"all",n);let b;if(i){b=Bt({inputs:{x:m},backend:n,attrs:{shape:vn.Vd.expandShapeToKeepDim(h,u)}})}else b=Bt({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(d),b}},jh={kernelName:vn.k,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=vn.si.parseAxisParam(s,a.shape);let c=u;const l=vn.Vd.getAxesPermutation(c,o);let d=a;null!=l&&(d=Gt({inputs:{x:a},backend:n,attrs:{perm:l}}),c=vn.Vd.getInnerMostAxes(c.length,o)),vn.Vd.assertAxesAreInnerMostDims("any",c,o);const[h,p]=vn.Vd.computeOutAndReduceShapes(d.shape,c),f=Bt({inputs:{x:d},backend:n,attrs:{shape:[-1,vn.si.sizeFromShape(p)]}}),m=Vt(f,f.dtype,"any",n);let b;if(i){b=Bt({inputs:{x:m},backend:n,attrs:{shape:vn.Vd.expandShapeToKeepDim(h,u)}})}else b=Bt({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(d),b}};class Nh{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Th{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,vn.si.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const s=this.outputShape,i=s.length,o=pt(i),u=Et("coords",i);let c,l;if(1===a){l=i+1;const e=pt(l);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[i-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[i-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[i-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[i-2]};`}else l=i,c=`\n        ${o} sourceLocR = coords;\n        ++${u[i-1]};\n        ${o} sourceLocG = coords;\n        ++${u[i-2]};\n        ${o} sourceLocA = coords;\n        --${u[i-1]};\n        ${o} sourceLocB = coords;\n        --${u[i-2]};`;const d=["x","y","z","w","u","v"].slice(0,l),h="."+d[l-1],p=d.map((e=>"int "+e)),f=Et("sourceLocR",l-1).concat("inIdx.r"),m=Et("sourceLocG",l-1).concat("inIdx.g"),b=Et("sourceLocB",l-1).concat("inIdx.b"),g=Et("sourceLocA",l-1).concat("inIdx.a"),y="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()})));`,v=`vec4(\n            getAChannel(${f.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${g.join()}) : 0.)`,w=r?"":`\n      float getBestIndicesAChannel(${p.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${p.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${o} coords = getOutputCoords();\n        bool hasNextCol = ${u[i-1]} < ${s[i-1]-1};\n        bool hasNextRow = ${u[i-2]} < ${s[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}const Ch={kernelName:vn.l,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=vn.si.parseAxisParam(s,a.shape);const o=vn.Vd.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=Gt({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=vn.Vd.getInnerMostAxes(i.length,u.shape.length)),vn.Vd.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const l=Kt(n,u,i[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},Eh={kernelName:vn.m,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=vn.si.parseAxisParam(s,a.shape);const o=vn.Vd.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=Gt({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=vn.Vd.getInnerMostAxes(i.length,u.shape.length)),vn.Vd.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const l=Kt(n,u,i[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},Ah=Mt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),$h={kernelName:vn.n,backendName:"webgl",kernelFunc:Ah},Rh=Mt({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Dh={kernelName:vn.o,backendName:"webgl",kernelFunc:Rh},Fh=Mt({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),_h={kernelName:vn.p,backendName:"webgl",kernelFunc:Fh},Mh=zt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),zh={kernelName:vn.q,backendName:"webgl",kernelFunc:Mh},Lh=Mt({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Ph={kernelName:vn.r,backendName:"webgl",kernelFunc:Lh};class Bh{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t;let m="0.0";if(f||(m="-1.0 / 1e-20"),n){return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${">="} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const g=4*Math.floor(s/4),y=s%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${g}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${g};\n          if (${1===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Vh{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,b=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${">="} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),O=s%4,k=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const Wh={kernelName:vn.s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;tt(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;vn.si.assert(vn.Vd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=vn.Vd.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&vn.si.arraysEqual(c.inShape,c.outShape))return Ft({inputs:{x:a},backend:n});const l=new Bh(c,"avg",!1);return n.runWebGLProgram(l,[a],"float32")}},Uh={kernelName:vn.t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r,l=vn.Vd.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,c),d=new Vh(l,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class Gh{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qh{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Hh={kernelName:vn.u,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,d=vn.Vd.computePool3DInfo(i.shape,o,u,[1,1,1],c,l),h=new qh(d);return n.runWebGLProgram(h,[a],i.dtype)}},Yh={kernelName:vn.v,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;tt([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=vn.Vd.computePool2DInfo(i.shape,o,u,1,c),d=new Gh(l);return n.runWebGLProgram(d,[a],i.dtype)}},Kh={kernelName:vn.w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return qt({a:a,b:s,transposeA:i,transposeB:o,backend:n})}};class Xh{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],vn.Vd.assertAndGetBroadcastShape(e,t),vn.Vd.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(vn.Vd.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(vn.Vd.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Zh{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],vn.Vd.assertAndGetBroadcastShape(e,t),vn.Vd.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(vn.Vd.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(vn.Vd.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Qh={kernelName:vn.rb,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;vn.si.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),vn.si.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),vn.si.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,a,s];let l=null;null!=i&&(l=i.shape,c.push(i));let d=null;null!=o&&(d=o.shape,c.push(o));const h=Object(vn.Ye)().getBool("WEBGL_PACK_NORMALIZATION")?new Zh(r.shape,a.shape,s.shape,l,d,u):new Xh(r.shape,a.shape,s.shape,l,d,u);return t.runWebGLProgram(h,c,c[0].dtype)}};class Jh{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=pt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return ep.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${ep[t]} = start[${t}] + coords.${ep[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const ep=["x","y","z","w","u","v"];class tp{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=pt(this.rank),n=Et("coords",this.rank),r=Et("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}const np={kernelName:vn.Wc,backendName:"webgl",kernelFunc:Zt},rp={kernelName:vn.x,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;vn.si.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=vn.Vd.getReshaped(a.shape,s,o),c=vn.Vd.getPermuted(u.length,s.length),l=vn.Vd.getReshapedPermuted(a.shape,s,o),d=vn.Vd.getSliceBeginCoords(i,s.length),h=vn.Vd.getSliceSize(l,i,s.length),p=[],f=Bt({inputs:{x:a},backend:n,attrs:{shape:u}}),m=Gt({inputs:{x:f},backend:n,attrs:{perm:c}}),b=Bt({inputs:{x:m},backend:n,attrs:{shape:l}}),g=Zt({inputs:{x:b},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(b),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},ap={kernelName:vn.y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),c=Ul(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}},sp={kernelName:vn.z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=vn.Vd.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},ip=zt({opSnippet:"return float(a != b);",cpuKernelImpl:dd,dtype:"bool"}),op={kernelName:vn.kc,backendName:"webgl",kernelFunc:ip},up={kernelName:vn.zc,backendName:"webgl",kernelFunc:Qt},cp={kernelName:vn.B,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return Ft({inputs:{x:s},backend:r});const t=vn.Ai(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=_t({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=Qt({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!vn.si.hasEncodingLoss(s.dtype,i)){const e=Ft({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new Dd(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",vn.si.getTypedArrayFromDType("bool",1)),t=ip({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},lp="return ceil(x);",dp=Mt({opSnippet:lp,packedOpSnippet:lp,cpuKernelImpl:ql}),hp={kernelName:vn.C,backendName:"webgl",kernelFunc:dp};class pp{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class fp{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const mp={kernelName:vn.D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;return o=Object(vn.Ye)().getBool("WEBGL_PACK_CLIP")?new fp(a.shape):new pp(a.shape),n.runWebGLProgram(o,[a],a.dtype,[[s],[i]])}};class bp{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}const gp={kernelName:vn.F,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new bp(r.shape),i=[Jt(r,a.complexTensorInfos.real),Jt(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class yp{constructor(e){this.outputShape=[],this.outputShape=vn.Vd.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${t[e-1]}));`)}n.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class xp{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=vn.Vd.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=pt(r),s=Et("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],c=i.slice(-2),l=i.join();let d=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${l}), vec2(${c.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];d+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${en(i,u,t)}),\n            vec2(${en(c,u,t)}));\n        }`}const h=o[o.length-1];d+=`\n        return getChannel(\n          getT${o.length}(${en(i,u,h)}),\n          vec2(${en(c,u,h)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}const vp={kernelName:vn.Ab,backendName:"webgl",kernelFunc:tn},wp={kernelName:vn.G,backendName:"webgl",kernelFunc:rn};class Op{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class kp{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ip{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length);const{dataFormat:n}=t,r=nt(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}const Sp={kernelName:vn.H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r,d=vn.Vd.convertConv2DDataFormat(u),h=vn.Vd.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Object(vn.Ye)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=sn({x:a,filter:s,convInfo:h,backend:n});else{const e=new Op(h);p=n.runWebGLProgram(e,[a,s],"float32")}else p=an({x:a,filter:s,convInfo:h,backend:n});const f=Bt({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class jp{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===e.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Np{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Tp{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Cp{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ep={kernelName:vn.I,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,d=vn.Vd.convertConv2DDataFormat(u),h=vn.Vd.computeConv2DInfo(a.shape,l,i,1,o,c,!1,d),p=new jp(h);return n.runWebGLProgram(p,[a,s],"float32")}},Ap={kernelName:vn.J,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=vn.Vd.convertConv2DDataFormat(c),h=vn.Vd.computeConv2DInfo(i,s.shape,o,1,u,l,!1,d),p=new Np(h);return n.runWebGLProgram(p,[a,s],"float32")}},$p={kernelName:vn.K,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,c=vn.Vd.computeConv3DInfo(a.shape,s.shape,i,u,o),l=new kp(c);return n.runWebGLProgram(l,[a,s],"float32")}},Rp={kernelName:vn.L,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,c=vn.Vd.computeConv3DInfo(a.shape,u,i,1,o),l=new Tp(c);return n.runWebGLProgram(l,[a,s],"float32")}},Dp={kernelName:vn.M,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,c=vn.Vd.computeConv3DInfo(u,s.shape,o,1,i),l=new Cp(c);return n.runWebGLProgram(l,[a,s],"float32")}},Fp=Mt({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),_p={kernelName:vn.N,backendName:"webgl",kernelFunc:Fp},Mp=Mt({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),zp={kernelName:vn.O,backendName:"webgl",kernelFunc:Mp};class Lp{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,b,g]=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Pp={kernelName:vn.P,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,l=new Lp(a.shape,s.shape,o,u,c);return n.runWebGLProgram(l,[a,s,i],"float32")}};class Bp{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${on(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${pt(r)} coords = getOutputCoords();\n        int end = ${un(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${un(r,"coords")} = idx;\n          val += getX(${on(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}const Vp={kernelName:vn.Q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,c=vn.Vd.getAxesPermutation([s],u);let l=a;null!=c&&(l=Gt({inputs:{x:a},backend:n,attrs:{perm:c}}));const d=vn.Vd.getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const h=l.shape[d];let p=Ft({inputs:{x:l},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){const t=new Bp(l.shape,!1,o),r=p;p=n.runWebGLProgram(t,[p],p.dtype,[[e]]),n.disposeIntermediateTensorInfo(r)}if(i){const e=new Bp(l.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=Gt({inputs:{x:p},backend:n,attrs:{perm:vn.Vd.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}},Wp={kernelName:vn.S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Ul(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Gl(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Up{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Gp={kernelName:vn.T,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,c=("NHWC"===i?a.shape[2]:a.shape[3])*s,l=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d=new Up("NHWC"===i?[o,u,c,l]:[o,l,u,c],s,i);return n.runWebGLProgram(d,[a],a.dtype)}};class qp{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yt(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",c="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,c="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${l}\n        ${c}\n        setOutput(result);\n      }\n    `}}class Hp{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yt(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,d=l;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)h+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;h+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let e=0;e<l;e++)h+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){const t=2*e;if(h+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<l&&(i%2==1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,h+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<l)){const e=i%2==0?vn.si.nearestLargerEven(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(h+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):h+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<l&&(i%2==1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<l&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<l&&(h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<l&&(h+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<l&&(h+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const Yp={kernelName:vn.U,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;let l=u;null==l&&(l=[1,1]),vn.si.assert(vn.Vd.eitherStridesOrDilationsAreOne(i,l),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const d=vn.Vd.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!0);let h;return h=Object(vn.Ye)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new Hp(d):new qp(d),n.runWebGLProgram(h,[a,s],"float32",[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]])}};class Kp{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Xp{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Zp={kernelName:vn.V,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r,d=vn.Vd.computeConv2DInfo(a.shape,l,i,o,u,c,!0),h=new Kp(d);return n.runWebGLProgram(h,[a,s],"float32")}},Qp={kernelName:vn.W,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r,d=vn.Vd.computeConv2DInfo(l,s.shape,i,o,u,c,!0),h=new Xp(d);return n.runWebGLProgram(h,[a,s],"float32")}};class Jp{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ef={kernelName:vn.X,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=vn.si.sizeFromShape(r.shape),i=Bt({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new Jp(s),u=n.runWebGLProgram(o,[i],i.dtype),c=Bt({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}};class tf{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const nf={kernelName:vn.Y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,c=vn.Vd.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let l;const d=new tf(c);l=n.runWebGLProgram(d,[a,s],"float32");const h=Bt({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),h}},rf={kernelName:vn.cb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=vn.Vd.decodeEinsumEquation(a,s.length);vn.Vd.checkEinsumDimSizes(i.length,u,s);const{path:c,steps:l}=vn.Vd.getEinsumComputePath(o,u),d=l.length;let h=null,p=i.length;const f=[];for(let e=0;e<d;++e){for(const t of l[e]){const{permutationIndices:e,expandDims:r}=vn.Vd.getEinsumPermutation(p,u[t]);let a;vn.Vd.isIdentityPermutation(e)?a=s[t]:(a=Gt({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);vn.si.arraysEqual(a.shape,i)||(a=Bt({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===h?h=a:(h=Pt({inputs:{a:a,b:h},backend:n}),f.push(h))}e<d-1&&(c[e]>=0&&(h=Ut({inputs:{x:h},backend:n,attrs:{axis:c[e]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},af=Mt({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),sf={kernelName:vn.db,backendName:"webgl",kernelFunc:af},of={kernelName:vn.eb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Object(vn.Ye)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ud("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new Wd("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},uf=zt({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Yl}),cf={kernelName:vn.gb,backendName:"webgl",kernelFunc:uf},lf=Mt({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${vn.Vd.ERF_P};\n  float a1 = ${vn.Vd.ERF_A1};\n  float a2 = ${vn.Vd.ERF_A2};\n  float a3 = ${vn.Vd.ERF_A3};\n  float a4 = ${vn.Vd.ERF_A4};\n  float a5 = ${vn.Vd.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),df={kernelName:vn.hb,backendName:"webgl",kernelFunc:lf},hf=Mt({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Kl,dtype:"float32"}),pf={kernelName:vn.ib,backendName:"webgl",kernelFunc:hf},ff={kernelName:vn.jb,backendName:"webgl",kernelFunc:cn},mf="return exp(x) - 1.0;",bf=Mt({opSnippet:mf,packedOpSnippet:mf,cpuKernelImpl:Xl}),gf={kernelName:vn.kb,backendName:"webgl",kernelFunc:bf};class yf{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}const xf={kernelName:vn.lb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ln(r,!1,n)}};class vf{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}const wf={kernelName:vn.mb,backendName:"webgl",kernelFunc:dn};class Of{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const kf={kernelName:vn.nb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Of(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},If="return floor(x);",Sf=Mt({opSnippet:If,packedOpSnippet:If,cpuKernelImpl:Zl}),jf={kernelName:vn.ob,backendName:"webgl",kernelFunc:Sf},Nf=zt({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Tf={kernelName:vn.pb,backendName:"webgl",kernelFunc:Nf};class Cf{constructor(e){this.variableNames=["A"];const t=nt(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Ef{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=nt(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Af={kernelName:vn.qb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[c,u],d=[c,u,s];(o||i)&&(null==$f&&($f=document.createElement("canvas").getContext("2d")),$f.canvas.width=u,$f.canvas.height=c,$f.drawImage(a,0,0,u,c),a=$f.canvas);const h=n.makeTensorInfo(l,"int32");n.texData.get(h.dataId).usage=Il.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const p=Object(vn.Ye)().getBool("WEBGL_PACK")?new Ef(d):new Cf(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}};let $f;const Rf={kernelName:vn.sb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=vn.Vd.convertConv2DDataFormat(l),b=vn.Vd.computeConv2DInfo(a.shape,s.shape,u,d,c,h,!1,m);let g;const y=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(Object(vn.Ye)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])g=sn({x:a,filter:s,convInfo:b,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,u=p?Lt(p,!1):null,c=new Op(b,e,u,t,r),l=[a,s];if(i&&l.push(i),o&&l.push(o),r){const e=n.makeTensorInfo([],"float32",vn.si.createScalarValue(f,"float32"));l.push(e),y.push(e)}g=n.runWebGLProgram(c,l,"float32")}else g=an({x:a,filter:s,convInfo:b,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=Bt({inputs:{x:g},backend:n,attrs:{shape:b.outShape}});return y.push(g),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Df={kernelName:vn.tb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r,f=[];let m=l;null==m&&(m=[1,1]),vn.si.assert(vn.Vd.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const b=vn.Vd.computeConv2DInfo(a.shape,s.shape,u,m,c,d,!0),g=Object(vn.Ye)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,y=h?Lt(h,g):null,x=[a,s],v=null!=i,w=null!=o,O="leakyrelu"===h;if(v&&x.push(i),w&&x.push(o),O){const e=n.makeTensorInfo([],"float32",vn.si.createScalarValue(p,"float32"));x.push(e),f.push(e)}let k;k=g?new Hp(b,v,y,w,O):new qp(b,v,y,w,O);const I=n.runWebGLProgram(k,x,"float32",[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]]);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class Ff{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=pt(t.length),a=pt(n.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const _f={kernelName:vn.ub,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=vn.si.sizeFromShape(r.shape),[u,c,l,d]=vn.Vd.prepareAndValidate(r,a),h=Bt({inputs:{x:a},backend:n,attrs:{shape:[c,i]}}),p=Bt({inputs:{x:r},backend:n,attrs:{shape:[vn.si.sizeFromShape(r.shape)/l,l]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=Ql(e,t,r.dtype,c,i,l,d,r.shape,o);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new Ff(i,d,[c,l]),m=n.runWebGLProgram(f,[p,h],p.dtype),b=Bt({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};class Mf{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=pt(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)n.push(2===r?"index":`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}const zf={kernelName:vn.vb,backendName:"webgl",kernelFunc:hn},Lf=zt({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:ed,dtype:"bool"}),Pf={kernelName:vn.wb,backendName:"webgl",kernelFunc:Lf},Bf=zt({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:td}),Vf={kernelName:vn.xb,backendName:"webgl",kernelFunc:Bf},Wf={kernelName:vn.yb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ln(r,!0,n)}},Uf=Mt({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Gf={kernelName:vn.Bb,backendName:"webgl",kernelFunc:Uf},qf=Mt({opSnippet:"return float(isinf(x));",dtype:"bool"}),Hf={kernelName:vn.Cb,backendName:"webgl",kernelFunc:qf},Yf=Mt({opSnippet:"return float(isnan(x));",dtype:"bool"}),Kf={kernelName:vn.Db,backendName:"webgl",kernelFunc:Yf},Xf=zt({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:nd,dtype:"bool"}),Zf={kernelName:vn.Ib,backendName:"webgl",kernelFunc:Xf},Qf=zt({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:rd,dtype:"bool"}),Jf={kernelName:vn.Jb,backendName:"webgl",kernelFunc:Qf},em={kernelName:vn.Kb,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=ad(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},tm=Mt({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:sd}),nm={kernelName:vn.Lb,backendName:"webgl",kernelFunc:tm},rm=Mt({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),am={kernelName:vn.Mb,backendName:"webgl",kernelFunc:rm},sm=zt({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),im={kernelName:vn.Ob,backendName:"webgl",kernelFunc:sm},om=Mt({opSnippet:"return float(!(x >= 1.0));"}),um={kernelName:vn.Pb,backendName:"webgl",kernelFunc:om},cm=zt({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),lm={kernelName:vn.Qb,backendName:"webgl",kernelFunc:cm};class dm{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class hm{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const pm={kernelName:vn.Fb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,c=Object(vn.Ye)().getBool("WEBGL_PACK_NORMALIZATION")?new hm(a.shape,s,i,o,u):new dm(a.shape,s,i,o,u);return n.runWebGLProgram(c,[a],a.dtype)}};class fm{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const mm={kernelName:vn.Gb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r,d=new fm(a.shape,o,u,c,l);return n.runWebGLProgram(d,[a,s,i],a.dtype)}},bm={kernelName:vn.Rb,backendName:"webgl",kernelFunc:pn},gm=zt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:od}),ym={kernelName:vn.Xb,backendName:"webgl",kernelFunc:gm},xm={kernelName:vn.Sb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;tt(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;vn.si.assert(vn.Vd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=vn.Vd.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&vn.si.arraysEqual(c.inShape,c.outShape))return Ft({inputs:{x:a},backend:n});const l=new Bh(c,"max",!1);return n.runWebGLProgram(l,[a],a.dtype)}},vm={kernelName:vn.Tb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:c}=r,l=vn.Vd.computePool3DInfo(a.shape,s,i,[1,1,1],o,c,u),d=new Vh(l,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class wm{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${t*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Om{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${t*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const km={kernelName:vn.Ub,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,d=vn.Vd.computePool3DInfo(i.shape,o,u,[1,1,1],c,l),h=new Vh(d,"max",!0),p=n.runWebGLProgram(h,[i],i.dtype),f=new Om(d),m=n.runWebGLProgram(f,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},Im={kernelName:vn.Vb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;tt([s,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=vn.Vd.computePool2DInfo(o.shape,u,c,1,l,d),p=new Bh(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new wm(h),b=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),b}},Sm={kernelName:vn.Wb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;vn.si.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];vn.si.assert(vn.Vd.eitherStridesOrDilationsAreOne(s,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));const l=vn.Vd.computePool2DInfo(r.shape,a,s,c,i),[d,h]=function(e,t,n,r){let a=new Bh(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Bh(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,l,u);return[d,h]}},jm={kernelName:vn.Yb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=vn.si.parseAxisParam(s,r.shape);let c=u;const l=vn.Vd.getAxesPermutation(c,o),d=null!=l,h=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(d){if(h){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[l[e]];const n=Cd(e,r.shape,r.dtype,l,t);f=i.makeTensorInfo(t,r.dtype);i.texData.get(f.dataId).values=n}else f=Wt(r,l,i);p.push(f),c=vn.Vd.getInnerMostAxes(c.length,o)}vn.Vd.assertAxesAreInnerMostDims("sum",c,o);const[m,b]=vn.Vd.computeOutAndReduceShapes(f.shape,c);let g=m;a&&(g=vn.Vd.expandShapeToKeepDim(m,u));const y=function(e,t,n,r){const a=vn.si.sizeFromShape(t),s=Bt({inputs:{x:e},attrs:{shape:[vn.si.sizeFromShape(e.shape)/a,a]},backend:r}),i=Vt(s,"float32","mean",r),o=Bt({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,b,g,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return y}},Nm={kernelName:vn.Zb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=vn.si.parseAxisParam(s,a.shape);let c=u;const l=vn.Vd.getAxesPermutation(c,o);let d=a;null!=l&&(d=Gt({inputs:{x:a},backend:n,attrs:{perm:l}}),c=vn.Vd.getInnerMostAxes(c.length,a.shape.length)),vn.Vd.assertAxesAreInnerMostDims("min",c,o);const[h,p]=vn.Vd.computeOutAndReduceShapes(d.shape,c),f=Bt({inputs:{x:d},backend:n,attrs:{shape:[-1,vn.si.sizeFromShape(p)]}}),m=Vt(f,f.dtype,"min",n);let b;if(i){b=Bt({inputs:{x:m},backend:n,attrs:{shape:vn.Vd.expandShapeToKeepDim(h,u)}})}else b=Bt({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(d),b}},Tm=zt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:ud}),Cm={kernelName:vn.ac,backendName:"webgl",kernelFunc:Tm};class Em{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=pt(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Am{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=pt(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Et("rc",r),u=Et("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const $m={kernelName:vn.bc,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=Object(vn.Ye)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Am(r.shape,a,s):new Em(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},Rm=zt({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Dm={kernelName:vn.cc,backendName:"webgl",kernelFunc:Rm};class Fm{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const _m=zt({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Mm={kernelName:vn.Ac,backendName:"webgl",kernelFunc:_m},zm="return a - b;",Lm=zt({opSnippet:zm,packedOpSnippet:zm,supportsComplex:!0,cpuKernelImpl:jd}),Pm={kernelName:vn.od,backendName:"webgl",kernelFunc:Lm},Bm={kernelName:vn.Xc,backendName:"webgl",kernelFunc:fn},Vm={kernelName:vn.ec,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:fn({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=new Fm(u.shape[0],u.shape[1],s),l=n.runWebGLProgram(c,[u],"int32",[[i]]);return o||n.disposeIntermediateTensorInfo(u),l}},Wm={kernelName:vn.gc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=ld(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Object(vn.Ye)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Md(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Dd(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(a,[r],r.dtype)}},Um=vn.Hf.nonMaxSuppressionV3Impl,Gm={kernelName:vn.hc,backendName:"webgl",kernelFunc:function(e){vn.Vd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,c=n.readSync(a.dataId),l=n.readSync(s.dataId),{selectedIndices:d}=Um(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},qm=vn.Hf.nonMaxSuppressionV4Impl,Hm={kernelName:vn.ic,backendName:"webgl",kernelFunc:function(e){vn.Vd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:p}=qm(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Ym=vn.Hf.nonMaxSuppressionV5Impl,Km={kernelName:vn.jc,backendName:"webgl",kernelFunc:function(e){vn.Vd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),h=i,p=o,f=u,m=c,{selectedIndices:b,selectedScores:g}=Ym(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}};class Xm{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Zm={kernelName:vn.mc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=vn.si.sizeFromShape(a.shape),c=new Xm(u,s,i,o),l=Bt({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[l],a.dtype);n.disposeIntermediateTensorInfo(l);const h=Bt({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),h}},Qm={kernelName:vn.Cd,backendName:"webgl",kernelFunc:mn},Jm={kernelName:vn.nc,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Qt({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=tn({inputs:{input:a},backend:r}),i=mn({inputs:{x:s},backend:r}),o=_t({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return dn({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},eb={kernelName:vn.qc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return cn({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{vn.si.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),vn.si.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=rn({inputs:t.map((e=>{const t=cn({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class tb{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=pt(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class nb{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=pt(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Et("rc",r),u=Et("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const rb=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===vn.si.sizeFromShape(a.shape)){const e=s.map(((e,t)=>e[0]+a.shape[t]+e[1]));return dn({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}})}const o=Object(vn.Ye)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nb(a.shape,s,i):new tb(a.shape,s,i);return n.runWebGLProgram(o,[a],a.dtype,[[i]])},ab={kernelName:vn.rc,backendName:"webgl",kernelFunc:rb},sb=zt({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ib={kernelName:vn.tc,backendName:"webgl",kernelFunc:sb},ob={kernelName:vn.vc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],c=vn.si.parseAxisParam(s,a.shape);let l=c;const d=vn.Vd.getAxesPermutation(l,o);let h,p=a;if(null!=d&&(p=Gt({inputs:{x:a},backend:n,attrs:{perm:d}}),l=vn.Vd.getInnerMostAxes(l.length,o),u.push(p)),vn.Vd.assertAxesAreInnerMostDims("prod",l,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=hd(p.shape,p.dtype,e,l);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=vn.Vd.computeOutAndReduceShapes(p.shape,l),r=vn.si.sizeFromShape(t),s=Bt({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=Vt(s,Object(vn.Th)(a.dtype),"prod",n);h=Bt({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(h);const e=vn.Vd.expandShapeToKeepDim(h.shape,c);h=Bt({inputs:{x:h},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ub=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=pd(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},cb={kernelName:vn.xc,backendName:"webgl",kernelFunc:ub},lb=Mt({opSnippet:"return 1.0 / x;"}),db={kernelName:vn.Bc,backendName:"webgl",kernelFunc:lb},hb=Mt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),pb={kernelName:vn.Dc,backendName:"webgl",kernelFunc:hb},fb=Mt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),mb={kernelName:vn.Ec,backendName:"webgl",kernelFunc:fb};class bb{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class gb{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const yb={kernelName:vn.Gc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=Object(vn.Ye)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gb(a.shape,u,c,s,i):new bb(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],"float32")}};class xb{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const vb={kernelName:vn.Hc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new xb(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class wb{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Ob{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const kb={kernelName:vn.Ic,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=Object(vn.Ye)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ob(a.shape,u,c,s,i):new wb(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],a.dtype)}};class Ib{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Sb={kernelName:vn.Jc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Ib(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class jb{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=pt(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Nb{constructor(e,t){function n(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const a=Et("rc",r),s=`${a[r-1]} + 1 < ${this.outputShape[r-1]}`,i=`${a[r-2]} + 1 < ${this.outputShape[r-2]}`,o=pt(r);this.userCode=1===r?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return n(e)}(a.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[r-1]="("+e[r-1]+" + 1)",n(e)}(a.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[r-2]="("+e[r-2]+" + 1)",n(e)}(a.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[r-1]="("+e[r-1]+" + 1)",e[r-2]="("+e[r-2]+" + 1)",n(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Tb={kernelName:vn.Kc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=vn.si.parseAxisParam(s,a.shape);if(0===i)return Ft({inputs:{x:a},backend:n});const u=Object(vn.Ye)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nb(a.shape,o):new jb(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};class Cb{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Eb={kernelName:vn.Lc,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new Cb(r.shape,s),[c,l]=vn.Vd.getImageCenter(i,r.shape[1],r.shape[2]),d=[[c,l,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,d)}},Ab=Mt({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),$b={kernelName:vn.Mc,backendName:"webgl",kernelFunc:Ab},Rb=Mt({opSnippet:"return inversesqrt(x);",cpuKernelImpl:fd}),Db={kernelName:vn.Nc,backendName:"webgl",kernelFunc:Rb};class Fb{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=pt(a.length),u=pt(s.length);let c="";1===n?c="i":2===n&&(c="i, j");let l="";1===r?l="i":2===r&&(l="i, coords[1]");this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${`getIndices(${c})`});\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${`getUpdates(${l})`};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const _b={kernelName:vn.Pc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=vn.Vd.calculateShapes(s,a,i),h=[d/c,c];if(0===d)return n.makeTensorInfo(i,a.dtype);const p=Bt({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=Bt({inputs:{x:s},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),b=new Fb(u,o,p.shape.length,f.shape.length,l,h),g=n.runWebGLProgram(b,[f,p,m],f.dtype),y=Bt({inputs:{x:g},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),y}};class Mb{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=pt(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const zb={kernelName:vn.Qc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new Mb(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Object(vn.ri)(a.dtype,s.dtype))}},Lb=Mt({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${vn.Vd.SELU_SCALEALPHA};\n  float scale = ${vn.Vd.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Pb={kernelName:vn.Rc,backendName:"webgl",kernelFunc:Lb},Bb=Mt({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:md}),Vb={kernelName:vn.Sc,backendName:"webgl",kernelFunc:Bb},Wb=Mt({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Ub={kernelName:vn.Tc,backendName:"webgl",kernelFunc:Wb},Gb=Mt({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),qb={kernelName:vn.Uc,backendName:"webgl",kernelFunc:Gb},Hb=Mt({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Yb={kernelName:vn.Vc,backendName:"webgl",kernelFunc:Hb},Kb=Mt({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Xb={kernelName:vn.Yc,backendName:"webgl",kernelFunc:Kb},Zb={kernelName:vn.Zc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;vn.si.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const c=[],l=rb({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=vn.Vd.getReshaped(l.shape,s,o,!1),h=vn.Vd.getPermuted(d.length,s.length,!1),p=vn.Vd.getReshapedPermuted(l.shape,s,o,!1),f=Bt({inputs:{x:l},backend:n,attrs:{shape:d}}),m=Gt({inputs:{x:f},backend:n,attrs:{perm:h}}),b=Bt({inputs:{x:m},backend:n,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},Qb={kernelName:vn.ad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[d,h,p,f,m]=yd(o,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},Jb={kernelName:vn.bd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[c,l,d]=xd(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},eg={kernelName:vn.cd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[c,l]=vd(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(l,r.dtype,c)}},tg={kernelName:vn.dd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[c,l]=vd(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(l,r.dtype,c)}},ng={kernelName:vn.ed,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,strides:l,outputSize:d}=vn.Vd.calculateShapes(s,a,o),h=new Fb(c,u,a.shape.length,s.shape.length,l,[d,1],!1),p=n.runWebGLProgram(h,[s,a,i],s.dtype),f=Bt({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},rg={kernelName:vn.fd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=vn.si.parseAxisParam(i,a.shape)[0],u=vn.Vd.prepareSplitSize(a,s,o),c=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map((e=>{const t=[...l];t[o]=e;const r=Zt({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},ag="return sqrt(x);",sg=Mt({opSnippet:ag,packedOpSnippet:ag,cpuKernelImpl:wd}),ig={kernelName:vn.gd,backendName:"webgl",kernelFunc:sg},og=Mt({opSnippet:"return x * x;"}),ug={kernelName:vn.hd,backendName:"webgl",kernelFunc:og},cg="return (a - b) * (a - b);",lg=zt({opSnippet:cg,packedOpSnippet:cg}),dg={kernelName:vn.id,backendName:"webgl",kernelFunc:lg},hg={kernelName:vn.jd,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=new Dd(r.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return n.runWebGLProgram(a,[r],r.dtype)}};class pg{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=pt(n.length),s=pt(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const fg={kernelName:vn.kd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:b,isSimpleSlice:g,begin:y,end:x,strides:v}=vn.Bh.sliceInfo(a.shape,s,i,o,u,c,l,d,h);let w;if(m)w=Bt({inputs:{x:a},backend:n,attrs:{shape:f}});else if(b||g){vn.si.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=vn.Bh.computeOutShape(y,x,v),t=Zt({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});w=Bt({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=Object(vn.ie)(a.shape,a.dtype,e),r=Od(p,t,v,y);w=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new pg(y,v,p);w=n.runWebGLProgram(e,[a],a.dtype)}}const O=Bt({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),O}},mg={kernelName:vn.ld,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,h=n.readSync(l.dataId),p=n.readSync(d.dataId),[f,m]=kd(h,p,a,s,i,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},bg={kernelName:vn.md,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[c,l,d]=Id(o,u,a),h=l.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},gg={kernelName:vn.nd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=Sd(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},yg=Mt({opSnippet:"return tan(x);"}),xg={kernelName:vn.qd,backendName:"webgl",kernelFunc:yg},vg=Mt({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),wg={kernelName:vn.rd,backendName:"webgl",kernelFunc:vg};class Og{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=pt(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}const kg={kernelName:vn.ud,backendName:"webgl",kernelFunc:bn};class Ig{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Sg{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}const jg={kernelName:vn.vd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Object(vn.Ye)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Object(vn.Ye)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,l=c[c.length-1];if(n.shouldExecuteOnCPU([a])||l<o||s>u){const e=n.readSync(a.dataId),[t,r]=Td(e,c,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===l)return[a,dn({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const d=n.texData.get(a.dataId),h=null!==d&&d.isPacked,p=h?n.unpackTensor(a):a,f=vn.si.sizeFromShape(c)/l,m=Bt({inputs:{x:p},attrs:{shape:[f,l]},backend:n});h&&gn(n,p);const b=yn(s),g=yn(l);let y=null;const x=()=>null===y?[m,m]:[m,y],v=(e,t,r)=>{const a=x(),s=new Ig(r),i=y;y=n.runWebGLProgram(s,a,"int32",[[l],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]]),gn(n,i)};for(let e=1;e<b;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,g])}for(let e=g;e>b;e/=2){const t=x(),r=new Sg([f,e/2]),a=y;y=n.runWebGLProgram(r,t,"int32",[[l],[null===y?1:0],[b]]),gn(n,a);const s=b/2,i=2*s;for(let e=s;e>=1;e/=2)v(i,e,y.shape)}let w=y;y=Zt({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,s]}}),gn(n,w);let O=hn({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});gn(n,m);const k=c.slice(0,-1);k.push(s),w=y,y=Bt({inputs:{x:y},attrs:{shape:k},backend:n}),gn(n,w);const I=O;return O=Bt({inputs:{x:O},attrs:{shape:k},backend:n}),gn(n,I),[O,y]}};class Ng{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Tg={kernelName:vn.wd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=r,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=new Ng(d,h,i,o,u,[l,f,m,p]);return n.runWebGLProgram(b,[a,s],"float32")}},Cg={kernelName:vn.yd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;tt(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=Ed(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},Eg={kernelName:vn.zd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(c[l++]=i.shape[e]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[s]=e;const t=Zt({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),r=Bt({inputs:{x:t},backend:n,attrs:{shape:c}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Ag{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const $g=[hh,fh,bh,yh,wh,Ih,Sh,jh,Ch,Eh,$h,Dh,_h,zh,Ph,Wh,Uh,Hh,Yh,Kh,Qh,rp,ap,sp,cp,hp,mp,qd,gp,wp,Sp,Ep,Ap,$p,Rp,Dp,_p,zp,Pp,Vp,Wp,Gp,Yp,Zp,Qp,ef,nf,rf,sf,of,cf,df,pf,ff,gf,xf,wf,kf,jf,Tf,Af,Rf,Df,_f,zf,Pf,Vf,Gd,Wf,vp,Gf,Hf,Kf,Kd,Zf,Jf,em,nm,am,im,um,lm,pm,mm,bm,ym,xm,vm,km,Im,Sm,jm,Nm,Cm,$m,Dm,Vm,ah,Wm,Gm,Hm,Km,op,Zm,Jm,eb,ab,ib,Qd,ob,cb,up,Mm,db,pb,mb,sh,yb,vb,kb,Sb,Tb,Eb,$b,Db,_b,zb,Pb,Vb,Ub,qb,Yb,np,Bm,Xb,Zb,Qb,Jb,eg,tg,ng,rg,ig,ug,dg,hg,fg,mg,bg,gg,Pm,lh,xg,wg,kg,jg,Tg,dh,Cg,Eg,{kernelName:vn.Ad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let c=0;const l=vn.Vd.getAxesPermutation([c],o);let d=a;null!=l&&(d=Gt({inputs:{x:a},backend:n,attrs:{perm:l}}),u.push(d),c=vn.Vd.getInnerMostAxes(1,o)[0]);const h=vn.Vd.segment_util.computeOutShape(d.shape,c,i),p=vn.si.sizeFromShape([d.shape[c]]),f=Bt({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=Object(vn.Th)(a.dtype),b=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],c=vn.Vd.segment_util.segOpComputeOptimalWindowSize(o,s),l=new Ag({windowSize:c,inSize:o,batchSize:i,numSegments:s},t),d=n.compileAndRun(l,[e,r],a);if(u.push(d),d.shape[1]===s)return d;const h=ub({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=bn({inputs:{x:h},backend:n,attrs:{reps:[o/c]}});u.push(h),u.push(p);return b(d,t,p,a,s)},g=Bt({inputs:{x:b(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:h}});let y=g;if(null!=l){u.push(g);const e=vn.Vd.getUndoAxesPermutation(l);y=Gt({inputs:{x:y},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Qm];for(const e of $g)Object(vn.Vg)(e);const Rg={"tfjs-core":vn.xi,"tfjs-backend-cpu":"3.13.0","tfjs-backend-webgl":"3.13.0","tfjs-data":Ts.version_data,"tfjs-layers":za.x,"tfjs-converter":Ns,tfjs:"3.13.0"}},UY8A:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("tFNL"),u=n("6D6q"),c=n("6RbH");const l=Object(u.b)({conv2d_:function(e,t,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(e,"x","conv2d","float32"),f=Object(s.a)(t,"filter","conv2d","float32");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.b(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.a("conv2d",u,h);const g="NHWC"===l?m.shape[3]:m.shape[1];i.b(g===f.shape[2],(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`)),i.b(o.i(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`));const y=r.a.runKernel(a.D,{x:m,filter:f},{strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h});return b?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},Ukiz:function(e,t,n){"use strict";function r(e,t){i[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function a(e){return i[e]}function s(e){delete i[e]}n.d(t,"c",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return s}));const i={}},Uom0:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({unsortedSegmentSum_:function(e,t,n){const o=Object(s.a)(e,"x","unsortedSegmentSum"),u=Object(s.a)(t,"segmentIds","unsortedSegmentSum","int32");return Object(i.b)(Object(i.v)(n),(()=>"numSegments must be of dtype int")),r.a.runKernel(a.id,{x:o,segmentIds:u},{numSegments:n})}})},V0g5:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({isInf_:function(e){const t=Object(s.a)(e,"x","isInf");return r.a.runKernel(a.vb,{x:t})}})},V7pg:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({log_:function(e){const t=Object(s.a)(e,"x","log","float32");return r.a.runKernel(a.Db,{x:t})}})},VWKH:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({cast_:function(e,t){const n=Object(s.a)(e,"x","cast");if(!i.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return r.a.runKernel(a.x,{x:n},{dtype:t})}})},VYYy:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({tan_:function(e){const t=Object(s.a)(e,"x","tan","float32");return r.a.runKernel(a.ad,{x:t})}})},Vjgs:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},Vloo:function(e,t,n){"use strict";function r(e,t,n,r){const s=Object(p.j)(t),u=function(e,t,n,r){const s=Object(p.O)(t),i=r[r.length-1],u=new Array(i).fill(0),c=t.length,l="complex64"===n?o(e):e;if(c>1)for(let e=0;e<s/i;e++){const t=e*i;for(let e=0;e<i;e++)u[e]=Math.max(u[e],a(l[t+e],0,n).length)}return u}(e,t,n,s),c=t.length,l=i(e,t,n,s,u),d=["Tensor"];return r&&(d.push(`  dtype: ${n}`),d.push(`  rank: ${c}`),d.push(`  shape: [${t}]`),d.push("  values:")),d.push(l.map((e=>"    "+e)).join("\n")),d.join("\n")}function a(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Object(p.z)(e)?`'${e}'`:"bool"===n?s(e):parseFloat(e.toFixed(7)).toString(),Object(p.L)(r,t)}function s(e){return 0===e?"false":"true"}function i(e,t,n,r,u,c=!0){const l="complex64"===n?2:1,d=t[0],h=t.length;if(0===h){if("complex64"===n){return[a(o(e)[0],0,n)]}return"bool"===n?[s(e[0])]:[e[0].toString()]}if(1===h){if(d>20){let t=Array.from(e.slice(0,3*l)),r=Array.from(e.slice((d-3)*l,d*l));return"complex64"===n&&(t=o(t),r=o(r)),["["+t.map(((e,t)=>a(e,u[t],n))).join(", ")+", ..., "+r.map(((e,t)=>a(e,u[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?o(e):Array.from(e)).map(((e,t)=>a(e,u[t],n))).join(", ")+"]"]}const p=t.slice(1),f=r.slice(1),m=r[0]*l,b=[];if(d>20){for(let t=0;t<3;t++){const r=t*m;b.push(...i(e.slice(r,r+m),p,n,f,u,!1))}b.push("...");for(let t=d-3;t<d;t++){const r=t*m;b.push(...i(e.slice(r,r+m),p,n,f,u,t===d-1))}}else for(let t=0;t<d;t++){const r=t*m;b.push(...i(e.slice(r,r+m),p,n,f,u,t===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let e=1;e<b.length-1;e++)b[e]=" "+b[e]+g;let y=",\n";for(let e=2;e<h;e++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(c?"":y),b}function o(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function u(e){b=e}function c(e){g=e}function l(e){y=e}function d(){return Object(h.a)("Tensor",(()=>x))}n.d(t,"b",(function(){return m})),n.d(t,"g",(function(){return u})),n.d(t,"f",(function(){return c})),n.d(t,"e",(function(){return l})),n.d(t,"a",(function(){return x})),n.d(t,"d",(function(){return d})),n.d(t,"c",(function(){return v}));var h=n("QP9L"),p=n("qCmv");var f=n("Mxc4");class m{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=p.O(e),null!=n){const e=n.length;p.b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||p.n(t,this.size),this.strides=Object(p.j)(e)}set(e,...t){0===t.length&&(t=[0]),p.b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){throw new Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return b().makeTensor(this.values,this.shape,this.dtype)}}let b=null,g=null,y=null;class x{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=p.O(e),this.strides=Object(p.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(p.U)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(p.U)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=b().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>f.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),b().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=b().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>f.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await b().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(b().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(e=!1){return r(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),b().makeVariable(this,e,t,n)}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),d();class v extends x{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!p.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);b().disposeTensor(this),this.dataId=e.dataId,b().incRef(this,null)}dispose(){b().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:e=>e instanceof x&&null!=e.assign&&e.assign instanceof Function})},VncX:function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}n.r(t),n.d(t,"getBroadcastDims",(function(){return r})),n.d(t,"getReductionAxes",(function(){return a})),n.d(t,"assertAndGetBroadcastShape",(function(){return s}))},"Vs/U":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("qCmv"),i=n("6D6q");const o=Object(i.b)({fft_:function(e){return Object(s.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`)),r.a.runKernel(a.eb,{input:e})}})},WpCK:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({relu6_:function(e){const t=Object(s.a)(e,"x","relu6");return r.a.runKernel(a.pc,{x:t})}})},XL4q:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("Myfv"),o=n("VncX"),u=n("6D6q");const c=Object(u.b)({where_:function(e,t,n){const u=Object(s.a)(t,"a","where"),c=Object(s.a)(n,"b","where"),l=Object(s.a)(e,"condition","where","bool"),d=Object(o.assertAndGetBroadcastShape)(Object(o.assertAndGetBroadcastShape)(l.shape,u.shape),c.shape),h=Object(i.a)(l,d),p=Object(i.a)(u,d),f=Object(i.a)(c,d);return r.a.runKernel(a.Ac,{condition:h,t:p,e:f})}})},Xeik:function(e,t){"use strict";t.a={grid:"grid__8tx6m",active:"active__cREAd"}},XjY9:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({logicalNot_:function(e){const t=Object(s.a)(e,"x","logicalNot","bool");return r.a.runKernel(a.Hb,{x:t})}})},YJlT:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("tFNL"),u=n("VWKH"),c=n("6D6q"),l=n("6RbH");const d=Object(c.b)({avgPool3d_:function(e,t,n,c,d,h="NDHWC"){const p=Object(s.a)(e,"x","avgPool3d","float32");let f=p,m=!1;4===p.rank&&(m=!0,f=Object(l.a)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.b(5===f.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${f.rank}.`)),i.b("NDHWC"===h,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${h}`)),Object(o.a)("avgPool3d",c,d);let b=r.a.runKernel(a.p,{x:f},{filterSize:t,strides:n,pad:c,dimRoundingMode:d,dataFormat:h});return b=Object(u.a)(b,f.dtype),m?Object(l.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},YLoS:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("beMT"),a=n("qCmv"),s=n("UY8A"),i=n("b/7Q"),o=n("6D6q"),u=n("6RbH");const c=Object(o.b)({separableConv2d_:function(e,t,n,o,c,l=[1,1],d="NHWC"){const h=Object(r.a)(e,"x","separableConv2d"),p=Object(r.a)(t,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.b(4===p.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`)),a.b(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`)),a.b(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),a.b(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const g=p.shape[2],y=p.shape[3];a.b(f.shape[2]===g*y,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${f.shape[2]}.`));const x=Object(i.a)(m,p,o,c,d,l),v=Object(s.a)(x,f,1,"valid",d);return b?Object(u.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},Z66Z:function(e){e.exports=function(){throw new Error("define cannot be used indirect")}},ZGBu:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({cumsum_:function(e,t=0,n=!1,i=!1){const o=Object(s.a)(e,"x","cumsum");return r.a.runKernel(a.M,{x:o},{axis:t,exclusive:n,reverse:i})}})},"ZJR+":function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],r[a]=n^=(e^=e<<13)^e<<9,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},ZLVG:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n("bsxM"),a=n("PurG"),s=n("393e"),i=n("TvjY"),o=n("6D6q"),u=n("9oR1"),c=n("6RbH"),l=n("5gGe"),d=n("pRRN"),h=n("O7pG"),p=n("qzbf");const f=Object(o.b)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=Object(c.a)(e,[n,t]);o=Object(p.a)(r)}else{const f=[n,2*(t-1)],m=Object(c.a)(Object(u.a)(e),[n,t]),b=Object(c.a)(Object(s.a)(e),[n,t]),g=Object(l.a)(Object(h.a)(m,[0,1],[n,t-2]),1),y=Object(i.a)(Object(l.a)(Object(h.a)(b,[0,1],[n,t-2]),1),Object(d.a)(-1)),x=Object(a.a)([m,g],1),v=Object(a.a)([b,y],1),w=Object(c.a)(Object(r.a)(x,v),[f[0],f[1]]);o=Object(p.a)(w)}if(o=Object(u.a)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=Object(c.a)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},ZQ8H:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({clone_:function(e){const t=Object(s.a)(e,"x","clone","string_or_numeric");return r.a.runKernel(a.sb,{x:t})}})},ZRUZ:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({zerosLike_:function(e){const t=Object(s.a)(e,"x","zerosLike");return r.a.runKernel(a.jd,{x:t})}})},ZWjI:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},ZuVY:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("VncX"),u=n("VWKH"),c=n("6D6q");const l=Object(c.b)({maximum_:function(e,t){let n=Object(i.a)(e,"a","maximum"),c=Object(i.a)(t,"b","maximum");return[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.assertAndGetBroadcastShape)(n.shape,c.shape),r.a.runKernel(a.Pb,{a:n,b:c})}})},a4Lf:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},a4Y6:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("6D6q");const u=Object(o.b)({floorDiv_:function(e,t){let n=Object(i.a)(e,"a","floorDiv"),o=Object(i.a)(t,"b","floorDiv");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.ib,{a:n,b:o})}})},an0W:function(e,t,n){"use strict";function r(e,t=null){return new class extends g{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function a(e){return r((async()=>Object(m.f)(e)),e.length)}function s(e){if(!Object(b.e)(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return r((async()=>{const t=await Object(b.c)(e,(e=>{if(e instanceof g)return{value:e.iterator(),recurse:!1};if(Object(b.e)(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}));return Object(m.g)(t,m.c.SHORTEST)}),t)}function i(e){if(null===e)return null;const t=e[0];if(Object(b.a)(t)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof p.sd?p.Nh(e):p.Wh(e)}(e),recurse:!1}}return{value:null,recurse:!0}}function o(e){return"string"==typeof e&&"file://"===e.substr(0,7)}function u(e,t={}){return new S(new R(e),t)}function c(e){const t=Object(m.e)(e);return r((async()=>t))}function l(e){return r((async()=>{const t=await e();return Object(m.e)((()=>t.next()))}))}async function d(e,t){return N.create(e,t)}async function h(e){return j.create(e)}n.r(t),n.d(t,"array",(function(){return a})),n.d(t,"Dataset",(function(){return g})),n.d(t,"zip",(function(){return s})),n.d(t,"CSVDataset",(function(){return S})),n.d(t,"TextLineDataset",(function(){return y})),n.d(t,"csv",(function(){return u})),n.d(t,"func",(function(){return c})),n.d(t,"generator",(function(){return l})),n.d(t,"microphone",(function(){return h})),n.d(t,"webcam",(function(){return d})),n.d(t,"FileDataSource",(function(){return $})),n.d(t,"URLDataSource",(function(){return R})),n.d(t,"version_data",(function(){return D}));var p=n("HIu9"),f=n("85g6"),m=n("cB/u"),b=n("gzV2");class g{constructor(){this.size=null}batch(e,t=!0){const n=this;let a;return p.si.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),r((async function(){return(await n.iterator()).columnMajorBatch(e,t,i)}),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,r((async function(){return(await t.iterator()).concatenate(await e.iterator())}),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,r((async function(){return(await t.iterator()).filter((t=>p.fi((()=>e(t)))))}),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return r((async function(){return(await t.iterator()).map((t=>p.fi((()=>e(t)))))}),this.size)}mapAsync(e){const t=this;return r((async function(){return(await t.iterator()).mapAsync(e)}),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return r((async function(){return(await t.iterator()).prefetch(e)}),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,r((async function(){const n=Object(m.e)((async function(){return{value:await t.iterator(),done:!1}}));return Object(m.d)(n.take(e))}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,r((async function(){return(await t.iterator()).skip(e)}),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,s=f.alea(t||p.si.now().toString());return r((async function(){let t=s.int32();return n&&(t+=s.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,r((async function(){return(await t.iterator()).take(e)}),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}g.MAX_BUFFER_SIZE=1e4;class y extends g{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const x='"',v=Symbol("out"),w=Symbol("field"),O=Symbol("quote"),k=Symbol("quoteafterquote"),I=Symbol("quoteinquote");class S extends g{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new y(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(p.si.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&p.si.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(p.si.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");return this.parseRow(t.value,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=v;for(let t=0;t<a;t++)switch(s){case v:switch(e.charAt(t)){case x:r=t+1,s=O;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=v;break;default:s=w,r=t}break;case w:if(e.charAt(t)===this.delimiter)n.push(e.substring(r,t)),s=v,r=t+1;break;case O:if(e.charAt(t)===x)s=k;break;case k:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=v,r=t+1;break;case x:s=O;break;default:s=I}break;case I:if(e.charAt(t)===x)s=O}if(n.push(s===k?e.substring(r,a-1):e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class j extends m.a{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Object(p.Ye)().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new j(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(p.si.sizeFromShape(t));return n.set(e,n.length-e.length),Object(p.Wh)(n,t)}}class N extends m.a{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Object(p.Xh)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Object(p.Yh)([r,n,s,a],[1,4])}else this.cropBox=Object(p.Yh)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Object(p.Ye)().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new N(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&p.si.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=p.he.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Object(p.fi)((()=>{const t=Object(p.cf)(Object(p.je)(e,"float32"),0);let n;n=p.zf.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return Object(p.Zg)(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class T{}var C=n("DYs2");class E extends C.a{constructor(e,t={}){super(),this.file=e,this.options=t,p.si.assert(e instanceof Uint8Array||!!Object(p.Ye)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=()=>{let n=r.result;if(n instanceof ArrayBuffer&&(n=new Uint8Array(n)),!(n instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(n)},r.onabort=()=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}));return{value:await e,done:!1}}}const A=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});class $ extends T{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(o(this.input)&&Object(p.Ye)().get("IS_NODE")){const e=n(6);this.input=e.readFileSync(this.input.substr(7))}return new E(this.input,this.options)}}class R extends T{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return o(this.url)?new $(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=A(e));const s=await(n||p.si.fetch)(r,a);if(s.ok){const e=new Uint8Array(await s.arrayBuffer());return new E(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}}const D="3.13.0"},axJg:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("VncX"),o=n("6D6q");const u=Object(o.b)({logicalAnd_:function(e,t){const n=Object(s.a)(e,"a","logicalAnd","bool"),o=Object(s.a)(t,"b","logicalAnd","bool");return Object(i.assertAndGetBroadcastShape)(n.shape,o.shape),r.a.runKernel(a.Gb,{a:n,b:o})}})},ay1g:function(e,t,n){var r=n("SY1S"),a=n("uWjN"),s=n("o2LJ"),i=n("B6u8"),o=n("Jp6E"),u=n("f09r"),c=n("zqkP");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,e.exports=c},"b/7Q":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("tFNL"),u=n("6D6q"),c=n("6RbH");const l=Object(u.b)({depthwiseConv2d_:function(e,t,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(e,"x","depthwiseConv2d","float32"),f=Object(s.a)(t,"filter","depthwiseConv2d","float32");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),i.b(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`)),i.b(m.shape[3]===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`)),o.a("depthwiseConv2d",u,h);const g=r.a.runKernel(a.P,{x:m,filter:f},{strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h});return b?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},bH8F:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},beMT:function(e,t,n){"use strict";function r(e,t){let n=e;if(Object(d.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(d.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(c.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&a(e,r,[]),r}function a(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(d.A)(e))return void Object(d.b)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Object(d.b)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Object(d.b)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)a(e[t],r,n.concat(t))}function s(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function i(e,t,n,a="numeric"){if(e instanceof l.a)return s(a,e.dtype,t,n),e;let i=Object(d.r)(e);if("string"!==i&&["bool","int32","float32"].indexOf(a)>=0&&(i=a),s(a,i,t,n),null==e||!Object(d.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==e?"null":e.constructor.name}'`)}const o=r(e,i);Object(d.A)(e)||Array.isArray(e)||(e=[e]);const c="string"!==i?Object(h.toTypedArray)(e,i):Object(d.m)(e,[],!0);return u.a.makeTensor(c,o,i)}function o(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>i(e,`${t}[${a}]`,n,r)))}n.d(t,"c",(function(){return r})),n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o}));var u=n("QCRY"),c=n("wuGp"),l=n("Vloo"),d=n("qCmv"),h=n("Mxc4")},bhue:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({pad_:function(e,t,n=0){const i=Object(s.a)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return r.a.runKernel(a.fc,{x:i},{paddings:t,constantValue:n})}})},bsxM:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({complex_:function(e,t){const n=Object(s.a)(e,"real","complex"),o=Object(s.a)(t,"imag","complex");return i.e(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`),r.a.runKernel(a.A,{real:n,imag:o})}})},c2T0:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return i}));var r=n("ay1g");n("4JSp");class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s*=1/this.beta*this.d,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},"cB/u":function(e,t,n){"use strict";function r(e){return e instanceof c.sd?{value:e.clone(),recurse:!1}:Object(d.e)(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}function a(e){return new m(e)}function s(e){return new b(e)}function i(e,t){return new N(e,t)}function o(e,t=u.FAIL){return new T(e,t)}n.d(t,"f",(function(){return a})),n.d(t,"e",(function(){return s})),n.d(t,"d",(function(){return i})),n.d(t,"g",(function(){return o})),n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return S})),n.d(t,"c",(function(){return u}));var u,c=n("HIu9"),l=n("85g6"),d=n("gzV2");class h{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class p extends h{constructor(){super(p.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}p.INITIAL_CAPACITY=32;class f{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new k(this,e)}filter(e){return new w(this,e)}map(e){return new O(this,e)}mapAsync(e){return new I(this,e)}serialMapAsync(e){return new I(this,e).serial()}flatmap(e){return new j(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new v(this,e,t)}columnMajorBatch(e,t=!0,n=d.f){return this.rowMajorBatch(e,t).map((e=>Object(d.d)(e,n)))}concatenate(e,t){return new N(a([this,e]),t)}take(e){return e<0||null==e?this:new x(this,e)}skip(e){return e<0||null==e?this:new y(this,e)}prefetch(e){return new C(this,e)}shuffle(e,t){return new E(this,e,t)}serial(){return new g(this)}}class m extends f{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,Object(d.b)(t,r)),done:!1};var t}}class b extends f{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class g extends f{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;c.Me(e.value)}return this.upstream.next()}}class x extends f{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class v extends f{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class w extends f{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;c.Me(e.value)}}}class O extends f{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=c.di.getTensorsInContainer(e.value),n=this.transform(e.value),r=c.di.getTensorsInContainer(n);for(const e of t)c.di.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class k extends f{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class I extends f{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=c.di.getTensorsInContainer(e.value),n=await this.transform(e.value),r=c.di.getTensorsInContainer(n);for(const e of t)c.di.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class S extends f{constructor(){super(),this.outputQueue=new p,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class j extends S{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=c.di.getTensorsInContainer(e.value),n=this.transform(e.value),r=c.di.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)c.di.isTensorInList(e,r)||e.dispose();return!0}}class N extends f{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(u||(u={}));class T extends f{constructor(e,t=u.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await Object(d.c)(this.iterators,(function(e){if(e instanceof f){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case u.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case u.SHORTEST:return{value:null,done:!0}}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class C extends f{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new h(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class E extends C{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=l.alea(n||c.si.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}},ckYy:function(e,t,n){"use strict";function r(e){return p.b(p.u(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Object(h.a)(t,"x","tf.grad","string_or_numeric"),a=null!=n?Object(h.a)(n,"dy","tf.grad"):null;return l.a.tidy((()=>{const{value:t,grads:n}=l.a.gradients((()=>e(r)),[r],a);return null!=a&&p.e(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),c(n),n[0]}))}}function a(e){return p.b(p.u(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{p.b(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Object(h.b)(t,"args","tf.grads","string_or_numeric"),a=null!=n?Object(h.a)(n,"dy","tf.grads"):null;return l.a.tidy((()=>{const{value:t,grads:n}=l.a.gradients((()=>e(...r)),r,a);return null!=a&&p.e(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),c(n),n}))}}function s(e){return p.b(p.u(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{p.b(t instanceof d.a,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),p.b(null==n||n instanceof d.a,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=l.a.gradients((()=>e(t)),[t],n);return c(r),{grad:r[0],value:a}}}function i(e){return p.b(p.u(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{p.b(Array.isArray(t)&&t.every((e=>e instanceof d.a)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),p.b(null==n||n instanceof d.a,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=l.a.gradients((()=>e(...t)),t,n);return null!=n&&p.e(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),c(r.grads),r}}function o(e,t){p.b(p.u(e),(()=>"The f passed in variableGrads(f) must be a function")),p.b(null==t||Array.isArray(t)&&t.every((e=>e instanceof d.c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in l.a.registeredVariables)t.push(l.a.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),p.b(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=l.a.gradients(e,t,null,!0);p.b(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),p.b(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function u(e){return l.a.customGrad(e)}function c(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}n.d(t,"a",(function(){return u})),n.d(t,"f",(function(){return o})),n.d(t,"d",(function(){return s})),n.d(t,"e",(function(){return i})),n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return a}));var l=n("QCRY"),d=n("Vloo"),h=n("beMT"),p=n("qCmv")},cuXz:function(e,t,n){"use strict";function r(e,t="float32"){if("complex64"===t){const t=r(e,"float32"),n=r(e,"float32");return Object(i.a)(t,n)}const n=Object(s.F)(Object(s.O)(e),t);return a.a.makeTensor(n,e,t)}n.d(t,"a",(function(){return r}));var a=n("QCRY"),s=n("qCmv"),i=n("bsxM")},dKcc:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({expandDims_:function(e,t=0){const n=Object(s.a)(e,"x","expandDims","string_or_numeric");return i.b(t<=n.rank,(()=>"Axis must be <= rank of the tensor")),r.a.runKernel(a.cb,{input:n},{dim:t})}})},dMGs:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q"),o=n("6RbH");const u=Object(i.b)({multinomial_:function(e,t,n,i=!1){const u=Object(s.a)(e,"logits","multinomial"),c=u.size,l=u.rank;if(c<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${c}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const d=1===l?Object(o.a)(u,[1,-1]):u,h=r.a.runKernel(a.Vb,{logits:d},{numSamples:t,seed:n,normalized:i});return 1===l?Object(o.a)(h,[h.size]):h}})},dRLb:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({round_:function(e){const t=Object(s.a)(e,"x","round");return r.a.runKernel(a.xc,{x:t})}})},dkjg:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},dsom:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({rsqrt_:function(e){const t=Object(s.a)(e,"x","rsqrt","float32");return r.a.runKernel(a.yc,{x:t})}})},"f/sF":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({mean_:function(e,t=null,n=!1){const i=Object(s.a)(e,"x","mean");return r.a.runKernel(a.Qb,{x:i},{axis:t,keepDims:n})}})},f09r:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},f1WP:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n("beMT"),a=n("qCmv"),s=n("IjOl"),i=n("By71"),o=n("pI0a"),u=n("V7pg"),c=n("tsju"),l=n("6D6q"),d=n("6RbH"),h=n("7JZ3"),p=n("zFAV");const f=Object(l.b)({logSumExp_:function(e,t=null,n=!1){const l=Object(r.a)(e,"x","logSumExp"),f=Object(a.I)(t,l.shape),m=Object(c.a)(l,f,!0),b=Object(h.a)(l,m),g=Object(o.a)(b),y=Object(p.a)(g,f),x=Object(u.a)(y),v=Object(s.a)(Object(d.a)(m,x.shape),x);if(n){const e=Object(i.e)(v.shape,f);return Object(d.a)(v,e)}return v}})},f62m:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({isNaN_:function(e){const t=Object(s.a)(e,"x","isNaN");return r.a.runKernel(a.wb,{x:t})}})},f7fD:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return i})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return h})),n.d(t,"k",(function(){return p})),n.d(t,"l",(function(){return f})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return b})),n.d(t,"o",(function(){return g})),n.d(t,"r",(function(){return y})),n.d(t,"p",(function(){return x})),n.d(t,"q",(function(){return v})),n.d(t,"s",(function(){return w})),n.d(t,"t",(function(){return O})),n.d(t,"u",(function(){return k})),n.d(t,"w",(function(){return I})),n.d(t,"v",(function(){return S})),n.d(t,"x",(function(){return j})),n.d(t,"y",(function(){return N})),n.d(t,"z",(function(){return T})),n.d(t,"A",(function(){return C})),n.d(t,"B",(function(){return E})),n.d(t,"C",(function(){return A})),n.d(t,"D",(function(){return $})),n.d(t,"E",(function(){return R})),n.d(t,"F",(function(){return D})),n.d(t,"G",(function(){return F})),n.d(t,"H",(function(){return _})),n.d(t,"I",(function(){return M})),n.d(t,"J",(function(){return z})),n.d(t,"K",(function(){return L})),n.d(t,"M",(function(){return P})),n.d(t,"L",(function(){return B})),n.d(t,"N",(function(){return V})),n.d(t,"O",(function(){return W})),n.d(t,"P",(function(){return U})),n.d(t,"Q",(function(){return G})),n.d(t,"R",(function(){return q})),n.d(t,"S",(function(){return H})),n.d(t,"T",(function(){return Y})),n.d(t,"V",(function(){return K})),n.d(t,"U",(function(){return X})),n.d(t,"mc",(function(){return Z})),n.d(t,"W",(function(){return Q})),n.d(t,"X",(function(){return J})),n.d(t,"Y",(function(){return ee})),n.d(t,"ab",(function(){return te})),n.d(t,"Z",(function(){return ne})),n.d(t,"bb",(function(){return re})),n.d(t,"cb",(function(){return ae})),n.d(t,"db",(function(){return se})),n.d(t,"eb",(function(){return ie})),n.d(t,"fb",(function(){return oe})),n.d(t,"gb",(function(){return ue})),n.d(t,"hb",(function(){return ce})),n.d(t,"ib",(function(){return le})),n.d(t,"kb",(function(){return de})),n.d(t,"ob",(function(){return he})),n.d(t,"nb",(function(){return pe})),n.d(t,"pb",(function(){return fe})),n.d(t,"qb",(function(){return me})),n.d(t,"sb",(function(){return be})),n.d(t,"rb",(function(){return ge})),n.d(t,"tb",(function(){return ye})),n.d(t,"ub",(function(){return xe})),n.d(t,"vb",(function(){return ve})),n.d(t,"wb",(function(){return we})),n.d(t,"zb",(function(){return Oe})),n.d(t,"Ab",(function(){return ke})),n.d(t,"Bb",(function(){return Ie})),n.d(t,"Cb",(function(){return Se})),n.d(t,"Db",(function(){return je})),n.d(t,"Eb",(function(){return Ne})),n.d(t,"Gb",(function(){return Te})),n.d(t,"Hb",(function(){return Ce})),n.d(t,"Ib",(function(){return Ee})),n.d(t,"Fb",(function(){return Ae})),n.d(t,"xb",(function(){return $e})),n.d(t,"yb",(function(){return Re})),n.d(t,"Jb",(function(){return De})),n.d(t,"Pb",(function(){return Fe})),n.d(t,"Kb",(function(){return _e})),n.d(t,"Nb",(function(){return Me})),n.d(t,"Lb",(function(){return ze})),n.d(t,"Mb",(function(){return Le})),n.d(t,"Ob",(function(){return Pe})),n.d(t,"Qb",(function(){return Be})),n.d(t,"Rb",(function(){return Ve})),n.d(t,"Sb",(function(){return We})),n.d(t,"Tb",(function(){return Ue})),n.d(t,"Ub",(function(){return Ge})),n.d(t,"Vb",(function(){return qe})),n.d(t,"Wb",(function(){return He})),n.d(t,"Xb",(function(){return Ye})),n.d(t,"bc",(function(){return Ke})),n.d(t,"Yb",(function(){return Xe})),n.d(t,"Zb",(function(){return Ze})),n.d(t,"ac",(function(){return Qe})),n.d(t,"dc",(function(){return Je})),n.d(t,"cc",(function(){return et})),n.d(t,"ec",(function(){return tt})),n.d(t,"fc",(function(){return nt})),n.d(t,"gc",(function(){return rt})),n.d(t,"hc",(function(){return at})),n.d(t,"ic",(function(){return st})),n.d(t,"jc",(function(){return it})),n.d(t,"kc",(function(){return ot})),n.d(t,"lc",(function(){return ut})),n.d(t,"nc",(function(){return ct})),n.d(t,"oc",(function(){return lt})),n.d(t,"qc",(function(){return dt})),n.d(t,"tc",(function(){return ht})),n.d(t,"uc",(function(){return pt})),n.d(t,"rc",(function(){return ft})),n.d(t,"sc",(function(){return mt})),n.d(t,"pc",(function(){return bt})),n.d(t,"vc",(function(){return gt})),n.d(t,"xc",(function(){return yt})),n.d(t,"yc",(function(){return xt})),n.d(t,"zc",(function(){return vt})),n.d(t,"Ac",(function(){return wt})),n.d(t,"Bc",(function(){return Ot})),n.d(t,"Gc",(function(){return kt})),n.d(t,"Ec",(function(){return It})),n.d(t,"Fc",(function(){return St})),n.d(t,"Dc",(function(){return jt})),n.d(t,"Cc",(function(){return Nt})),n.d(t,"Ic",(function(){return Tt})),n.d(t,"Qc",(function(){return Ct})),n.d(t,"Zc",(function(){return Et})),n.d(t,"Jc",(function(){return At})),n.d(t,"Pc",(function(){return $t})),n.d(t,"Hc",(function(){return Rt})),n.d(t,"Kc",(function(){return Dt})),n.d(t,"Lc",(function(){return Ft})),n.d(t,"Mc",(function(){return _t})),n.d(t,"Nc",(function(){return Mt})),n.d(t,"Oc",(function(){return zt})),n.d(t,"Sc",(function(){return Lt})),n.d(t,"Rc",(function(){return Pt})),n.d(t,"Uc",(function(){return Bt})),n.d(t,"Vc",(function(){return Vt})),n.d(t,"Wc",(function(){return Wt})),n.d(t,"Xc",(function(){return Ut})),n.d(t,"Yc",(function(){return Gt})),n.d(t,"ad",(function(){return qt})),n.d(t,"bd",(function(){return Ht})),n.d(t,"cd",(function(){return Yt})),n.d(t,"dd",(function(){return Kt})),n.d(t,"ed",(function(){return Xt})),n.d(t,"fd",(function(){return Zt})),n.d(t,"gd",(function(){return Qt})),n.d(t,"hd",(function(){return Jt})),n.d(t,"id",(function(){return en})),n.d(t,"jd",(function(){return tn})),n.d(t,"Tc",(function(){return nn})),n.d(t,"jb",(function(){return rn})),n.d(t,"wc",(function(){return an})),n.d(t,"kd",(function(){return sn})),n.d(t,"lb",(function(){return on})),n.d(t,"mb",(function(){return un}));const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",O="BatchToSpaceND",k="Bincount",I="BroadcastTo",S="BroadcastArgs",j="Cast",N="Ceil",T="ClipByValue",C="Complex",E="ComplexAbs",A="Concat",$="Conv2D",R="Conv2DBackpropFilter",D="Conv2DBackpropInput",F="Conv3D",_="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",z="Cos",L="Cosh",P="Cumsum",B="CropAndResize",V="DenseBincount",W="DepthToSpace",U="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",H="Diag",Y="Dilation2D",K="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Z="RealDiv",Q="Einsum",J="Elu",ee="EluGrad",te="Erf",ne="Equal",re="Exp",ae="ExpandDims",se="Expm1",ie="FFT",oe="Fill",ue="FlipLeftRight",ce="Floor",le="FloorDiv",de="FusedBatchNorm",he="GatherV2",pe="GatherNd",fe="Greater",me="GreaterEqual",be="Identity",ge="IFFT",ye="Imag",xe="IsFinite",ve="IsInf",we="IsNan",Oe="LeakyRelu",ke="Less",Ie="LessEqual",Se="LinSpace",je="Log",Ne="Log1p",Te="LogicalAnd",Ce="LogicalNot",Ee="LogicalOr",Ae="LogSoftmax",$e="LRN",Re="LRNGrad",De="Max",Fe="Maximum",_e="MaxPool",Me="MaxPoolGrad",ze="MaxPool3D",Le="MaxPool3DGrad",Pe="MaxPoolWithArgmax",Be="Mean",Ve="Min",We="Minimum",Ue="MirrorPad",Ge="Mod",qe="Multinomial",He="Multiply",Ye="Neg",Ke="NotEqual",Xe="NonMaxSuppressionV3",Ze="NonMaxSuppressionV4",Qe="NonMaxSuppressionV5",Je="OnesLike",et="OneHot",tt="Pack",nt="PadV2",rt="Pool",at="Pow",st="Prelu",it="Prod",ot="Range",ut="Real",ct="Reciprocal",lt="Relu",dt="Reshape",ht="ResizeNearestNeighbor",pt="ResizeNearestNeighborGrad",ft="ResizeBilinear",mt="ResizeBilinearGrad",bt="Relu6",gt="Reverse",yt="Round",xt="Rsqrt",vt="ScatterNd",wt="Select",Ot="Selu",kt="Slice",It="Sin",St="Sinh",jt="Sign",Nt="Sigmoid",Tt="Softplus",Ct="Sqrt",Et="Sum",At="SpaceToBatchND",$t="SplitV",Rt="Softmax",Dt="SparseFillEmptyRows",Ft="SparseReshape",_t="SparseSegmentMean",Mt="SparseSegmentSum",zt="SparseToDense",Lt="SquaredDifference",Pt="Square",Bt="StridedSlice",Vt="StringNGrams",Wt="StringSplit",Ut="StringToHashBucketFast",Gt="Sub",qt="Tan",Ht="Tanh",Yt="Tile",Kt="TopK",Xt="Transform",Zt="Transpose",Qt="Unique",Jt="Unpack",en="UnsortedSegmentSum",tn="ZerosLike",nn="Step",rn="FromPixels",an="RotateWithOffset",sn="_FusedMatMul",on="FusedConv2D",un="FusedDepthwiseConv2D"},ff9U:function(e,t,n){"use strict";var r,a;n.d(t,"a",(function(){return r})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(r||(r={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(a||(a={}))},fihT:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},fr4c:function(e,t,n){"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||a)}(e,t,n);e.splice(r<0?-(r+1):r,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return u(e,t,n,r,a,0)}function i(e,t,n,r,a,s){return u(e,t,n,r,a,0,!1,s,!0)}function o(e,t,n,r,a,s){return u(e,t,n,r,a,s,!0)}function u(e,t,n,a,s,i,o=!1,u=!1,h=!1){const p=[];for(let e=0;e<t.length;e++)t[e]>s&&p.push({score:t[e],boxIndex:e,suppressBeginIndex:0});p.sort(d);const f=i>0?-.5/i:0,m=[],b=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<s)break;let u=!1;for(let n=m.length-1;n>=o;--n){const r=c(e,i,m[n]);if(r>=a){u=!0;break}if(t.score=t.score*l(a,f,r),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),b.push(t.score)):t.score>s&&r(p,t,d))}const g=m.length,y=n-g;u&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=b),h&&(x.validOutputs=g),x}function c(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),y=Math.min(u,h),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(p+f-x)}function l(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return o}))},gzV2:function(e,t,n){"use strict";function r(e,t){return a(e,t)}function a(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(c(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const o=a(e[i],t,n,r);s[i]=o}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function s(e,t=o){return i(e,t)}function i(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(c(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=i(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function o(e){return null===e?null:c(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function u(e,t){const n=new Map;a(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(d.si.isPromise(t)){const r=await t;n.set(e,r)}}return a(e,t,n)}function c(e){let t=!1;if(d.Ye().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(4);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof d.sd)&&!(e instanceof Promise)&&!t)}function l(e){return null==e||(null===(t=e)||"object"!=typeof t&&"function"!=typeof t)||Array.isArray(e)||"object"==typeof e&&e instanceof d.sd||d.si.isTypedArray(e);var t}n.d(t,"b",(function(){return r})),n.d(t,"d",(function(){return s})),n.d(t,"f",(function(){return o})),n.d(t,"c",(function(){return u})),n.d(t,"e",(function(){return c})),n.d(t,"a",(function(){return l}));var d=n("HIu9")},h5te:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("beMT"),a=n("qCmv"),s=n("vTEK"),i=n("6D6q"),o=n("6RbH");const u=Object(i.b)({dot_:function(e,t){const n=Object(r.a)(e,"t1","dot"),i=Object(r.a)(t,"t2","dot");a.b(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const u=1===n.rank?n.size:n.shape[1],c=1===i.rank?i.size:i.shape[0];if(a.b(u===c,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`)),1===n.rank&&1===i.rank){const e=Object(o.a)(n,[1,-1]),t=Object(o.a)(i,[-1,1]),r=Object(s.a)(e,t);return Object(o.a)(r,[])}if(1===n.rank&&2===i.rank){const e=Object(o.a)(n,[1,-1]),t=Object(o.a)(i,[i.shape[0],i.shape[1]]),r=Object(s.a)(e,t);return Object(o.a)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=Object(o.a)(i,[-1,1]),t=Object(s.a)(n,e);return Object(o.a)(t,[t.size])}{const e=Object(o.a)(i,[i.shape[0],i.shape[1]]);return Object(s.a)(n,e)}}})},h6Fb:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("qCmv"),i=n("tFNL"),o=n("6D6q"),u=n("6RbH");const c=Object(o.b)({conv2DBackpropInput_:function(e,t,n,o,c,l="NHWC",d){s.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),s.b(4===h.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${h.length}.`)),s.b(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),s.b(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===l?h[3]:h[1],b="NHWC"===l?p.shape[3]:p.shape[1];s.b(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),s.b(b===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${b}) must match output depth for filter ${n.shape[3]}.`)),i.a("conv2dDerInput",c,d);const g=r.a.runKernel(a.F,{dy:p,filter:n},{strides:o,pad:c,dataFormat:l,dimRoundingMode:d,inputShape:h});return f?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},hYe0:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("VncX"),u=n("6D6q");const c=Object(u.b)({lessEqual_:function(e,t){let n=Object(i.a)(e,"a","lessEqual","string_or_numeric"),u=Object(i.a)(t,"b","lessEqual","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.Bb,{a:n,b:u})}})},heVN:function(e,t,n){(function(e,t){!function(e){"use strict";function n(e){delete l[e]}function r(e){if(d)setTimeout(r,0,e);else{var t=l[e];if(t){d=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(void 0,n)}}(t)}finally{n(e),d=!1}}}}if(!e.setImmediate){var a,s,i,o,u,c=1,l={},d=!1,h=e.document,p=Object.getPrototypeOf&&Object.getPrototypeOf(e);p=p&&p.setTimeout?p:e,"[object process]"==={}.toString.call(e.process)?a=function(e){t.nextTick((function(){r(e)}))}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((i=new MessageChannel).port1.onmessage=function(e){r(e.data)},a=function(e){i.port2.postMessage(e)}):h&&"onreadystatechange"in h.createElement("script")?(s=h.documentElement,a=function(e){var t=h.createElement("script");t.onreadystatechange=function(){r(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t)}):a=function(e){setTimeout(r,0,e)}:(o="setImmediate$"+Math.random()+"$",u=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(o)&&r(+t.data.slice(o.length))},e.addEventListener?e.addEventListener("message",u,!1):e.attachEvent("onmessage",u),a=function(t){e.postMessage(o+t,"*")}),p.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var r={callback:e,args:t};return l[c]=r,a(c),c++},p.clearImmediate=n}}("undefined"==typeof self?void 0===e?this:e:self)}).call(this,n("pCvA"),n("5IsQ"))},hscW:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},i2y0:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({argMin_:function(e,t=0){const n=Object(s.a)(e,"x","argMin");return r.a.runKernel(a.i,{x:n},{axis:t})}})},i5X8:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q"),u=n("6RbH");const c=Object(o.b)({resizeBilinear_:function(e,t,n=!1,o=!1){const c=Object(s.a)(e,"images","resizeBilinear");i.b(3===c.rank||4===c.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`)),i.b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.b(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,h=r.a.runKernel(a.rc,{images:l},{alignCorners:n,halfPixelCenters:o,size:t});return d?Object(u.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},i6xT:function(e,t,n){"use strict";function r(){Object(S.c)().set("PROD",!0)}function a(){Object(S.c)().set("DEBUG",!0)}function s(){Object(S.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function i(e){Object(S.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function o(){I.a.disposeVariables()}function u(){return I.a}function c(){return I.a.memory()}function l(e){return I.a.profile(e)}function d(e,t){return I.a.tidy(e,t)}function h(e){Object(N.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function p(e){return I.a.keep(e)}function f(e){return I.a.time(e)}function m(e){return I.a.setBackend(e)}function b(){return I.a.ready()}function g(){return I.a.backendName}function y(e){I.a.removeBackend(e)}function x(e){return I.a.findBackend(e)}function v(e){return I.a.findBackendFactory(e)}function w(e,t,n=1){return I.a.registerBackend(e,t,n)}function O(){return I.a.backend}function k(e,t){Object(S.c)().setPlatform(e,t)}n.d(t,"g",(function(){return r})),n.d(t,"f",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"b",(function(){return i})),n.d(t,"e",(function(){return o})),n.d(t,"h",(function(){return u})),n.d(t,"m",(function(){return c})),n.d(t,"n",(function(){return l})),n.d(t,"t",(function(){return d})),n.d(t,"d",(function(){return h})),n.d(t,"l",(function(){return p})),n.d(t,"u",(function(){return f})),n.d(t,"r",(function(){return m})),n.d(t,"o",(function(){return b})),n.d(t,"k",(function(){return g})),n.d(t,"q",(function(){return y})),n.d(t,"i",(function(){return x})),n.d(t,"j",(function(){return v})),n.d(t,"p",(function(){return w})),n.d(t,"a",(function(){return O})),n.d(t,"s",(function(){return k}));var I=n("QCRY"),S=n("wuGp"),j=n("Vloo"),N=n("0L9A");Object(j.e)(i)},i9Yk:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({onesLike_:function(e){const t=Object(s.a)(e,"x","onesLike");return r.a.runKernel(a.dc,{x:t})}})},iM3v:function(e,t,n){"use strict";function r(...e){Object(s.c)().getBool("IS_TEST")||Object(s.c)().getBool("PROD")||console.warn(...e)}function a(...e){Object(s.c)().getBool("IS_TEST")||Object(s.c)().getBool("PROD")||console.log(...e)}n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}));var s=n("wuGp")},izwh:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({isFinite_:function(e){const t=Object(s.a)(e,"x","isFinite");return r.a.runKernel(a.ub,{x:t})}})},jSy6:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("6D6q");const u=Object(o.b)({mod_:function(e,t){let n=Object(i.a)(e,"a","mod"),o=Object(i.a)(t,"b","mod");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.Ub,{a:n,b:o})}})},jeM6:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},jmCa:function(e){e.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},jtlB:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({bincount_:function(e,t,n){const o=Object(s.a)(e,"x","bincount"),u=Object(s.a)(t,"weights","bincount");return i.b("int32"===o.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`)),i.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.b(u.size===o.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${u.shape}.`)),r.a.runKernel(a.u,{x:o,weights:u},{size:n})}})},jyGP:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({asinh_:function(e){const t=Object(s.a)(e,"x","asinh");return r.a.runKernel(a.k,{x:t})}})},jyi7:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("VncX"),o=n("6D6q");const u=Object(o.b)({logicalOr_:function(e,t){const n=Object(s.a)(e,"a","logicalOr","bool"),o=Object(s.a)(t,"b","logicalOr","bool");return Object(i.assertAndGetBroadcastShape)(n.shape,o.shape),r.a.runKernel(a.Ib,{a:n,b:o})}})},k2Xj:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},kOrk:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n=a[s]=(n^=n>>>15)^(e^=e>>>12),t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=0==(n=o[127&s]^=r+(i=i+1640531527|0))?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,o[a]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},kah5:function(e){var t={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==t.call(e)}},koUT:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({transpose_:function(e,t){const n=Object(s.a)(e,"x","transpose");return null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),i.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.b(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1?n.clone():r.a.runKernel(a.fd,{x:n},{perm:t})}})},lJxj:function(e,t,n){"use strict";(function(e){n("QCRY");var t=n("OkMD"),r=n("wuGp");const a=Object(r.c)();a.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),a.registerFlag("IS_BROWSER",(()=>t.isBrowser())),a.registerFlag("IS_NODE",(()=>void 0!==e&&void 0!==e.versions&&void 0!==e.versions.node)),a.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),a.registerFlag("PROD",(()=>!1)),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>a.getBool("DEBUG"))),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),a.registerFlag("IS_TEST",(()=>!1)),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),a.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1))}).call(this,n("5IsQ"))},lVFF:function(){},ljux:function(e,t,n){var r=n("k2Xj"),a=n("AN/T"),s=n("BIT7"),i=n("JsZy"),o=n("kOrk"),u=n("DOlg"),c=n("zOuG");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,e.exports=c},m1w8:function(e,t,n){"use strict";function r(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))}function a(e,t){function n(n){return function(i){return function(n){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,a&&(s=2&n[0]?a.return:n[0]?a.throw||((s=a.return)&&s.call(a),0):a.next)&&!(s=s.call(a,n[1])).done)return s;switch(a=0,s&&(n=[2&n[0],s.value]),n[0]){case 0:case 1:s=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,a=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!(s=(s=o.trys).length>0&&s[s.length-1])&&(6===n[0]||2===n[0])){o=0;continue}if(3===n[0]&&(!s||n[1]>s[0]&&n[1]<s[3])){o.label=n[1];break}if(6===n[0]&&o.label<s[1]){o.label=s[1],s=n;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(n);break}s[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(e,o)}catch(e){n=[6,e],a=0}finally{r=s=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,i])}}var r,a,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i}function s(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function i(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,s=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)i.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=s.return)&&n.call(s)}finally{if(a)throw a.error}}return i}function o(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e}function u(e){return r(this,void 0,void 0,(function(){var t,r,s,i,o;return a(this,(function(a){switch(a.label){case 0:return"http://","https://",t="file://",0!==e.indexOf("http://")&&0!==e.indexOf("https://")?[3,3]:[4,fetch(e)];case 1:return[4,a.sent().json()];case 2:return[2,a.sent()];case 3:return 0!==e.indexOf(t)?[3,5]:(r=n("lVFF"),s=Object(T.promisify)(r.readFile),o=(i=JSON).parse,[4,s(e.slice(t.length),{encoding:"utf-8"})]);case 4:return[2,o.apply(i,[a.sent()])];case 5:throw new Error("Unsupported URL scheme in metadata URL: "+e+". Supported schemes are: http://, https://, and (node.js-only) file://")}}))}))}function c(e){return null==R&&(R=Object(N.Ud)().epsilon()),Object(N.fi)((function(){var t=Object(N.mg)(e),n=t.mean,r=t.variance;return Object(N.Oe)(Object(N.Rh)(e,n),Object(N.Hd)(Object(N.Jh)(r),R))}))}function l(e){if(e.length<2)throw new Error("Cannot normalize a Float32Array with fewer than 2 elements.");return null==R&&(R=Object(N.Ud)().epsilon()),Object(N.fi)((function(){var t=Object(N.mg)(Object(N.Xh)(e)),n=t.variance,r=t.mean.arraySync(),a=Math.sqrt(n.arraySync()),s=Array.from(e).map((function(e){return(e-r)/(a+R)}));return new Float32Array(s)}))}function d(e){return r(this,void 0,void 0,(function(){return a(this,(function(){return[2,navigator.mediaDevices.getUserMedia({audio:null==e||e,video:!1})]}))}))}function h(e){var t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((function(e,r){return n.set(e,r*t)})),n}function p(e,t){var n=new Float32Array(N.si.sizeFromShape(t));return n.set(e,n.length-e.length),Object(N.Wh)(n,t)}function f(e){var t=0;e.forEach((function(e){t+=e.byteLength}));var n=new Uint8Array(t),r=0;return e.forEach((function(e){n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function m(e){var t=0;e.forEach((function(e){return t+=e.length}));var n=new Float32Array(t),r=0;return e.forEach((function(e){n.set(e,r),r+=e.length})),n}function b(e){if(null==e)throw new Error("Received null or undefind string");for(var t=unescape(encodeURIComponent(e)),n=new Uint8Array(t.length),r=0;r<t.length;++r)n[r]=t.charCodeAt(r);return n.buffer}function g(e){if(null==e)throw new Error("Received null or undefind buffer");var t=new Uint8Array(e);return decodeURIComponent(escape(String.fromCharCode.apply(String,o(t))))}function y(e){var t=null!=e.rawAudio,n={label:e.label,spectrogramNumFrames:e.spectrogram.data.length/e.spectrogram.frameSize,spectrogramFrameSize:e.spectrogram.frameSize};null!=e.spectrogram.keyFrameIndex&&(n.spectrogramKeyFrameIndex=e.spectrogram.keyFrameIndex);var r=e.spectrogram.data.buffer.slice(0);return t&&(n.rawAudioNumSamples=e.rawAudio.data.length,n.rawAudioSampleRateHz=e.rawAudio.sampleRateHz,r=f([r,e.rawAudio.data.buffer])),{spec:n,data:r}}function x(e){var t={frameSize:e.spec.spectrogramFrameSize,data:new Float32Array(e.data.slice(0,4*e.spec.spectrogramFrameSize*e.spec.spectrogramNumFrames))};null!=e.spec.spectrogramKeyFrameIndex&&(t.keyFrameIndex=e.spec.spectrogramKeyFrameIndex);var n={label:e.spec.label,spectrogram:t};return null!=e.spec.rawAudioNumSamples&&(n.rawAudio={sampleRateHz:e.spec.rawAudioSampleRateHz,data:new Float32Array(e.data.slice(4*e.spec.spectrogramFrameSize*e.spec.spectrogramNumFrames))}),n}function v(e,t,n,r){if(N.si.assert(Number.isInteger(e)&&e>0,(function(){return"snippetLength must be a positive integer, but got "+e})),null!=t&&N.si.assert(Number.isInteger(t)&&t>=0,(function(){return"focusIndex must be a non-negative integer, but got "+t})),N.si.assert(Number.isInteger(n)&&n>0,(function(){return"windowLength must be a positive integer, but got "+n})),N.si.assert(Number.isInteger(r)&&r>0,(function(){return"windowHop must be a positive integer, but got "+r})),N.si.assert(n<=e,(function(){return"windowLength ("+n+") exceeds snippetLength ("+e+")"})),N.si.assert(t<e,(function(){return"focusIndex ("+t+") equals or exceeds snippetLength ("+e+")"})),n===e)return[[0,e]];var a=[];if(null==t){for(var s=0;s+n<=e;)a.push([s,s+n]),s+=r;return a}var i=Math.floor(n/2),o=t-i;for(o<0?o=0:o+n>e&&(o=e-n);!(o-r<0||t>=o-r+n);)o-=r;for(;o+n<=e&&!(t<o);)a.push([o,o+n]),o+=r;return a}function w(e){return Object(N.fi)((function(){var t=e.data.length/e.frameSize,n=Object(N.Yh)(e.data,[t,e.frameSize]);return Object(N.fg)(n,-1)}))}function O(e){return Object(N.fi)((function(){return Object(N.Ld)(w(e))}))}function k(e){return""+V+e}function I(){return r(this,void 0,void 0,(function(){var e,t,n;return a(this,(function(r){switch(r.label){case 0:return[4,N.Bf.listModels()];case 1:for(n in e=r.sent(),t=[],e)n.startsWith(V)&&t.push(n.slice(V.length));return[2,t]}}))}))}function S(e){return r(this,void 0,void 0,(function(){var t;return a(this,(function(n){switch(n.label){case 0:return null==(t=JSON.parse(W.localStorage.getItem(B)))&&(t={}),null!=t[e]&&delete t[e],W.localStorage.setItem(B,JSON.stringify(t)),[4,N.Bf.removeModel(k(e))];case 1:return n.sent(),[2]}}))}))}function j(e,t,n,r){if(N.si.assert(null==n&&null==r||null!=n&&null!=r,(function(){return"customModelURL and customMetadataURL must be both provided or both not provided."})),null!=n&&N.si.assert(null==t,(function(){return"vocabulary name must be null or undefined when modelURL is provided."})),"BROWSER_FFT"===e)return new G(t,n,r);throw"SOFT_FFT"===e?new Error("SOFT_FFT SpeechCommandRecognizer has not been implemented yet."):new Error("Invalid fftType: '"+e+"'")}n.r(t),n.d(t,"create",(function(){return j})),n.d(t,"utils",(function(){return H})),n.d(t,"BACKGROUND_NOISE_TAG",(function(){return M})),n.d(t,"Dataset",(function(){return z})),n.d(t,"getMaxIntensityFrameIndex",(function(){return O})),n.d(t,"spectrogram2IntensityCurve",(function(){return w})),n.d(t,"deleteSavedTransferModel",(function(){return S})),n.d(t,"listSavedTransferModels",(function(){return I})),n.d(t,"UNKNOWN_TAG",(function(){return P})),n.d(t,"version",(function(){return L}));var N=n("HIu9"),T=n("spsd"),C=n("an0W"),E=n("0hhO"),A=function(e,t){return(A=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},$=function(){return($=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},R=null,D=function(){function e(e){var t=this;if(null==e)throw new Error("Required configuration object is missing for BrowserFftFeatureExtractor constructor");if(null==e.spectrogramCallback)throw new Error("spectrogramCallback cannot be null or undefined");if(!(e.numFramesPerSpectrogram>0))throw new Error("Invalid value in numFramesPerSpectrogram: "+e.numFramesPerSpectrogram);if(e.suppressionTimeMillis<0)throw new Error("Expected suppressionTimeMillis to be >= 0, but got "+e.suppressionTimeMillis);if(this.suppressionTimeMillis=e.suppressionTimeMillis,this.spectrogramCallback=e.spectrogramCallback,this.numFrames=e.numFramesPerSpectrogram,this.sampleRateHz=e.sampleRateHz||44100,this.fftSize=e.fftSize||1024,this.frameDurationMillis=this.fftSize/this.sampleRateHz*1e3,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.overlapFactor=e.overlapFactor,this.includeRawAudio=e.includeRawAudio,N.si.assert(this.overlapFactor>=0&&this.overlapFactor<1,(function(){return"Expected overlapFactor to be >= 0 and < 1, but got "+t.overlapFactor})),this.columnTruncateLength>this.fftSize)throw new Error("columnTruncateLength "+this.columnTruncateLength+" exceeds fftSize ("+this.fftSize+").");this.audioContextConstructor=window.AudioContext||window.webkitAudioContext}return e.prototype.start=function(e){return r(this,void 0,void 0,(function(){var t,n,r;return a(this,(function(a){switch(a.label){case 0:if(null!=this.frameIntervalTask)throw new Error("Cannot start already-started BrowserFftFeatureExtractor");return t=this,[4,d(e)];case 1:return t.stream=a.sent(),this.audioContext=new this.audioContextConstructor({sampleRate:this.sampleRateHz}),n=this.audioContext.createMediaStreamSource(this.stream),this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=0,n.connect(this.analyser),this.freqDataQueue=[],this.freqData=new Float32Array(this.fftSize),this.includeRawAudio&&(this.timeDataQueue=[],this.timeData=new Float32Array(this.fftSize)),r=Math.max(1,Math.round(this.numFrames*(1-this.overlapFactor))),this.tracker=new F(r,Math.round(this.suppressionTimeMillis/this.frameDurationMillis)),this.frameIntervalTask=setInterval(this.onAudioFrame.bind(this),this.fftSize/this.sampleRateHz*1e3),[2]}}))}))},e.prototype.onAudioFrame=function(){return r(this,void 0,void 0,(function(){var e,t,n,r;return a(this,(function(a){switch(a.label){case 0:return this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0?[2]:(this.freqDataQueue.push(this.freqData.slice(0,this.columnTruncateLength)),this.includeRawAudio&&(this.analyser.getFloatTimeDomainData(this.timeData),this.timeDataQueue.push(this.timeData.slice())),this.freqDataQueue.length>this.numFrames&&this.freqDataQueue.shift(),this.tracker.tick()?(e=h(this.freqDataQueue),t=p(e,[1,this.numFrames,this.columnTruncateLength,1]),n=void 0,this.includeRawAudio&&(r=h(this.timeDataQueue),n=p(r,[1,this.numFrames*this.fftSize])),[4,this.spectrogramCallback(t,n)]):[3,2]);case 1:a.sent()&&this.tracker.suppress(),Object(N.Me)([t,n]),a.label=2;case 2:return[2]}}))}))},e.prototype.stop=function(){return r(this,void 0,void 0,(function(){return a(this,(function(){if(null==this.frameIntervalTask)throw new Error("Cannot stop because there is no ongoing streaming activity.");return clearInterval(this.frameIntervalTask),this.frameIntervalTask=null,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop(),[2]}))}))},e.prototype.setConfig=function(){throw new Error("setConfig() is not implemented for BrowserFftFeatureExtractor.")},e.prototype.getFeatures=function(){throw new Error("getFeatures() is not implemented for BrowserFftFeatureExtractor. Use the spectrogramCallback field of the constructor config instead.")},e}(),F=function(){function e(e,t){var n=this;this.period=e,this.suppressionTime=null==t?0:t,this.counter=0,N.si.assert(this.period>0,(function(){return"Expected period to be positive, but got "+n.period}))}return e.prototype.tick=function(){return this.counter++,this.counter%this.period==0&&(null==this.suppressionOnset||this.counter-this.suppressionOnset>this.suppressionTime)},e.prototype.suppress=function(){this.suppressionOnset=this.counter},e}(),_="TFJSSCDS",M="_background_noise_",z=function(){function e(e){if(this.examples={},this.label2Ids={},null!=e)for(var t=function(e){N.si.assert(null!=e,(function(){return"Received null or undefined buffer"}));var t=0,n=g(e.slice(t,_.length));N.si.assert(n===_,(function(){return"Deserialization error: Invalid descriptor"})),t+=_.length,t+=4;var r=new Uint32Array(e,t,1),a=t+=4,s=g(e.slice(a,t=a+r[0]));return{manifest:JSON.parse(s),data:e.slice(t)}}(e),n=0,r=0;r<t.manifest.length;++r){var a=t.manifest[r],s=a.spectrogramNumFrames*a.spectrogramFrameSize;null!=a.rawAudioNumSamples&&(s+=a.rawAudioNumSamples),this.addExample(x({spec:a,data:t.data.slice(n,n+(s*=4))})),n+=s}}return e.prototype.addExample=function(e){N.si.assert(null!=e,(function(){return"Got null or undefined example"})),N.si.assert(null!=e.label&&e.label.length>0,(function(){return"Expected label to be a non-empty string, but got "+JSON.stringify(e.label)}));var t=function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}();return this.examples[t]=e,e.label in this.label2Ids||(this.label2Ids[e.label]=[]),this.label2Ids[e.label].push(t),t},e.prototype.merge=function(e){var t,n,r,a;N.si.assert(e!==this,(function(){return"Cannot merge a dataset into itself"}));var i=e.getVocabulary();try{for(var o=s(i),u=o.next();!u.done;u=o.next()){var c=e.getExamples(u.value);try{for(var l=(r=void 0,s(c)),d=l.next();!d.done;d=l.next()){this.addExample(d.value.example)}}catch(e){r={error:e}}finally{try{d&&!d.done&&(a=l.return)&&a.call(l)}finally{if(r)throw r.error}}}}catch(e){t={error:e}}finally{try{u&&!u.done&&(n=o.return)&&n.call(o)}finally{if(t)throw t.error}}},e.prototype.getExampleCounts=function(){var e={};for(var t in this.examples){var n=this.examples[t];n.label in e||(e[n.label]=0),e[n.label]++}return e},e.prototype.getExamples=function(e){var t=this;N.si.assert(null!=e,(function(){return"Expected label to be a string, but got "+JSON.stringify(e)})),N.si.assert(e in this.label2Ids,(function(){return'No example of label "'+e+'" exists in dataset'}));var n=[];return this.label2Ids[e].forEach((function(e){n.push({uid:e,example:t.examples[e]})})),n},e.prototype.getData=function(e,t){var n=this;N.si.assert(this.size()>0,(function(){return"Cannot get spectrograms as tensors because the dataset is empty"}));var r=this.getVocabulary();null!=e?N.si.assert(-1!==r.indexOf(e),(function(){return"Label "+e+" is not in the vocabulary ("+JSON.stringify(r)+")"})):N.si.assert(r.length>1,(function(){return"One-hot encoding of labels requires the vocabulary to have at least two words, but it has only "+r.length+" word."})),null==t&&(t={});var a,i,o=this.getSortedUniqueNumFrames();1===o.length?(a=null==t.numFrames?o[0]:t.numFrames,i=null==t.hopFrames?1:t.hopFrames):(N.si.assert(null!=(a=t.numFrames)&&Number.isInteger(a)&&a>0,(function(){return"There are "+o.length+" unique lengths among the "+n.size()+" examples of this Dataset, hence numFrames is required. But it is not provided."})),N.si.assert(a<=o[0],(function(){return"numFrames ("+a+") exceeds the minimum numFrames ("+o[0]+") among the examples of the Dataset."})),N.si.assert(null!=(i=t.hopFrames)&&Number.isInteger(i)&&i>0,(function(){return"There are "+o.length+" unique lengths among the "+n.size()+" examples of this Dataset, hence hopFrames is required. But it is not provided."})));var u=null==t.normalize||t.normalize;return Object(N.fi)((function(){for(var o,l,d,h=[],p=[],f=[],m=0;m<r.length;++m){var b=r[m];if(null==e||b===e){var g=n.label2Ids[b],y=function(r){var o,l,g=n.examples[r].spectrogram,y=g.frameSize;null==d?d=y:N.si.assert(y===d,(function(){return"Mismatch in frameSize  ("+y+" vs "+d+")"}));var x=g.data.length/y,w=null;b!==M&&(w=null==g.keyFrameIndex?O(g).dataSync()[0]:g.keyFrameIndex);var k=Object(N.Zh)(g.data,[x,y,1]),I=v(x,w,a,i),S=function(n){var r=Object(N.fi)((function(){var e=Object(N.wh)(k,[n[0],0,0],[n[1]-n[0],-1,-1]);return u?c(e):e}));t.getDataset?p.push(r.dataSync()):h.push(r),null==e&&f.push(m)};try{for(var j=(o=void 0,s(I)),T=j.next();!T.done;T=j.next())S(T.value)}catch(e){o={error:e}}finally{try{T&&!T.done&&(l=j.return)&&l.call(j)}finally{if(o)throw o.error}}Object(N.Me)(k)};try{for(var x=(o=void 0,s(g)),w=x.next();!w.done;w=x.next())y(w.value)}catch(e){o={error:e}}finally{try{w&&!w.done&&(l=x.return)&&l.call(x)}finally{if(o)throw o.error}}}}null!=t.augmentByMixingNoiseRatio&&n.augmentByMixingNoise(t.getDataset?p:h,f,t.augmentByMixingNoiseRatio);var k=null==t.shuffle||t.shuffle;if(t.getDataset){var I=null==t.datasetBatchSize?32:t.datasetBatchSize,S=null==t.datasetValidationSplit?.15:t.datasetValidationSplit;N.si.assert(S>0&&S<1,(function(){return"Invalid dataset validation split: "+S}));var j=p.map((function(e,t){return[e,f[t]]}));N.si.shuffle(j),p=j.map((function(e){return e[0]}));var T=j.map((function(e){return e[1]})),E=function(e,t,n){var r,a,i,o,u,c,l,d;N.si.assert(n>0&&n<1,(function(){return"validationSplit is expected to be >0 and <1, but got "+n}));for(var h=!Array.isArray(e[0]),p=t,f=[],m=0;m<p.length;++m){var b=p[m];null==f[b]&&(f[b]=[]),f[b].push(m)}var g=f.length,y=[],x=[];for(f.map((function(e){return N.si.shuffle(e)})),m=0;m<g;++m)for(var v=f[m],w=Math.round(v.length*(1-n)),O=0;O<v.length;++O)O<w?y.push(v[O]):x.push(v[O]);if(h){var k=[],I=[],S=[],j=[];try{for(var T=s(y),C=T.next();!C.done;C=T.next()){var E=C.value;k.push(e[E]),I.push(t[E])}}catch(e){r={error:e}}finally{try{C&&!C.done&&(a=T.return)&&a.call(T)}finally{if(r)throw r.error}}try{for(var A=s(x),$=A.next();!$.done;$=A.next())S.push(e[E=$.value]),j.push(t[E])}catch(e){i={error:e}}finally{try{$&&!$.done&&(o=A.return)&&o.call(A)}finally{if(i)throw i.error}}return{trainXs:k,trainYs:I,valXs:S,valYs:j}}k=[],I=[],S=[],j=[];try{for(var R=s(y),D=R.next();!D.done;D=R.next())k.push(e[E=D.value]),I.push(t[E])}catch(e){u={error:e}}finally{try{D&&!D.done&&(c=R.return)&&c.call(R)}finally{if(u)throw u.error}}try{for(var F=s(x),_=F.next();!_.done;_=F.next())S.push(e[E=_.value]),j.push(t[E])}catch(e){l={error:e}}finally{try{_&&!_.done&&(d=F.return)&&d.call(F)}finally{if(l)throw l.error}}return{trainXs:k,trainYs:I,valXs:S,valYs:j}}(p,T,S),A=E.trainXs,$=E.trainYs,R=E.valXs,D=E.valYs,F=Object(C.array)(A).map((function(e){return Object(N.Zh)(e,[a,d,1])})),_=Object(C.array)($).map((function(e){return Object(N.Mh)(Object(N.vg)([e],r.length),[0])})),z=Object(C.zip)({xs:F,ys:_});k&&(z=z.shuffle(p.length)),z=z.batch(I).prefetch(4);var L=Object(C.array)(R).map((function(e){return Object(N.Zh)(e,[a,d,1])})),P=Object(C.array)(D).map((function(e){return Object(N.Mh)(Object(N.vg)([e],r.length),[0])})),B=Object(C.zip)({xs:L,ys:P});return[z,B=B.batch(I).prefetch(4)]}if(k){var V=[];h.forEach((function(e,t){V.push({x:e,y:f[t]})})),N.si.shuffle(V),h=V.map((function(e){return e.x})),f=V.map((function(e){return e.y}))}var W=null==e?Object(N.je)(Object(N.vg)(Object(N.Xh)(f,"int32"),r.length),"float32"):void 0;return{xs:Object(N.Nh)(h),ys:W}}))},e.prototype.augmentByMixingNoise=function(e,t,n){var r,a;if(null==e||0===e.length)throw new Error("Cannot perform augmentation because data is null or empty");for(var i=e[0]instanceof Float32Array,u=this.getVocabulary(),l=[],d=[],h=0;h<t.length;++h)u[t[h]]===M?l.push(h):d.push(h);if(0===l.length)throw new Error("Cannot perform augmentation by mixing with noise when there is no example with label "+M);var p=[],f=[],m=function(r){var a=l[function(e,t){return Math.floor((t-e)*Math.random())+e}(0,l.length)],s=i?Object(N.Xh)(e[r]):e[r],o=i?Object(N.Xh)(e[a]):e[a],u=Object(N.fi)((function(){return c(Object(N.Hd)(s,Object(N.og)(o,n)))}));p.push(i?u.dataSync():u),f.push(t[r])};try{for(var b=s(d),g=b.next();!g.done;g=b.next())m(g.value)}catch(e){r={error:e}}finally{try{g&&!g.done&&(a=b.return)&&a.call(b)}finally{if(r)throw r.error}}console.log("Data augmentation: mixing noise: added "+p.length+" examples"),p.forEach((function(t){return e.push(t)})),t.push.apply(t,o(f))},e.prototype.getSortedUniqueNumFrames=function(){for(var e,t,n=new Set,r=this.getVocabulary(),a=0;a<r.length;++a){var i=this.label2Ids[r[a]];try{for(var u=(e=void 0,s(i)),c=u.next();!c.done;c=u.next()){var l=this.examples[c.value].spectrogram;n.add(l.data.length/l.frameSize)}}catch(t){e={error:t}}finally{try{c&&!c.done&&(t=u.return)&&t.call(u)}finally{if(e)throw e.error}}}var d=o(n);return d.sort(),d},e.prototype.removeExample=function(e){if(!(e in this.examples))throw new Error("Nonexistent example UID: "+e);var t=this.examples[e].label;delete this.examples[e];var n=this.label2Ids[t].indexOf(e);this.label2Ids[t].splice(n,1),0===this.label2Ids[t].length&&delete this.label2Ids[t]},e.prototype.setExampleKeyFrameIndex=function(e,t){if(!(e in this.examples))throw new Error("Nonexistent example UID: "+e);var n=this.examples[e].spectrogram,r=n.data.length/n.frameSize;N.si.assert(t>=0&&t<r&&Number.isInteger(t),(function(){return"Invalid keyFrameIndex: "+t+". Must be >= 0, < "+r+", and an integer."})),n.keyFrameIndex=t},e.prototype.size=function(){return Object.keys(this.examples).length},e.prototype.durationMillis=function(){var e=0;for(var t in this.examples){var n=this.examples[t].spectrogram;e+=n.data.length/n.frameSize*(23.22|n.frameDurationMillis)}return e},e.prototype.empty=function(){return 0===this.size()},e.prototype.clear=function(){this.examples={}},e.prototype.getVocabulary=function(){var e=new Set;for(var t in this.examples){e.add(this.examples[t].label)}var n=o(e);return n.sort(),n},e.prototype.serialize=function(e){var t,n,r,a,i=this.getVocabulary();N.si.assert(!this.empty(),(function(){return"Cannot serialize empty Dataset"})),null!=e&&(Array.isArray(e)||(e=[e]),e.forEach((function(e){if(-1===i.indexOf(e))throw new Error('Word label "'+e+'" does not exist in the vocabulary of this dataset. The vocabulary is: '+JSON.stringify(i)+".")})));var o=[],u=[];try{for(var c=s(i),l=c.next();!l.done;l=c.next()){var d=l.value;if(null==e||-1!==e.indexOf(d)){var h=this.label2Ids[d];try{for(var p=(r=void 0,s(h)),m=p.next();!m.done;m=p.next()){var g=y(this.examples[m.value]);o.push(g.spec),u.push(g.data)}}catch(e){r={error:e}}finally{try{m&&!m.done&&(a=p.return)&&a.call(p)}finally{if(r)throw r.error}}}}}catch(e){t={error:e}}finally{try{l&&!l.done&&(n=c.return)&&n.call(c)}finally{if(t)throw t.error}}return function(e){var t=b(JSON.stringify(e.manifest)),n=b(_),r=new Uint32Array([1]),a=new Uint32Array([t.byteLength]);return f([f([n,r.buffer,a.buffer]),t,e.data])}({manifest:o,data:f(u)})},e}(),L="0.5.4",P="_unknown_",B="tfjs-speech-commands-saved-model-metadata",V="indexeddb://tfjs-speech-commands-model/",W={localStorage:"undefined"==typeof window?null:window.localStorage},U=.25,G=function(){function e(t,n,r){this.MODEL_URL_PREFIX="https://storage.googleapis.com/tfjs-models/tfjs/speech-commands/v"+function(e){return e.split(".").slice(0,2).join(".")}(L)+"/browser_fft",this.SAMPLE_RATE_HZ=44100,this.FFT_SIZE=1024,this.DEFAULT_SUPPRESSION_TIME_MILLIS=0,this.streaming=!1,this.transferRecognizers={},N.si.assert(null==n&&null==r||null!=n&&null!=r,(function(){return"modelURL and metadataURL must be both provided or both not provided."})),null==n?(null==t?t=e.DEFAULT_VOCABULARY_NAME:N.si.assert(-1!==e.VALID_VOCABULARY_NAMES.indexOf(t),(function(){return"Invalid vocabulary name: '"+t+"'"})),this.vocabulary=t,this.modelArtifactsOrURL=this.MODEL_URL_PREFIX+"/"+this.vocabulary+"/model.json",this.metadataOrURL=this.MODEL_URL_PREFIX+"/"+this.vocabulary+"/metadata.json"):(N.si.assert(null==t,(function(){return"vocabulary name must be null or undefined when modelURL is provided"})),this.modelArtifactsOrURL=n,this.metadataOrURL=r),this.parameters={sampleRateHz:this.SAMPLE_RATE_HZ,fftSize:this.FFT_SIZE}}return e.prototype.listen=function(e,t){return r(this,void 0,void 0,(function(){var n,s,u,l,d=this;return a(this,(function(h){switch(h.label){case 0:if(this.streaming)throw new Error("Cannot start streaming again when streaming is ongoing.");return[4,this.ensureModelLoaded()];case 1:if(h.sent(),null==t&&(t={}),n=null==t.probabilityThreshold?0:t.probabilityThreshold,t.includeEmbedding&&(n=0),N.si.assert(n>=0&&n<=1,(function(){return"Invalid probabilityThreshold value: "+n})),s=null!=t.invokeCallbackOnNoiseAndUnknown&&t.invokeCallbackOnNoiseAndUnknown,t.includeEmbedding&&(s=!0),t.suppressionTimeMillis<0)throw new Error("suppressionTimeMillis is expected to be >= 0, but got "+t.suppressionTimeMillis);return N.si.assert((u=null==t.overlapFactor?.5:t.overlapFactor)>=0&&u<1,(function(){return"Expected overlapFactor to be >= 0 and < 1, but got "+u})),l=function(u){return r(d,void 0,void 0,(function(){var r,l,d,h,p,f,m,b,g,y,x;return a(this,(function(a){switch(a.label){case 0:return r=c(u),t.includeEmbedding?[4,this.ensureModelWithEmbeddingOutputCreated()]:[3,2];case 1:return a.sent(),x=i(this.modelWithEmbeddingOutput.predict(r),2),l=x[0],d=x[1],[3,3];case 2:l=this.model.predict(r),a.label=3;case 3:return[4,l.data()];case 4:return h=a.sent(),[4,(p=l.argMax(-1)).data()];case 5:return f=a.sent()[0],m=Math.max.apply(Math,o(h)),Object(N.Me)([l,p,r]),m<n?[2,!1]:[3,6];case 6:return b=void 0,t.includeSpectrogram?(g={},[4,u.data()]):[3,8];case 7:g.data=a.sent(),g.frameSize=this.nonBatchInputShape[1],b=g,a.label=8;case 8:return y=!0,s||this.words[f]!==M&&this.words[f]!==P||(y=!1),y&&e({scores:h,spectrogram:b,embedding:d}),[2,y]}}))}))},this.audioDataExtractor=new D({sampleRateHz:this.parameters.sampleRateHz,numFramesPerSpectrogram:this.nonBatchInputShape[0],columnTruncateLength:this.nonBatchInputShape[1],suppressionTimeMillis:null==t.suppressionTimeMillis?this.DEFAULT_SUPPRESSION_TIME_MILLIS:t.suppressionTimeMillis,spectrogramCallback:l,overlapFactor:u}),[4,this.audioDataExtractor.start(t.audioTrackConstraints)];case 2:return h.sent(),this.streaming=!0,[2]}}))}))},e.prototype.ensureModelLoaded=function(){return r(this,void 0,void 0,(function(){var e,t,n=this;return a(this,(function(r){switch(r.label){case 0:return null!=this.model?[2]:[4,this.ensureMetadataLoaded()];case 1:return r.sent(),"string"!=typeof this.modelArtifactsOrURL?[3,3]:[4,Object(E.q)(this.modelArtifactsOrURL)];case 2:return e=r.sent(),[3,5];case 3:return[4,Object(E.q)(N.Bf.fromMemory(this.modelArtifactsOrURL.modelTopology,this.modelArtifactsOrURL.weightSpecs,this.modelArtifactsOrURL.weightData))];case 4:e=r.sent(),r.label=5;case 5:if(1!==e.inputs.length)throw new Error("Expected model to have 1 input, but got a model with "+e.inputs.length+" inputs");if(4!==e.inputs[0].shape.length)throw new Error("Expected model to have an input shape of rank 4, but got an input shape of rank "+e.inputs[0].shape.length);if(1!==e.inputs[0].shape[3])throw new Error("Expected model to have an input shape with 1 as the last dimension, but got input shape"+JSON.stringify(e.inputs[0].shape[3])+"}");if(2!==(t=e.outputShape).length)throw new Error("Expected loaded model to have an output shape of rank 2,but received shape "+JSON.stringify(t));if(t[1]!==this.words.length)throw new Error("Mismatch between the last dimension of model's output shape ("+t[1]+") and number of words ("+this.words.length+").");return this.model=e,this.freezeModel(),this.nonBatchInputShape=e.inputs[0].shape.slice(1),this.elementsPerExample=1,e.inputs[0].shape.slice(1).forEach((function(e){return n.elementsPerExample*=e})),this.warmUpModel(),this.parameters.spectrogramDurationMillis=e.inputs[0].shape[1]*(this.parameters.fftSize/this.parameters.sampleRateHz*1e3),[2]}}))}))},e.prototype.ensureModelWithEmbeddingOutputCreated=function(){return r(this,void 0,void 0,(function(){var e,t;return a(this,(function(n){switch(n.label){case 0:return null!=this.modelWithEmbeddingOutput?[2]:[4,this.ensureModelLoaded()];case 1:for(n.sent(),t=this.model.layers.length-2;t>=0;--t)if("Dense"===this.model.layers[t].getClassName()){e=this.model.layers[t];break}if(null==e)throw new Error("Failed to find second last dense layer in the original model.");return this.modelWithEmbeddingOutput=Object(E.s)({inputs:this.model.inputs,outputs:[this.model.outputs[0],e.output]}),[2]}}))}))},e.prototype.warmUpModel=function(){var e=this;Object(N.fi)((function(){for(var t=Object(N.Ai)([1].concat(e.nonBatchInputShape)),n=0;n<3;++n)e.model.predict(t)}))},e.prototype.ensureMetadataLoaded=function(){return r(this,void 0,void 0,(function(){var e,t,n;return a(this,(function(r){switch(r.label){case 0:return null!=this.words?[2]:"string"!=typeof this.metadataOrURL?[3,2]:[4,u(this.metadataOrURL)];case 1:return t=r.sent(),[3,3];case 2:t=this.metadataOrURL,r.label=3;case 3:if(null==(e=t).wordLabels){if(null==(n=e.words))throw new Error('Cannot find field "words" or "wordLabels" in metadata JSON file');this.words=n}else this.words=e.wordLabels;return[2]}}))}))},e.prototype.stopListening=function(){return r(this,void 0,void 0,(function(){return a(this,(function(e){switch(e.label){case 0:if(!this.streaming)throw new Error("Cannot stop streaming when streaming is not ongoing.");return[4,this.audioDataExtractor.stop()];case 1:return e.sent(),this.streaming=!1,[2]}}))}))},e.prototype.isListening=function(){return this.streaming},e.prototype.wordLabels=function(){return this.words},e.prototype.params=function(){return this.parameters},e.prototype.modelInputShape=function(){if(null==this.model)throw new Error("Model has not been loaded yet. Load model by calling ensureModelLoaded(), recognize(), or listen().");return this.model.inputs[0].shape},e.prototype.recognize=function(e,t){return r(this,void 0,void 0,(function(){var n,r,s,i,o,u,c,l,d,h,p,f,m;return a(this,(function(a){switch(a.label){case 0:return null==t&&(t={}),[4,this.ensureModelLoaded()];case 1:return a.sent(),null!=e?[3,3]:[4,this.recognizeOnline()];case 2:n=a.sent(),e=n.data,a.label=3;case 3:if(e instanceof N.sd)this.checkInputTensorShape(e),s=e,r=e.shape[0];else{if(e.length%this.elementsPerExample)throw new Error("The length of the input Float32Array "+e.length+" is not divisible by the number of tensor elements per per example expected by the model "+this.elementsPerExample+".");r=e.length/this.elementsPerExample,s=Object(N.ai)(e,[r].concat(this.nonBatchInputShape))}return o={scores:null},t.includeEmbedding?[4,this.ensureModelWithEmbeddingOutputCreated()]:[3,5];case 4:return a.sent(),u=this.modelWithEmbeddingOutput.predict(s),i=u[0],o.embedding=u[1],[3,6];case 5:i=this.model.predict(s),a.label=6;case 6:return 1!==r?[3,8]:(c=o,[4,i.data()]);case 7:return c.scores=a.sent(),[3,10];case 8:return l=Object(N.qi)(i),d=l.map((function(e){return e.data()})),h=o,[4,Promise.all(d)];case 9:h.scores=a.sent(),Object(N.Me)(l),a.label=10;case 10:return t.includeSpectrogram?(p=o,f={},e instanceof N.sd?[4,e.data()]:[3,12]):[3,14];case 11:return m=a.sent(),[3,13];case 12:m=e,a.label=13;case 13:p.spectrogram=(f.data=m,f.frameSize=this.nonBatchInputShape[1],f),a.label=14;case 14:return Object(N.Me)(i),[2,o]}}))}))},e.prototype.recognizeOnline=function(){return r(this,void 0,void 0,(function(){var e=this;return a(this,(function(){return[2,new Promise((function(t){e.audioDataExtractor=new D({sampleRateHz:e.parameters.sampleRateHz,numFramesPerSpectrogram:e.nonBatchInputShape[0],columnTruncateLength:e.nonBatchInputShape[1],suppressionTimeMillis:0,spectrogramCallback:function(n){return r(e,void 0,void 0,(function(){var e,r,s;return a(this,(function(a){switch(a.label){case 0:return e=c(n),[4,this.audioDataExtractor.stop()];case 1:return a.sent(),r=t,s={},[4,e.data()];case 2:return r.apply(void 0,[(s.data=a.sent(),s.frameSize=this.nonBatchInputShape[1],s)]),e.dispose(),[2,!1]}}))}))},overlapFactor:0}),e.audioDataExtractor.start()}))]}))}))},e.prototype.createTransfer=function(e){if(null==this.model)throw new Error("Model has not been loaded yet. Load model by calling ensureModelLoaded(), recognizer(), or listen().");N.si.assert(null!=e&&"string"==typeof e&&e.length>1,(function(){return"Expected the name for a transfer-learning recognized to be a non-empty string, but got "+JSON.stringify(e)})),N.si.assert(null==this.transferRecognizers[e],(function(){return"There is already a transfer-learning model named '"+e+"'"}));var t=new q(e,this.parameters,this.model);return this.transferRecognizers[e]=t,t},e.prototype.freezeModel=function(){var e,t;try{for(var n=s(this.model.layers),r=n.next();!r.done;r=n.next())r.value.trainable=!1}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}},e.prototype.checkInputTensorShape=function(e){var t=this.model.inputs[0].shape.length;if(e.shape.length!==t)throw new Error("Expected input Tensor to have rank "+t+", but got rank "+e.shape.length+" that differs ");var n=e.shape.slice(1),r=this.model.inputs[0].shape.slice(1);if(!N.si.arraysEqual(n,r))throw new Error("Expected input to have shape [null,"+r+"], but got shape [null,"+n+"]")},e.VALID_VOCABULARY_NAMES=["18w","directional4w"],e.DEFAULT_VOCABULARY_NAME="18w",e}(),q=function(e){function t(t,n,r){var a=e.call(this)||this;return a.name=t,a.parameters=n,a.baseModel=r,N.si.assert(null!=t&&"string"==typeof t&&t.length>0,(function(){return"The name of a transfer model must be a non-empty string, but got "+JSON.stringify(t)})),a.nonBatchInputShape=a.baseModel.inputs[0].shape.slice(1),a.words=null,a.dataset=new z,a}return function(e,t){function n(){this.constructor=e}A(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(t,e),t.prototype.collectExample=function(e,t){return r(this,void 0,void 0,(function(){var n,s,i=this;return a(this,(function(){if(N.si.assert(!this.streaming,(function(){return"Cannot start collection of transfer-learning example because a streaming recognition or transfer-learning example collection is ongoing"})),N.si.assert(null!=e&&"string"==typeof e&&e.length>0,(function(){return"Must provide a non-empty string when collecting transfer-learning example"})),null==t&&(t={}),null!=t.durationMultiplier&&null!=t.durationSec)throw new Error("durationMultiplier and durationSec are mutually exclusive, but are both specified.");return null!=t.durationSec?(N.si.assert(t.durationSec>0,(function(){return"Expected durationSec to be > 0, but got "+t.durationSec})),n=Math.ceil(t.durationSec/(this.parameters.fftSize/this.parameters.sampleRateHz))):null!=t.durationMultiplier?(N.si.assert(t.durationMultiplier>=1,(function(){return"Expected duration multiplier to be >= 1, but got "+t.durationMultiplier})),n=Math.round(this.nonBatchInputShape[0]*t.durationMultiplier)):n=this.nonBatchInputShape[0],null!=t.snippetDurationSec&&(N.si.assert(t.snippetDurationSec>0,(function(){return"snippetDurationSec is expected to be > 0, but got "+t.snippetDurationSec})),N.si.assert(null!=t.onSnippet,(function(){return"onSnippet must be provided if snippetDurationSec is provided."}))),null!=t.onSnippet&&N.si.assert(null!=t.snippetDurationSec,(function(){return"snippetDurationSec must be provided if onSnippet is provided."})),s=this.parameters.fftSize/this.parameters.sampleRateHz*n,this.streaming=!0,[2,new Promise((function(o){var u=null==t.snippetDurationSec?1:t.snippetDurationSec/s,d=1-u,h=Math.round(1/u),p=0,f=-1,b=[];i.audioDataExtractor=new D({sampleRateHz:i.parameters.sampleRateHz,numFramesPerSpectrogram:n,columnTruncateLength:i.nonBatchInputShape[1],suppressionTimeMillis:0,spectrogramCallback:function(n,s){return r(i,void 0,void 0,(function(){var r,i,u,d,g,y,x,v,w,O,k,I,S,j,N,T,C,E,A,$;return a(this,(function(a){switch(a.label){case 0:return null!=t.onSnippet?[3,7]:(r=c(n),u=(i=this.dataset).addExample,d={label:e},g={},[4,r.data()]);case 1:return d.spectrogram=(g.data=a.sent(),g.frameSize=this.nonBatchInputShape[1],g),t.includeRawAudio?(x={},[4,s.data()]):[3,3];case 2:return x.data=a.sent(),x.sampleRateHz=this.audioDataExtractor.sampleRateHz,y=x,[3,4];case 3:y=void 0,a.label=4;case 4:return u.apply(i,[(d.rawAudio=y,d)]),r.dispose(),[4,this.audioDataExtractor.stop()];case 5:return a.sent(),this.streaming=!1,this.collateTransferWords(),v=o,w={},[4,n.data()];case 6:return v.apply(void 0,[(w.data=a.sent(),w.frameSize=this.nonBatchInputShape[1],w)]),[3,13];case 7:return[4,n.data()];case 8:for(O=a.sent(),-1===f&&(f=O.length),k=f-1;0!==O[k]&&k>=0;)k--;return I=f-k-1,f=k+1,S=O.slice(O.length-I,O.length),b.push(S),null!=t.onSnippet&&t.onSnippet({data:S,frameSize:this.nonBatchInputShape[1]}),p++!==h?[3,13]:[4,this.audioDataExtractor.stop()];case 9:return a.sent(),this.streaming=!1,this.collateTransferWords(),j=l(m(b)),C=(T=this.dataset).addExample,E={label:e,spectrogram:N={data:j,frameSize:this.nonBatchInputShape[1]}},t.includeRawAudio?($={},[4,s.data()]):[3,11];case 10:return $.data=a.sent(),$.sampleRateHz=this.audioDataExtractor.sampleRateHz,A=$,[3,12];case 11:A=void 0,a.label=12;case 12:C.apply(T,[(E.rawAudio=A,E)]),o(N),a.label=13;case 13:return[2,!1]}}))}))},overlapFactor:d,includeRawAudio:t.includeRawAudio}),i.audioDataExtractor.start(t.audioTrackConstraints)}))]}))}))},t.prototype.clearExamples=function(){var e=this;N.si.assert(null!=this.words&&this.words.length>0&&!this.dataset.empty(),(function(){return"No transfer learning examples exist for model name "+e.name})),this.dataset.clear(),this.words=null},t.prototype.countExamples=function(){if(this.dataset.empty())throw new Error("No examples have been collected for transfer-learning model named '"+this.name+"' yet.");return this.dataset.getExampleCounts()},t.prototype.getExamples=function(e){return this.dataset.getExamples(e)},t.prototype.setExampleKeyFrameIndex=function(e,t){this.dataset.setExampleKeyFrameIndex(e,t)},t.prototype.removeExample=function(e){this.dataset.removeExample(e),this.collateTransferWords()},t.prototype.isDatasetEmpty=function(){return this.dataset.empty()},t.prototype.loadExamples=function(e,t){var n,r,a,i;void 0===t&&(t=!1);var o=new z(e);t&&this.clearExamples();var u=o.getVocabulary();try{for(var c=s(u),l=c.next();!l.done;l=c.next()){var d=o.getExamples(l.value);try{for(var h=(a=void 0,s(d)),p=h.next();!p.done;p=h.next()){this.dataset.addExample(p.value.example)}}catch(e){a={error:e}}finally{try{p&&!p.done&&(i=h.return)&&i.call(h)}finally{if(a)throw a.error}}}}catch(e){n={error:e}}finally{try{l&&!l.done&&(r=c.return)&&r.call(c)}finally{if(n)throw n.error}}this.collateTransferWords()},t.prototype.serializeExamples=function(e){return this.dataset.serialize(e)},t.prototype.collateTransferWords=function(){this.words=this.dataset.getVocabulary()},t.prototype.collectTransferDataAsTensors=function(e,t){var n=this.nonBatchInputShape[0];e=e||U;var r=Math.round(e*n),a=this.dataset.getData(null,$({numFrames:n,hopFrames:r},t));return{xs:a.xs,ys:a.ys}},t.prototype.collectTransferDataAsTfDataset=function(e,t,n,r){void 0===t&&(t=.15),void 0===n&&(n=32);var a=this.nonBatchInputShape[0];e=e||U;var s=Math.round(e*a);return this.dataset.getData(null,$({numFrames:a,hopFrames:s,getDataset:!0,datasetBatchSize:n,datasetValidationSplit:t},r))},t.prototype.train=function(e){return r(this,void 0,void 0,(function(){var t,n=this;return a(this,(function(){return N.si.assert(null!=this.words&&this.words.length>0,(function(){return"Cannot train transfer-learning model '"+n.name+"' because no transfer learning example has been collected."})),N.si.assert(this.words.length>1,(function(){return"Cannot train transfer-learning model '"+n.name+"' because only 1 word label ('"+JSON.stringify(n.words)+"') has been collected for transfer learning. Requires at least 2."})),null!=e.fineTuningEpochs&&N.si.assert(e.fineTuningEpochs>=0&&Number.isInteger(e.fineTuningEpochs),(function(){return"If specified, fineTuningEpochs must be a non-negative integer, but received "+e.fineTuningEpochs})),null==e&&(e={}),null==this.model&&this.createTransferModelFromBaseModel(),this.secondLastBaseDenseLayer.trainable=!1,this.model.compile({loss:"categoricalCrossentropy",optimizer:e.optimizer||"sgd",metrics:["acc"]}),t=null==e.fitDatasetDurationMillisThreshold?6e4:e.fitDatasetDurationMillisThreshold,this.dataset.durationMillis()>t?(console.log("Detected large dataset: total duration = "+this.dataset.durationMillis()+" ms > "+t+" ms. Training transfer model using fitDataset() instead of fit()"),[2,this.trainOnDataset(e)]):[2,this.trainOnTensors(e)]}))}))},t.prototype.trainOnDataset=function(e){return r(this,void 0,void 0,(function(){var t,n,r,s,o,u,c;return a(this,(function(a){switch(a.label){case 0:return N.si.assert(e.epochs>0,(function(){return"Invalid config.epochs"})),t=i(this.collectTransferDataAsTfDataset(e.windowHopRatio||U,e.validationSplit,null==e.batchSize?32:e.batchSize,{augmentByMixingNoiseRatio:e.augmentByMixingNoiseRatio}),2),n=t[0],r=t[1],s=N.si.now(),[4,this.model.fitDataset(n,{epochs:e.epochs,validationData:e.validationSplit>0?r:null,callbacks:null==e.callback?null:[e.callback]})];case 1:return o=a.sent(),console.log("fitDataset() took "+(N.si.now()-s).toFixed(2)+" ms"),null!=e.fineTuningEpochs&&e.fineTuningEpochs>0?(u=N.si.now(),[4,this.fineTuningUsingTfDatasets(e,n,r)]):[3,3];case 2:return c=a.sent(),console.log("fitDataset() (fine-tuning) took "+(N.si.now()-u).toFixed(2)+" ms"),[2,[o,c]];case 3:return[2,o]}}))}))},t.prototype.trainOnTensors=function(e){return r(this,void 0,void 0,(function(){var t,n,r,s,i,o,u,c,l;return a(this,(function(a){switch(a.label){case 0:t=this.collectTransferDataAsTensors(e.windowHopRatio||U,{augmentByMixingNoiseRatio:e.augmentByMixingNoiseRatio}),n=t.xs,r=t.ys,console.log("Training data: xs.shape = "+n.shape+", ys.shape = "+r.shape),a.label=1;case 1:return a.trys.push([1,,6,7]),null!=e.validationSplit?(u=function(e,t,n){return N.si.assert(n>0&&n<1,(function(){return"validationSplit is expected to be >0 and <1, but got "+n})),Object(N.fi)((function(){for(var r=Object(N.Ld)(t,-1).dataSync(),a=[],s=0;s<r.length;++s){var i=r[s];null==a[i]&&(a[i]=[]),a[i].push(s)}var o=a.length,u=[],c=[];for(a.map((function(e){return N.si.shuffle(e)})),s=0;s<o;++s)for(var l=a[s],d=Math.round(l.length*(1-n)),h=0;h<l.length;++h)h<d?u.push(l[h]):c.push(l[h]);return{trainXs:Object(N.mf)(e,u),trainYs:Object(N.mf)(t,u),valXs:Object(N.mf)(e,c),valYs:Object(N.mf)(t,c)}}))}(n,r,e.validationSplit),s=u.trainXs,i=u.trainYs,o=[u.valXs,u.valYs]):(s=n,i=r),[4,this.model.fit(s,i,{epochs:null==e.epochs?20:e.epochs,validationData:o,batchSize:e.batchSize,callbacks:null==e.callback?null:[e.callback]})];case 2:return c=a.sent(),null!=e.fineTuningEpochs&&e.fineTuningEpochs>0?[4,this.fineTuningUsingTensors(e,s,i,o)]:[3,4];case 3:return l=a.sent(),[2,[c,l]];case 4:return[2,c];case 5:return[3,7];case 6:return Object(N.Me)([n,r,s,i,o]),[7];case 7:return[2]}}))}))},t.prototype.fineTuningUsingTfDatasets=function(e,t,n){return r(this,void 0,void 0,(function(){var r,s;return a(this,(function(a){switch(a.label){case 0:return r=this.secondLastBaseDenseLayer.trainable,this.secondLastBaseDenseLayer.trainable=!0,this.model.compile({loss:"categoricalCrossentropy",optimizer:null==e.fineTuningOptimizer?"sgd":e.fineTuningOptimizer,metrics:["acc"]}),[4,this.model.fitDataset(t,{epochs:e.fineTuningEpochs,validationData:n,callbacks:null==e.callback?null:[e.callback]})];case 1:return s=a.sent(),this.secondLastBaseDenseLayer.trainable=r,[2,s]}}))}))},t.prototype.fineTuningUsingTensors=function(e,t,n,s){return r(this,void 0,void 0,(function(){var r,i;return a(this,(function(a){switch(a.label){case 0:return r=this.secondLastBaseDenseLayer.trainable,this.secondLastBaseDenseLayer.trainable=!0,this.model.compile({loss:"categoricalCrossentropy",optimizer:null==e.fineTuningOptimizer?"sgd":e.fineTuningOptimizer,metrics:["acc"]}),[4,this.model.fit(t,n,{epochs:e.fineTuningEpochs,validationData:s,batchSize:e.batchSize,callbacks:null==e.fineTuningCallback?null:[e.fineTuningCallback]})];case 1:return i=a.sent(),this.secondLastBaseDenseLayer.trainable=r,[2,i]}}))}))},t.prototype.evaluate=function(e){return r(this,void 0,void 0,(function(){var t=this;return a(this,(function(){return N.si.assert(null!=e.wordProbThresholds&&e.wordProbThresholds.length>0,(function(){return"Received null or empty wordProbThresholds"})),0,N.si.assert(this.words[0]===M,(function(){return"Cannot perform evaluation when the first tag is not "+M})),[2,Object(N.fi)((function(){for(var n=[],r=0,a=t.collectTransferDataAsTensors(e.windowHopRatio),s=a.xs,i=a.ys.argMax(-1).dataSync(),o=t.model.predict(s),u=Object(N.ag)(Object(N.wh)(o,[0,1],[o.shape[0],o.shape[1]-1]),-1),c=o.shape[0],l=0;l<e.wordProbThresholds.length;++l){for(var d=e.wordProbThresholds[l],h=u.greater(Object(N.ih)(d)).dataSync(),p=0,f=0,m=0,b=0,g=0;g<c;++g)0===i[g]?(p++,h[g]&&m++):(f++,h[g]&&b++);var y=m/p,x=b/f;n.push({probThreshold:d,fpr:y,tpr:x}),console.log("ROC thresh="+d+": fpr="+y.toFixed(4)+", tpr="+x.toFixed(4)),l>0&&(r+=Math.abs(n[l-1].fpr-n[l].fpr)*(n[l-1].tpr+n[l].tpr)/2)}return{rocCurve:n,auc:r}}))]}))}))},t.prototype.createTransferModelFromBaseModel=function(){var e=this;N.si.assert(null!=this.words,(function(){return"No word example is available for tranfer-learning model of name "+e.name}));for(var t=this.baseModel.layers,n=t.length-2;n>=0&&"dense"!==t[n].getClassName().toLowerCase();)n--;if(n<0)throw new Error("Cannot find a hidden dense layer in the base model.");this.secondLastBaseDenseLayer=t[n];var r=this.secondLastBaseDenseLayer.output;this.transferHead=Object(E.w)(),this.transferHead.add(E.p.dense({units:this.words.length,activation:"softmax",inputShape:r.shape.slice(1),name:"NewHeadDense"}));var a=this.transferHead.apply(r);this.model=Object(E.s)({inputs:this.baseModel.inputs,outputs:a})},t.prototype.modelInputShape=function(){return this.baseModel.inputs[0].shape},t.prototype.getMetadata=function(){return{tfjsSpeechCommandsVersion:L,modelName:this.name,timeStamp:(new Date).toISOString(),wordLabels:this.wordLabels()}},t.prototype.save=function(e){return r(this,void 0,void 0,(function(){var t,n,r;return a(this,(function(){return t=null!=e,e=e||k(this.name),t||(n=W.localStorage.getItem(B),(r=null==n?{}:JSON.parse(n))[this.name]=this.getMetadata(),W.localStorage.setItem(B,JSON.stringify(r))),console.log("Saving model to "+e),[2,this.model.save(e)]}))}))},t.prototype.load=function(e){return r(this,void 0,void 0,(function(){var t,n,r;return a(this,(function(a){switch(a.label){case 0:if(t=null!=e,e=e||k(this.name),!t){if(null==(n=JSON.parse(W.localStorage.getItem(B)))||null==n[this.name])throw new Error("Cannot find metadata for transfer model named "+this.name+'"');this.words=n[this.name].wordLabels,console.log("Loaded word list for model named "+this.name+": "+this.words)}return r=this,[4,Object(E.q)(e)];case 1:return r.model=a.sent(),console.log("Loaded model from "+e+":"),this.model.summary(),[2]}}))}))},t.prototype.createTransfer=function(){throw new Error("Creating transfer-learned recognizer from a transfer-learned recognizer is not supported.")},t}(G),H={concatenateFloat32Arrays:m,normalizeFloat32Array:l,normalize:c,playRawAudio:function(e,t){var n=new(window.AudioContext||window.webkitAudioContext),r=n.createBuffer(1,e.data.length,e.sampleRateHz);r.getChannelData(0).set(e.data);var a=n.createBufferSource();a.buffer=r,a.connect(n.destination),a.start(),a.onended=function(){null!=t&&t()}}}},mqsn:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},n7g5:function(e,t,n){"use strict";function r(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function a(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}function s(e,t,n,r){return t.rank<n.rank&&(t=Object(v.a)(t,me.e(t.shape,r))),e.rank<n.rank&&(e=Object(v.a)(e,me.e(e.shape,r))),{x:()=>Object(u.a)(e,Object(o.a)(Object(Ye.a)(n,t),e.dtype))}}var i=n("f7fD"),o=n("VWKH"),u=n("TvjY"),c=n("IBm2");const l={kernelName:i.a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(c.a)(Object(o.a)(n,"float32"),-1))}}};var d=n("J/Nb"),h=n("uiqz"),p=n("pRRN"),f=n("2qJO"),m=n("9rnT"),b=n("7JZ3");const g={kernelName:i.b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(m.a)(Object(o.a)(n,"float32")),r=Object(f.a)(Object(b.a)(Object(p.a)(1),t));return Object(h.a)(Object(d.a)(e,r))}}}},y={kernelName:i.c,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(f.a)(Object(b.a)(Object(m.a)(Object(o.a)(n,"float32")),1));return Object(d.a)(e,t)}}}};var x=n("VncX"),v=n("6RbH"),w=n("zFAV");const O={kernelName:i.d,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=x.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=x.getReductionAxes(n.shape,a);return r.length>0&&(t=Object(w.a)(t,r)),Object(v.a)(t,n.shape)},b:()=>{let t=e;const n=x.getReductionAxes(r.shape,a);return n.length>0&&(t=Object(w.a)(t,n)),Object(v.a)(t,r.shape)}}}},k={kernelName:i.e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var I=n("ZRUZ");const S={kernelName:i.h,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(I.a)(n)}}},j={kernelName:i.i,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(I.a)(n)}}},N={kernelName:i.j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(f.a)(Object(b.a)(Object(p.a)(1),Object(m.a)(Object(o.a)(n,"float32")))))}}};var T=n("IjOl");const C={kernelName:i.k,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(f.a)(Object(T.a)(Object(p.a)(1),Object(m.a)(Object(o.a)(n,"float32"))));return Object(d.a)(e,t)}}}},E={kernelName:i.m,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(x.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(T.a)(Object(m.a)(n),Object(m.a)(r));let s=Object(u.a)(e,Object(d.a)(r,t));const i=Object(x.getReductionAxes)(n.shape,a);return i.length>0&&(s=Object(w.a)(s,i)),Object(v.a)(s,n.shape)},b:()=>{const t=Object(T.a)(Object(m.a)(n),Object(m.a)(r));let s=Object(h.a)(Object(u.a)(e,Object(d.a)(n,t)));const i=Object(x.getReductionAxes)(r.shape,a);return i.length>0&&(s=Object(w.a)(s,i)),Object(v.a)(s,r.shape)}}}},A={kernelName:i.l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(T.a)(Object(m.a)(Object(o.a)(n,"float32")),1))}}},$={kernelName:i.n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(b.a)(Object(p.a)(1),Object(m.a)(Object(o.a)(n,"float32"))))}}};var R=n("QCRY"),D=n("beMT"),F=n("qCmv"),_=n("tFNL"),M=n("6D6q");const z=Object(M.b)({avgPool3dGrad_:function(e,t,n,r,a,s){const o=Object(D.a)(e,"dy","avgPool3dGrad"),u=Object(D.a)(t,"input","avgPool3dGrad");let c=o,l=u,d=!1;4===u.rank&&(d=!0,c=Object(v.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=Object(v.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),F.b(5===c.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),F.b(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),Object(_.a)("avgPool3dGrad",a,s);const h=R.a.runKernel(i.q,{dy:c,input:l},{filterSize:n,strides:r,pad:a,dimRoundingMode:s});return d?Object(v.a)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),L={kernelName:i.p,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>z(e,r,a,s,i,o)}}},P=Object(M.b)({avgPoolGrad_:function(e,t,n,r,a){const s=Object(D.a)(e,"dy","avgPoolGrad"),o=Object(D.a)(t,"input","avgPoolGrad");F.b(o.rank===s.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${s.rank})`));let u=o,c=s,l=!1;3===o.rank&&(l=!0,u=Object(v.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=Object(v.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F.b(4===c.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`)),F.b(4===u.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${u.rank}.`));const d=R.a.runKernel(i.r,{dy:c,input:u},{filterSize:n,strides:r,pad:a});return l?Object(v.a)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),B={kernelName:i.o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>P(e,r,a,s,i)}}};var V=n("vTEK");const W={kernelName:i.s,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Object(V.a)(e,a,!1,!1),b:()=>Object(V.a)(e,r,!0,!1)}:s&&!i?{a:()=>Object(V.a)(a,e,!1,!0),b:()=>Object(V.a)(r,e,!1,!1)}:{a:()=>Object(V.a)(a,e,!0,!0),b:()=>Object(V.a)(e,r,!0,!0)}:{a:()=>Object(V.a)(e,a,!1,!0),b:()=>Object(V.a)(r,e,!0,!1)}}};var U=n("TbFj");const G={kernelName:i.t,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(U.a)(e,r,a)}}},q={kernelName:i.w,gradFunc:(e,t,n)=>{const r=n.inputShape,a=n.shape,s=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])s[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const i=[];for(let e=0;e<s.length;e++)s[e]>1&&i.push(e);return{x:()=>Object(w.a)(e,i,!0)}}},H={kernelName:i.x,gradFunc:e=>({x:()=>e.clone()})},Y={kernelName:i.y,gradFunc:e=>({x:()=>Object(I.a)(e)})};var K=n("LIhl"),X=n("hYe0"),Z=n("axJg"),Q=n("XL4q");const J={kernelName:i.z,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(Q.a)(Object(Z.a)(Object(K.a)(r,a),Object(X.a)(r,s)),e,Object(I.a)(e))}}},ee={kernelName:i.B,inputsToSave:["x"],gradFunc:l.gradFunc};var te=n("Km0G");const ne={kernelName:i.C,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=Object(F.I)(a,t[0].shape)[0],i=r.map((e=>e[s]));return Object(te.a)(e,i,s).map((e=>()=>e))}};var re=n("pAYp"),ae=n("h6Fb");const se={kernelName:i.D,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return F.b(_.j(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Object(ae.a)(r.shape,e,a,i,o,u),filter:()=>Object(re.a)(r,e,a.shape,i,o,u)}}};var ie=n("UY8A");const oe={kernelName:i.F,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Object(ie.a)(e,a,s,i,o,1,u),filter:()=>Object(re.a)(e,r,a.shape,s,i,o,u)}}},ue=Object(M.b)({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Object(v.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;return 4===o.rank&&(o=Object(v.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F.b(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),F.b(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),F.b(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),F.b(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),F.b(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`)),R.a.runKernel(i.H,{x:s,dy:o},{strides:r,pad:a,filterShape:n})}});var ce=n("zgTD");const le={kernelName:i.G,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;F.b(Object(_.j)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Object(ce.a)(i.shape,e,o,a,s),filter:()=>ue(i,e,o.shape,a,s)}}};var de=n("G/uF");const he={kernelName:i.J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(Object(h.a)(Object(de.a)(Object(o.a)(n,"float32"))),e)}}};var pe=n("FGFg");const fe={kernelName:i.K,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(Object(pe.a)(Object(o.a)(n,"float32")),e)}}};var me=n("By71"),be=n("ZGBu"),ge=n("koUT");const ye={kernelName:i.M,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=Object(me.f)([a],r.rank);let n=Object(be.a)(e,a,s,!i);return null!=t&&(n=Object(ge.a)(n,t)),n}}}};var xe=n("q9rs"),ve=n("/TlD");const we={kernelName:i.P,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;F.b(_.j(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,c]=t;return F.b(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),F.b(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),F.b(u.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),F.b(_.i(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),_.a("depthwiseConv2d",s,i),{x:()=>Object(ve.a)(u.shape,e,c,a,s,o,i),filter:()=>Object(xe.a)(u,e,c.shape,a,s,o,i)}}},Oe={kernelName:i.T,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},o={x:r,filter:a,dy:e};return{x:()=>R.a.runKernel(i.V,s,n),filter:()=>R.a.runKernel(i.U,o,n)}}},ke={kernelName:i.X,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>R.a.runKernel(i.Y,r)}}};var Ie=n("pI0a");const Se={kernelName:i.ab,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(u.a)(Object(Ie.a)(Object(h.a)(Object(m.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(u.a)(e,r)}}},je={kernelName:i.bb,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,n)}}},Ne={kernelName:i.cb,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Object(v.a)(e,n.shape)}}},Te={kernelName:i.db,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(Ie.a)(n))}}},Ce={kernelName:i.hb,gradFunc:e=>({x:()=>Object(I.a)(e)})},Ee={kernelName:i.ib,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(x.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(d.a)(e,Object(o.a)(r,"float32")),s=Object(x.getReductionAxes)(n.shape,a);return s.length>0?Object(v.a)(Object(w.a)(t,s),n.shape):t},b:()=>{let t=Object(u.a)(e,Object(o.a)(n,"float32"));const s=Object(x.getReductionAxes)(r.shape,a);s.length>0&&(t=Object(v.a)(Object(w.a)(t,s),r.shape));const i=Object(m.a)(r);return Object(h.a)(Object(d.a)(t,Object(o.a)(i,"float32")))}}}};var Ae=n("dsom"),$e=n("5oWy");const Re={kernelName:i.kb,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,c=null==o?Object(p.a)(1):o,l=Object(x.getReductionAxes)(s.shape,a.shape),d=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)d.push(a.shape[e]);d.push(1)}const h=Object(b.a)(a,s),f=Object(u.a)(e,c),m=Object(Ae.a)(Object(T.a)(i,Object(p.a)(r))),g=Object(u.a)(Object(u.a)(Object(u.a)(m,m),m),Object(p.a)(-.5));return{x:()=>1===s.rank?Object(v.a)(Object(u.a)(Object(u.a)(e,Object($e.a)(Object(v.a)(m,[1,1,1,s.shape[0]]),d)),c),a.shape):Object(v.a)(Object(u.a)(Object(u.a)(e,m),c),a.shape),mean:()=>{let e=Object(u.a)(Object(u.a)(m,Object(p.a)(-1)),f);return 1===s.rank&&(e=Object(w.a)(e,l)),Object(v.a)(e,s.shape)},variance:()=>{let e=Object(u.a)(Object(u.a)(g,h),f);return 1===s.rank&&(e=Object(w.a)(e,l)),Object(v.a)(e,s.shape)},scale:()=>{const t=Object(u.a)(h,m);let n=Object(u.a)(e,t);return 1===s.rank&&(n=Object(w.a)(n,l)),Object(v.a)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Object(w.a)(t,l)),Object(v.a)(t,s.shape)}}}};var De=n("Uom0");const Fe={kernelName:i.ob,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,i]=t,{axis:o}=n,u=Object(F.I)(o,s.shape)[0];return{x:()=>{const t=s.shape,n=i.size,c=t.slice(0,u),l=c.length,d=t.slice(o,t.length).slice(1),h=d.length,p=r(0,l),f=r(l+1,l+1+h),m=a([c,[n],d]),b=Object(v.a)(e,m),g=Object(v.a)(i,[n]),y=a([[l],p,f]),x=Object(ge.a)(b,y);let w=Object(De.a)(x,g,s.shape[u]);const O=Object(me.h)(y);return w=Object(ge.a)(w,O),w},indices:()=>i}}},_e={kernelName:i.qb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(I.a)(n),b:()=>Object(I.a)(r)}}},Me={kernelName:i.sb,gradFunc:e=>({x:()=>Object(o.a)(e,"float32")})},ze={kernelName:i.ub,gradFunc:e=>({x:()=>Object(I.a)(e)})},Le={kernelName:i.vb,gradFunc:e=>({x:()=>Object(I.a)(e)})},Pe={kernelName:i.wb,gradFunc:e=>({x:()=>Object(I.a)(e)})};var Be=n("L2At");const Ve={kernelName:i.zb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Object(Be.a)(r,0);return{x:()=>Object(Q.a)(s,e,Object(u.a)(e,a))}}},We={kernelName:i.Eb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(T.a)(n,1))}}},Ue={kernelName:i.Db,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(o.a)(n,"float32"))}}},Ge={kernelName:i.Fb,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Object(Ie.a)(r);return Object(b.a)(e,Object(u.a)(Object(w.a)(e,a,!0),t))}}}},qe=Object(M.b)({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,o=.5){return R.a.runKernel(i.yb,{x:e,y:t,dy:n},{depthRadius:r,bias:a,alpha:s,beta:o})}}),He={kernelName:i.xb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>qe(r,a,e,s,i,o,u)}}};var Ye=n("tZSd");const Ke={kernelName:i.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,i=t[0],o=s(e,t[1],i,F.I(a,i.shape));return{x:()=>o.x()}}};var Xe=n("+VIV");const Ze={kernelName:i.Pb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(u.a)(e,Object(o.a)(Object(K.a)(n,r),"float32")),b:()=>Object(u.a)(e,Object(o.a)(Object(Xe.a)(n,r),"float32"))}}},Qe=Object(M.b)({maxPool3dGrad_:function(e,t,n,r,a,s,o){const u=Object(D.a)(e,"dy","maxPool3dGrad"),c=Object(D.a)(t,"input","maxPool3dGrad"),l=Object(D.a)(n,"output","maxPool3dGrad");let d=u,h=c,p=l,f=!1;4===c.rank&&(f=!0,d=Object(v.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=Object(v.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=Object(v.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),F.b(5===d.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`)),F.b(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),F.b(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),Object(_.a)("maxPool3dGrad",s,o);const m=R.a.runKernel(i.Mb,{dy:d,input:h,output:p},{filterSize:r,strides:a,pad:s,dimRoundingMode:o});return f?Object(v.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),Je={kernelName:i.Lb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Qe(e,r,a,s,i,o,u)}}},et=Object(M.b)({maxPoolGrad_:function(e,t,n,r,a,s,o){const u=Object(D.a)(e,"dy","maxPoolGrad"),c=Object(D.a)(t,"input","maxPoolGrad"),l=Object(D.a)(n,"output","maxPoolGrad");return F.b(c.rank===u.rank,(()=>`Rank of input (${c.rank}) does not match rank of dy (${u.rank})`)),F.b(4===u.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),F.b(4===c.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`)),_.a("maxPoolGrad",s,o),R.a.runKernel(i.Nb,{dy:u,input:c,output:l},{filterSize:r,strides:a,pad:s,dimRoundingMode:o})}}),tt={kernelName:i.Kb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>et(e,r,a,s,i,o)}}};var nt=n("sxV+");const rt={kernelName:i.Qb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=F.I(a,r.shape),i=Object(me.d)(r.shape,s),o=F.O(i[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=Object(v.a)(e,t);return Object(d.a)(Object(u.a)(n,Object(nt.a)(r.shape,"float32")),o)}}}},at={kernelName:i.Rb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[i,o]=t,u=s(e,o,i,F.I(a,i.shape));return{x:()=>u.x()}}},st={kernelName:i.Sb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(u.a)(e,Object(o.a)(Object(X.a)(n,r),"float32")),b:()=>Object(u.a)(e,Object(o.a)(Object(Be.a)(n,r),"float32"))}}};var it=n("O7pG");const ot={kernelName:i.Tb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Object(it.a)(e,s,r.shape)}}};var ut=n("/0Av");const ct={kernelName:i.Ub,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(x.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(x.getReductionAxes)(n.shape,a);return t.length>0?Object(v.a)(Object(w.a)(e,t),n.shape):e},b:()=>{const t=Object(u.a)(e,Object(h.a)(Object(ut.a)(Object(d.a)(n,r)))),s=Object(x.getReductionAxes)(r.shape,a);return s.length>0?Object(v.a)(Object(w.a)(t,s),r.shape):t}}}},lt={kernelName:i.Wb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(x.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(u.a)(e,Object(o.a)(r,"float32")),s=Object(x.getReductionAxes)(n.shape,a);return s.length>0?Object(v.a)(Object(w.a)(t,s),n.shape):t},b:()=>{const t=Object(u.a)(e,Object(o.a)(n,"float32")),s=Object(x.getReductionAxes)(r.shape,a);return s.length>0?Object(v.a)(Object(w.a)(t,s),r.shape):t}}}},dt={kernelName:i.Xb,gradFunc:e=>({x:()=>Object(h.a)(e)})};var ht=n("cuXz");const pt={kernelName:i.cc,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Object(ht.a)(n.shape,"float32")}}},ft={kernelName:i.dc,gradFunc:e=>({x:()=>Object(I.a)(e)})};var mt=n("tH7w");const bt={kernelName:i.ec,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Object(mt.a)(e,r).map((e=>()=>e))}},gt={kernelName:i.fc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Object(it.a)(e,s,r.shape)}}};var yt=n("V7pg"),xt=n("0vIi");const vt={kernelName:i.hc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,c=x.assertAndGetBroadcastShape(s.shape,i.shape);return{a:()=>{const t=Object(o.a)(i,"float32");let n=Object(u.a)(e,Object(u.a)(t,Object(xt.a)(s,Object(b.a)(t,Object(p.a)(1)))));const r=x.getReductionAxes(s.shape,c);return r.length>0&&(n=Object(w.a)(n,r)),Object(v.a)(n,s.shape)},b:()=>{const t=Object(Be.a)(s,0),n=Object(Q.a)(t,Object(yt.a)(s),Object(I.a)(s));let r=Object(u.a)(e,Object(u.a)(a,n));const o=x.getReductionAxes(i.shape,c);return o.length>0&&(r=Object(w.a)(r,o)),Object(v.a)(r,i.shape)}}}},wt={kernelName:i.ic,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(Be.a)(n,0);return{x:()=>Object(Q.a)(a,e,Object(u.a)(e,r)),alpha:()=>{let t=Object(Q.a)(a,Object(I.a)(e),Object(u.a)(e,n));const s=Object(x.getReductionAxes)(r.shape,e.shape);return s.length>0&&(t=Object(w.a)(t,s)),Object(v.a)(t,r.shape)}}}},Ot={kernelName:i.mc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=x.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=Object(d.a)(e,Object(o.a)(r,"float32")),s=x.getReductionAxes(n.shape,a);return s.length>0?Object(v.a)(Object(w.a)(t,s),n.shape):t},b:()=>{let t=Object(u.a)(e,Object(o.a)(n,"float32"));const s=x.getReductionAxes(r.shape,a);s.length>0&&(t=Object(v.a)(Object(w.a)(t,s),r.shape));const i=Object(m.a)(r);return Object(h.a)(Object(d.a)(t,Object(o.a)(i,"float32")))}}}},kt={kernelName:i.nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(h.a)(Object(m.a)(n)))}}},It={kernelName:i.pc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(u.a)(Object(X.a)(n,6),Object(c.a)(n));return{x:()=>Object(u.a)(e,Object(o.a)(r,"float32"))}}},St={kernelName:i.oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(o.a)(Object(c.a)(n),"float32"))}}},jt={kernelName:i.qc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(e,n.shape)}}},Nt={kernelName:i.rc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.a.runKernel(i.sc,a,n)}}},Tt={kernelName:i.tc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.a.runKernel(i.uc,a,n)}}};var Ct=n("5gGe");const Et={kernelName:i.vc,gradFunc:(e,t,n)=>{const{dims:r}=n,a=Object(F.I)(r,e.shape);return{x:()=>Object(Ct.a)(e,a)}}},At={kernelName:i.xc,gradFunc:e=>({x:()=>Object(I.a)(e)})},$t={kernelName:i.yc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(h.a)(Object(d.a)(e,Object(u.a)(Object(xt.a)(n,1.5),2)))}}};var Rt=n("XjY9");const Dt={kernelName:i.Ac,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Object(o.a)(Object(I.a)(n),"float32"),t:()=>Object(u.a)(e,Object(o.a)(n,e.dtype)),e:()=>Object(u.a)(e,Object(o.a)(Object(Rt.a)(n),e.dtype))}}};var Ft=n("rAKC");const _t={kernelName:i.Bc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(Be.a)(n,Object(p.a)(0)),r=Object(p.a)(Ft.b),a=Object(p.a)(Ft.a),s=Object(u.a)(e,a),i=Object(u.a)(Object(u.a)(e,r),Object(Ie.a)(Object(o.a)(n,"float32")));return Object(Q.a)(t,s,i)}}}},Mt={kernelName:i.Cc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(u.a)(n,Object(b.a)(Object(p.a)(1),n)))}}},zt={kernelName:i.Dc,gradFunc:e=>({x:()=>Object(I.a)(e)})};var Lt=n("s144");const Pt={kernelName:i.Ec,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(Object(Lt.a)(Object(o.a)(n,"float32")),e)}}};var Bt=n("MvpJ");const Vt={kernelName:i.Fc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(Object(Bt.a)(Object(o.a)(n,"float32")),e)}}};var Wt=n("bhue"),Ut=n("DIJJ");const Gt={kernelName:i.Gc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=Object(Ut.parseSliceParams)(r,a,s),c=[];for(let t=0;t<e.rank;t++)c.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>Object(Wt.a)(e,c)}}},qt={kernelName:i.Hc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=Object(u.a)(e,r);return{logits:()=>Object(b.a)(s,Object(u.a)(Object(w.a)(s,[a],true),r))}}};var Ht=n("PRjJ");const Yt={kernelName:i.Ic,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(Ht.a)(n))}}};var Kt=n("nF6w");const Xt={kernelName:i.Jc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(Kt.a)(e,r,a)}}};var Zt=n("PurG");const Qt={kernelName:i.Pc,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Object(Zt.a)(e,r)}}},Jt={kernelName:i.Qc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(u.a)(Object(f.a)(Object(o.a)(n,"float32")),2))}}},en={kernelName:i.Rc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(u.a)(Object(o.a)(n,"float32"),2))}}},tn={kernelName:i.Sc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(p.a)(2);return{a:()=>Object(u.a)(e,Object(u.a)(a,Object(b.a)(n,r))),b:()=>Object(u.a)(e,Object(u.a)(a,Object(b.a)(r,n)))}}},nn={kernelName:i.Tc,gradFunc:e=>({x:()=>Object(I.a)(e)})},rn={kernelName:i.Yc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=x.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=x.getReductionAxes(n.shape,a);return r.length>0&&(t=Object(w.a)(t,r)),Object(v.a)(t,n.shape)},b:()=>{let t=e;const n=x.getReductionAxes(r.shape,a);return n.length>0&&(t=Object(w.a)(t,n)),Object(v.a)(Object(h.a)(t),r.shape)}}}},an={kernelName:i.Zc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;Object(F.I)(s,r.shape).forEach((e=>{a[e]=1}));const i=Object(v.a)(e,a),o=Object(u.a)(i,Object(nt.a)(r.shape,"float32"));return{x:()=>o}}},sn={kernelName:i.ad,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(m.a)(Object(Lt.a)(n)))}}},on={kernelName:i.bd,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(Object(b.a)(Object(p.a)(1),Object(m.a)(n)),e)}}},un={kernelName:i.cd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Object(I.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Object(T.a)(t,Object(it.a)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Object(T.a)(t,Object(it.a)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Object(T.a)(t,Object(it.a)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Object(T.a)(t,Object(it.a)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},cn={kernelName:i.fd,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=me.h(a);return{x:()=>Object(ge.a)(e,s)}}};var ln=n("7exT");const dn={kernelName:i.hd,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(ln.a)(e,a)}}};var hn=n("dKcc"),pn=n("DSJG"),fn=n("ZuVY");const mn={kernelName:i.id,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Object(fn.a)(t,Object(I.a)(t)),r=Object(pn.a)(e,n);let a=Object(K.a)(t,Object(p.a)(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Object(hn.a)(a,e+1);a=Object(Z.a)(a,Object(nt.a)(r.shape,"bool"));const i=Object(I.a)(r);return Object(Q.a)(a,r,i)}(e,n)}}},bn={kernelName:i.jd,gradFunc:e=>({x:()=>Object(I.a)(e)})};var gn=n("TLHE");const yn=[l,g,y,O,k,S,j,N,C,E,A,$,L,B,W,G,q,H,Y,J,ee,ne,oe,se,le,he,fe,ye,we,Oe,Ot,ke,Se,je,Ne,Te,Ee,Ce,Re,Fe,_e,Me,ze,Le,Pe,Ve,We,Ue,Ge,He,Ke,Ke,Ze,Je,tt,rt,at,st,ot,ct,lt,dt,pt,ft,bt,gt,gt,vt,wt,kt,It,St,jt,Nt,Tt,Et,At,$t,Dt,_t,Mt,zt,Pt,Vt,Gt,qt,Yt,Xt,Xt,Qt,Qt,Jt,tn,en,nn,rn,an,sn,on,un,cn,dn,mn,bn];for(const e of yn)Object(gn.e)(e)},nF6w:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({batchToSpaceND_:function(e,t,n){const o=Object(s.a)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));return i.b(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.b(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.b(o.shape[0]%u==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`)),r.a.runKernel(a.t,{x:o},{blockShape:t,crops:n})}})},o2LJ:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},o8ld:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({clipByValue_:function(e,t,n){const o=Object(s.a)(e,"x","clipByValue");return i.b(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),r.a.runKernel(a.z,{x:o},{clipValueMin:t,clipValueMax:n})}})},oPUo:function(e,t,n){(function(e){function r(e,t){this._id=e,this._clearFn=t}var a=void 0!==e&&e||"undefined"!=typeof self&&self||window,s=Function.prototype.apply;t.setTimeout=function(){return new r(s.call(setTimeout,a,arguments),clearTimeout)},t.setInterval=function(){return new r(s.call(setInterval,a,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(a,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n("heVN"),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n("pCvA"))},oRLg:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({expm1_:function(e){const t=Object(s.a)(e,"x","expm1");return r.a.runKernel(a.db,{x:t})}})},oWI0:function(e,t,n){"use strict";var r;n.d(t,"a",(function(){return r})),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},pAYp:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("qCmv"),i=n("tFNL"),o=n("6D6q"),u=n("6RbH");const c=Object(o.b)({conv2DBackpropFilter_:function(e,t,n,o,c,l="NHWC",d){let h=e;3===e.rank&&(h=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.b(4===h.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${h.shape}.`)),s.b(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),s.b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===l?h.shape[3]:h.shape[1],m="NHWC"===l?p.shape[3]:p.shape[1];return s.b(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),s.b(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),i.a("conv2dDerFilter",c,d),r.a.runKernel(a.E,{x:h,dy:p},{strides:o,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:n})}})},pCvA:function(e){var t;t=function(){return this}();try{t=t||new Function("return this")()}catch(e){"object"==typeof window&&(t=window)}e.exports=t},pI0a:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({exp_:function(e){const t=Object(s.a)(e,"x","exp");return r.a.runKernel(a.bb,{x:t})}})},pRRN:function(e,t,n){"use strict";function r(e,t){if((Object(a.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(a.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(s.a)(e,[],[],t)}n.d(t,"a",(function(){return r}));var a=n("qCmv"),s=n("/en9")},"q/Pd":function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n=a[s]=(n^=n>>>15)^(e^=e>>>12),t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=0==(n=o[127&s]^=r+(i=i+1640531527|0))?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,o[a]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},q9rs:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("6D6q"),i=n("6RbH");const o=Object(s.b)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,o,u=[1,1],c){let l=e;3===e.rank&&(l=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;return 3===d.rank&&(d=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),r.a.runKernel(a.Q,{x:l,dy:d},{strides:s,pad:o,dimRoundingMode:c,dilations:u,filterShape:n})}})},qCmv:function(e,t,n){"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function c(e,t){const n=Math.random();return t*n+(1-n)*e}function l(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function h(e,t,n=""){d(g(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||$(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function b(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function O(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=(()=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function I(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function S(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>y(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function j(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:S(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function N(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function C(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function E(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function $(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function F(e){return"string"==typeof e||e instanceof String}function _(e){return"boolean"==typeof e}function M(e){return"number"==typeof e}function z(e){return Array.isArray(e)?z(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":F(e)?"string":_(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function B(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function V(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=V(e+t*o,i,n,r)}return a}function W(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return V(0,e,t,n)}function U(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function H(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Y(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function X(e){return e&&e.then&&"function"==typeof e.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return a})),n.d(t,"i",(function(){return s})),n.d(t,"H",(function(){return i})),n.d(t,"S",(function(){return o})),n.d(t,"R",(function(){return u})),n.d(t,"J",(function(){return c})),n.d(t,"l",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"e",(function(){return h})),n.d(t,"d",(function(){return p})),n.d(t,"m",(function(){return f})),n.d(t,"O",(function(){return m})),n.d(t,"y",(function(){return b})),n.d(t,"a",(function(){return g})),n.d(t,"v",(function(){return y})),n.d(t,"T",(function(){return x})),n.d(t,"P",(function(){return v})),n.d(t,"k",(function(){return w})),n.d(t,"L",(function(){return O})),n.d(t,"K",(function(){return k})),n.d(t,"s",(function(){return I})),n.d(t,"I",(function(){return S})),n.d(t,"Q",(function(){return j})),n.d(t,"o",(function(){return N})),n.d(t,"n",(function(){return T})),n.d(t,"h",(function(){return C})),n.d(t,"B",(function(){return E})),n.d(t,"p",(function(){return A})),n.d(t,"A",(function(){return $})),n.d(t,"g",(function(){return R})),n.d(t,"f",(function(){return D})),n.d(t,"z",(function(){return F})),n.d(t,"t",(function(){return _})),n.d(t,"w",(function(){return M})),n.d(t,"r",(function(){return z})),n.d(t,"u",(function(){return L})),n.d(t,"G",(function(){return P})),n.d(t,"j",(function(){return B})),n.d(t,"U",(function(){return W})),n.d(t,"D",(function(){return U})),n.d(t,"F",(function(){return G})),n.d(t,"E",(function(){return q})),n.d(t,"c",(function(){return H})),n.d(t,"C",(function(){return Y})),n.d(t,"q",(function(){return K})),n.d(t,"x",(function(){return X}))},qdaq:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("JjZs"),a=n("6D6q"),s=n("c2T0");const i=Object(a.b)({randomUniform_:function(e,t=0,n=1,a="float32",i){const o=Object(r.a)(e,a),u=new s.c(t,n,null,i);for(let e=0;e<o.values.length;e++)o.values[e]=u.nextValue();return o.toTensor()}})},qykS:function(e,t,n){"use strict";(function(e){function r(){return s.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(e,t){if(r()<t)throw new RangeError("Invalid typed array length");return s.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=s.prototype:(null===e&&(e=new s(t)),e.length=t),e}function s(e,t,n){if(!(s.TYPED_ARRAY_SUPPORT||this instanceof s))return new s(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return u(this,e)}return i(this,e,t,n)}function i(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);s.TYPED_ARRAY_SUPPORT?(e=t).__proto__=s.prototype:e=c(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!s.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|d(t,n),i=(e=a(e,r)).write(t,n);i!==r&&(e=e.slice(0,i));return e}(e,t,n):function(e,t){if(s.isBuffer(t)){var n=0|l(t.length);return 0===(e=a(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?a(e,0):c(e,t);if("Buffer"===t.type&&B(t.data))return c(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function o(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function u(e,t){if(o(t),e=a(e,t<0?0:0|l(t)),!s.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function c(e,t){var n=t.length<0?0:0|l(t.length);e=a(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function l(e){if(e>=r())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+r().toString(16)+" bytes");return 0|e}function d(e,t){if(s.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return _(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return M(e).length;default:if(r)return _(e).length;t=(""+t).toLowerCase(),r=!0}}function h(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return j(this,t,n);case"utf8":case"utf-8":return k(this,t,n);case"ascii":return I(this,t,n);case"latin1":case"binary":return S(this,t,n);case"base64":return O(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function p(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function f(e,t,n,r,a){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof t&&(t=s.from(t,r)),s.isBuffer(t))return 0===t.length?-1:m(e,t,n,r,a);if("number"==typeof t)return t&=255,s.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):m(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function m(e,t,n,r,a){function s(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}var i,o=1,u=e.length,c=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;o=2,u/=2,c/=2,n/=2}if(a){var l=-1;for(i=n;i<u;i++)if(s(e,i)===s(t,-1===l?0:i-l)){if(-1===l&&(l=i),i-l+1===c)return l*o}else-1!==l&&(i-=i-l),l=-1}else for(n+c>u&&(n=u-c),i=n;i>=0;i--){for(var d=!0,h=0;h<c;h++)if(s(e,i+h)!==s(t,h)){d=!1;break}if(d)return i}return-1}function b(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=t.length;if(s%2!=0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;++i){var o=parseInt(t.substr(2*i,2),16);if(isNaN(o))return i;e[n+i]=o}return i}function g(e,t,n,r){return z(_(t,e.length-n),e,n,r)}function y(e,t,n,r){return z(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function x(e,t,n,r){return y(e,t,n,r)}function v(e,t,n,r){return z(M(t),e,n,r)}function w(e,t,n,r){return z(function(e,t){for(var n,r,a=[],s=0;s<e.length&&!((t-=2)<0);++s)r=(n=e.charCodeAt(s))>>8,a.push(n%256),a.push(r);return a}(t,e.length-n),e,n,r)}function O(e,t,n){return L.fromByteArray(0===t&&n===e.length?e:e.slice(t,n))}function k(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var s,i,o,u,c=e[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:128==(192&(s=e[a+1]))&&(u=(31&c)<<6|63&s)>127&&(l=u);break;case 3:i=e[a+2],128==(192&(s=e[a+1]))&&128==(192&i)&&(u=(15&c)<<12|(63&s)<<6|63&i)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:i=e[a+2],o=e[a+3],128==(192&(s=e[a+1]))&&128==(192&i)&&128==(192&o)&&(u=(15&c)<<18|(63&s)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(l=u)}null===l?(l=65533,d=1):l>65535&&(r.push((l-=65536)>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(e){var t=e.length;if(t<=V)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=V));return n}(r)}function I(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function S(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function j(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=t;s<n;++s)a+=F(e[s]);return a}function N(e,t,n){for(var r=e.slice(t,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function T(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function C(e,t,n,r,a,i){if(!s.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<i)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function E(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,s=Math.min(e.length-n,2);a<s;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function A(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,s=Math.min(e.length-n,4);a<s;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function $(e,t,n,r){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function R(e,t,n,r,a){return a||$(e,0,n,4),P.write(e,t,n,r,23,4),n+4}function D(e,t,n,r,a){return a||$(e,0,n,8),P.write(e,t,n,r,52,8),n+8}function F(e){return e<16?"0"+e.toString(16):e.toString(16)}function _(e,t){var n;t=t||1/0;for(var r=e.length,a=null,s=[],i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function M(e){return L.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(W,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function z(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}var L=n("KlUR"),P=n("FaXh"),B=n("kah5");t.Buffer=s,t.SlowBuffer=function(e){return+e!=e&&(e=0),s.alloc(+e)},t.INSPECT_MAX_BYTES=50,s.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=r(),s.poolSize=8192,s._augment=function(e){return e.__proto__=s.prototype,e},s.from=function(e,t,n){return i(null,e,t,n)},s.TYPED_ARRAY_SUPPORT&&(s.prototype.__proto__=Uint8Array.prototype,s.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&s[Symbol.species]===s&&Object.defineProperty(s,Symbol.species,{value:null,configurable:!0})),s.alloc=function(e,t,n){return function(e,t,n,r){return o(t),t<=0?a(e,t):void 0!==n?"string"==typeof r?a(e,t).fill(n,r):a(e,t).fill(n):a(e,t)}(null,e,t,n)},s.allocUnsafe=function(e){return u(null,e)},s.allocUnsafeSlow=function(e){return u(null,e)},s.isBuffer=function(e){return!(null==e||!e._isBuffer)},s.compare=function(e,t){if(!s.isBuffer(e)||!s.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,i=Math.min(n,r);a<i;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},s.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(e,t){if(!B(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return s.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=s.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var i=e[n];if(!s.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,a),a+=i.length}return r},s.byteLength=d,s.prototype._isBuffer=!0,s.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)p(this,t,t+1);return this},s.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)p(this,t,t+3),p(this,t+1,t+2);return this},s.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)p(this,t,t+7),p(this,t+1,t+6),p(this,t+2,t+5),p(this,t+3,t+4);return this},s.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?k(this,0,e):h.apply(this,arguments)},s.prototype.equals=function(e){if(!s.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===s.compare(this,e)},s.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},s.prototype.compare=function(e,t,n,r,a){if(!s.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(this===e)return 0;for(var i=(a>>>=0)-(r>>>=0),o=(n>>>=0)-(t>>>=0),u=Math.min(i,o),c=this.slice(r,a),l=e.slice(t,n),d=0;d<u;++d)if(c[d]!==l[d]){i=c[d],o=l[d];break}return i<o?-1:o<i?1:0},s.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},s.prototype.indexOf=function(e,t,n){return f(this,e,t,n,!0)},s.prototype.lastIndexOf=function(e,t,n){return f(this,e,t,n,!1)},s.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return b(this,e,t,n);case"utf8":case"utf-8":return g(this,e,t,n);case"ascii":return y(this,e,t,n);case"latin1":case"binary":return x(this,e,t,n);case"base64":return v(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return w(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var V=4096;s.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),s.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=s.prototype;else{var a=t-e;n=new s(a,void 0);for(var i=0;i<a;++i)n[i]=this[i+e]}return n},s.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||T(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r},s.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||T(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},s.prototype.readUInt8=function(e,t){return t||T(e,1,this.length),this[e]},s.prototype.readUInt16LE=function(e,t){return t||T(e,2,this.length),this[e]|this[e+1]<<8},s.prototype.readUInt16BE=function(e,t){return t||T(e,2,this.length),this[e]<<8|this[e+1]},s.prototype.readUInt32LE=function(e,t){return t||T(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},s.prototype.readUInt32BE=function(e,t){return t||T(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},s.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||T(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},s.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||T(e,t,this.length);for(var r=t,a=1,s=this[e+--r];r>0&&(a*=256);)s+=this[e+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*t)),s},s.prototype.readInt8=function(e,t){return t||T(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},s.prototype.readInt16LE=function(e,t){t||T(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt16BE=function(e,t){t||T(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt32LE=function(e,t){return t||T(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},s.prototype.readInt32BE=function(e,t){return t||T(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},s.prototype.readFloatLE=function(e,t){return t||T(e,4,this.length),P.read(this,e,!0,23,4)},s.prototype.readFloatBE=function(e,t){return t||T(e,4,this.length),P.read(this,e,!1,23,4)},s.prototype.readDoubleLE=function(e,t){return t||T(e,8,this.length),P.read(this,e,!0,52,8)},s.prototype.readDoubleBE=function(e,t){return t||T(e,8,this.length),P.read(this,e,!1,52,8)},s.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||C(this,e,t,n,Math.pow(2,8*n)-1,0);var a=1,s=0;for(this[t]=255&e;++s<n&&(a*=256);)this[t+s]=e/a&255;return t+n},s.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||C(this,e,t,n,Math.pow(2,8*n)-1,0);var a=n-1,s=1;for(this[t+a]=255&e;--a>=0&&(s*=256);)this[t+a]=e/s&255;return t+n},s.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,1,255,0),s.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},s.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):E(this,e,t,!0),t+2},s.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):E(this,e,t,!1),t+2},s.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):A(this,e,t,!0),t+4},s.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):A(this,e,t,!1),t+4},s.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);C(this,e,t,n,a-1,-a)}var s=0,i=1,o=0;for(this[t]=255&e;++s<n&&(i*=256);)e<0&&0===o&&0!==this[t+s-1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+n},s.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);C(this,e,t,n,a-1,-a)}var s=n-1,i=1,o=0;for(this[t+s]=255&e;--s>=0&&(i*=256);)e<0&&0===o&&0!==this[t+s+1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+n},s.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,1,127,-128),s.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},s.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):E(this,e,t,!0),t+2},s.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):E(this,e,t,!1),t+2},s.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,2147483647,-2147483648),s.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):A(this,e,t,!0),t+4},s.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):A(this,e,t,!1),t+4},s.prototype.writeFloatLE=function(e,t,n){return R(this,e,t,!0,n)},s.prototype.writeFloatBE=function(e,t,n){return R(this,e,t,!1,n)},s.prototype.writeDoubleLE=function(e,t,n){return D(this,e,t,!0,n)},s.prototype.writeDoubleBE=function(e,t,n){return D(this,e,t,!1,n)},s.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,i=r-n;if(this===e&&n<t&&t<r)for(a=i-1;a>=0;--a)e[a+t]=this[a+n];else if(i<1e3||!s.TYPED_ARRAY_SUPPORT)for(a=0;a<i;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+i),t);return i},s.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!s.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{var o=s.isBuffer(e)?e:_(new s(e,r).toString()),u=o.length;for(i=0;i<n-t;++i)this[i+t]=o[i%u]}return this};var W=/[^+\/0-9A-Za-z-_]/g}).call(this,n("pCvA"))},qzbf:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("qCmv"),i=n("6D6q");const o=Object(i.b)({ifft_:function(e){return Object(s.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`)),r.a.runKernel(a.rb,{input:e})}})},rAKC:function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}));const r=1.7580993408473768,a=1.0507009873554805},"s/7G":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({maxPoolWithArgmax_:function(e,t,n,i,o=!1){const u=Object(s.a)(e,"x","maxPoolWithArgmax"),c=r.a.runKernel(a.Ob,{x:u},{filterSize:t,strides:n,pad:i,includeBatchInIndex:o});return{result:c[0],indexes:c[1]}}})},s144:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({cos_:function(e){const t=Object(s.a)(e,"x","cos","float32");return r.a.runKernel(a.J,{x:t})}})},s49F:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("VncX"),u=n("6D6q");const c=Object(u.b)({squaredDifference_:function(e,t){let n=Object(i.a)(e,"a","squaredDifference"),u=Object(i.a)(t,"b","squaredDifference");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.Sc,{a:n,b:u},{})}})},s8iC:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n("beMT"),a=n("qCmv"),s=n("zCKB"),i=n("nF6w"),o=n("tFNL"),u=n("PJQw"),c=n("6D6q"),l=n("6RbH"),d=n("TbFj");const h=Object(c.b)({pool_:function(e,t,n,c,h,p,f){null==h&&(h=[1,1]),null==p&&(p=1),0===c&&(c="valid");const m=Object(r.a)(e,"x","maxPool");let b=m,g=!1;3===m.rank&&(g=!0,b=Object(l.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),a.b(o.i(p,h),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`));const y=o.f(b.shape,t,p,h,c),x=[y.dilationHeight,y.dilationWidth];let v;v="same"===c?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([y.filterHeight,y.filterWidth],x):[[0,0],[0,0]];const w=1===x[0]&&1===x[1],[O,k]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),u=t.map(((e,t)=>[r[t],o[t]])),c=t.map(((e,t)=>[0,i[t]]));return[u,c]}([y.inHeight,y.inWidth],x,v),I=w?c:"valid",S=w?b:Object(d.a)(b,x,O),j=("avg"===n?()=>Object(s.a)(S,t,p,I,f):()=>Object(u.a)(S,t,p,I,f))(),N=w?j:Object(i.a)(j,x,k);return g?Object(l.a)(N,[N.shape[1],N.shape[2],N.shape[3]]):N}})},sWob:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({softplus_:function(e){const t=Object(s.a)(e,"x","softplus");return r.a.runKernel(a.Ic,{x:t})}})},spsd:function(e,t,n){(function(e){function r(e,n){var r={seen:[],stylize:s};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),l(n)?r.showHidden=n:n&&t._extend(r,n),f(r.showHidden)&&(r.showHidden=!1),f(r.depth)&&(r.depth=2),f(r.colors)&&(r.colors=!1),f(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=a),i(r,e,r.depth)}function a(e,t){var n=r.styles[t];return n?"["+r.colors[n][0]+"m"+e+"["+r.colors[n][1]+"m":e}function s(e){return e}function i(e,n,r){if(e.customInspect&&n&&x(n.inspect)&&n.inspect!==t.inspect&&(!n.constructor||n.constructor.prototype!==n)){var a=n.inspect(r,e);return p(a)||(a=i(e,a,r)),a}var s=function(e,t){if(f(t))return e.stylize("undefined","undefined");if(p(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}if(h(t))return e.stylize(""+t,"number");if(l(t))return e.stylize(""+t,"boolean");if(d(t))return e.stylize("null","null")}(e,n);if(s)return s;var b=Object.keys(n),v=function(e){var t={};return e.forEach((function(e){t[e]=!0})),t}(b);if(e.showHidden&&(b=Object.getOwnPropertyNames(n)),y(n)&&(b.indexOf("message")>=0||b.indexOf("description")>=0))return o(n);if(0===b.length){if(x(n))return e.stylize("[Function"+(n.name?": "+n.name:"")+"]","special");if(m(n))return e.stylize(RegExp.prototype.toString.call(n),"regexp");if(g(n))return e.stylize(Date.prototype.toString.call(n),"date");if(y(n))return o(n)}var w,O="",I=!1,S=["{","}"];(c(n)&&(I=!0,S=["[","]"]),x(n))&&(O=" [Function"+(n.name?": "+n.name:"")+"]");return m(n)&&(O=" "+RegExp.prototype.toString.call(n)),g(n)&&(O=" "+Date.prototype.toUTCString.call(n)),y(n)&&(O=" "+o(n)),0!==b.length||I&&0!=n.length?r<0?m(n)?e.stylize(RegExp.prototype.toString.call(n),"regexp"):e.stylize("[Object]","special"):(e.seen.push(n),w=I?function(e,t,n,r,a){for(var s=[],i=0,o=t.length;i<o;++i)k(t,String(i))?s.push(u(e,t,n,r,String(i),!0)):s.push("");return a.forEach((function(a){a.match(/^\d+$/)||s.push(u(e,t,n,r,a,!0))})),s}(e,n,r,v,b):b.map((function(t){return u(e,n,r,v,t,I)})),e.seen.pop(),function(e,t,n){if(e.reduce((function(e,t){return t.indexOf("\n")>=0&&0,e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60)return n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1];return n[0]+t+" "+e.join(", ")+" "+n[1]}(w,O,S)):S[0]+O+S[1]}function o(e){return"["+Error.prototype.toString.call(e)+"]"}function u(e,t,n,r,a,s){var o,u,c;if((c=Object.getOwnPropertyDescriptor(t,a)||{value:t[a]}).get?u=e.stylize(c.set?"[Getter/Setter]":"[Getter]","special"):c.set&&(u=e.stylize("[Setter]","special")),k(r,a)||(o="["+a+"]"),u||(e.seen.indexOf(c.value)<0?(u=d(n)?i(e,c.value,null):i(e,c.value,n-1)).indexOf("\n")>-1&&(u=s?u.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+u.split("\n").map((function(e){return"   "+e})).join("\n")):u=e.stylize("[Circular]","special")),f(o)){if(s&&a.match(/^\d+$/))return u;(o=JSON.stringify(""+a)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=e.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=e.stylize(o,"string"))}return o+": "+u}function c(e){return Array.isArray(e)}function l(e){return"boolean"==typeof e}function d(e){return null===e}function h(e){return"number"==typeof e}function p(e){return"string"==typeof e}function f(e){return void 0===e}function m(e){return b(e)&&"[object RegExp]"===v(e)}function b(e){return"object"==typeof e&&null!==e}function g(e){return b(e)&&"[object Date]"===v(e)}function y(e){return b(e)&&("[object Error]"===v(e)||e instanceof Error)}function x(e){return"function"==typeof e}function v(e){return Object.prototype.toString.call(e)}function w(e){return e<10?"0"+e.toString(10):e.toString(10)}function O(){var e=new Date,t=[w(e.getHours()),w(e.getMinutes()),w(e.getSeconds())].join(":");return[e.getDate(),C[e.getMonth()],t].join(" ")}function k(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function I(e,t){if(!e){var n=new Error("Promise was rejected with a falsy value");n.reason=e,e=n}return t(e)}var S=Object.getOwnPropertyDescriptors||function(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++)n[t[r]]=Object.getOwnPropertyDescriptor(e,t[r]);return n},j=/%[sdj%]/g;t.format=function(e){if(!p(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(r(arguments[n]));return t.join(" ")}n=1;for(var a=arguments,s=a.length,i=String(e).replace(j,(function(e){if("%%"===e)return"%";if(n>=s)return e;switch(e){case"%s":return String(a[n++]);case"%d":return Number(a[n++]);case"%j":try{return JSON.stringify(a[n++])}catch(e){return"[Circular]"}default:return e}})),o=a[n];n<s;o=a[++n])d(o)||!b(o)?i+=" "+o:i+=" "+r(o);return i},t.deprecate=function(n,r){if(void 0!==e&&!0===e.noDeprecation)return n;if(void 0===e)return function(){return t.deprecate(n,r).apply(this,arguments)};var a=!1;return function(){if(!a){if(e.throwDeprecation)throw new Error(r);e.traceDeprecation?console.trace(r):console.error(r),a=!0}return n.apply(this,arguments)}};var N,T={};t.debuglog=function(n){if(f(N)&&(N=e.env.NODE_DEBUG||""),n=n.toUpperCase(),!T[n])if(new RegExp("\\b"+n+"\\b","i").test(N)){var r=e.pid;T[n]=function(){var e=t.format.apply(t,arguments);console.error("%s %d: %s",n,r,e)}}else T[n]=function(){};return T[n]},t.inspect=r,r.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},r.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},t.isArray=c,t.isBoolean=l,t.isNull=d,t.isNullOrUndefined=function(e){return null==e},t.isNumber=h,t.isString=p,t.isSymbol=function(e){return"symbol"==typeof e},t.isUndefined=f,t.isRegExp=m,t.isObject=b,t.isDate=g,t.isError=y,t.isFunction=x,t.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},t.isBuffer=n("jmCa");var C=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];t.log=function(){console.log("%s - %s",O(),t.format.apply(t,arguments))},t.inherits=n("Fx6Z"),t._extend=function(e,t){if(!t||!b(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e};var E="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;t.promisify=function(e){function t(){for(var t,n,r=new Promise((function(e,r){t=e,n=r})),a=[],s=0;s<arguments.length;s++)a.push(arguments[s]);a.push((function(e,r){e?n(e):t(r)}));try{e.apply(this,a)}catch(e){n(e)}return r}if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');if(E&&e[E]){var t;if("function"!=typeof(t=e[E]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(t,E,{value:t,enumerable:!1,writable:!1,configurable:!0}),t}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),E&&Object.defineProperty(t,E,{value:t,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(t,S(e))},t.promisify.custom=E,t.callbackify=function(t){function n(){for(var n=[],r=0;r<arguments.length;r++)n.push(arguments[r]);var a=n.pop();if("function"!=typeof a)throw new TypeError("The last argument must be of type Function");var s=this,i=function(){return a.apply(s,arguments)};t.apply(this,n).then((function(t){e.nextTick(i,null,t)}),(function(t){e.nextTick(I,t,i)}))}if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');return Object.setPrototypeOf(n,Object.getPrototypeOf(t)),Object.defineProperties(n,S(t)),n}}).call(this,n("5IsQ"))},stJV:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("6D6q");const u=Object(o.b)({atan2_:function(e,t){let n=Object(i.a)(e,"a","atan2"),o=Object(i.a)(t,"b","atan2");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.m,{a:n,b:o})}})},"sxV+":function(e,t,n){"use strict";function r(e,t="float32"){if("complex64"===t){const t=r(e,"float32"),n=Object(o.a)(e,"float32");return Object(i.a)(t,n)}const n=Object(s.D)(Object(s.O)(e),t);return a.a.makeTensor(n,e,t)}n.d(t,"a",(function(){return r}));var a=n("QCRY"),s=n("qCmv"),i=n("bsxM"),o=n("cuXz")},tFNL:function(e,t,n){"use strict";function r(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,m(a))}function a(e,t,n,r,a,s,o="channelsLast"){const[u,l]=c(t);let d;if("channelsLast"===o)d=[u,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);d=[u,l,e[1],e[1]]}return i(e,d,n,r,a,s,!1,o)}function s(e,t,n,r,a,s,i="NDHWC"){const[u,c,d]=l(t);let h,p;if("NDHWC"===i)p="channelsLast",h=[u,c,d,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",h=[u,c,d,e[1],e[1]]}return o(e,h,n,r,a,!1,p,s)}function i(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,p,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[l,p,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,m,p,f]=e}const[b,g,,y]=t,[x,v]=c(n),[w,O]=c(r),k=d(b,w),I=d(g,O),{padInfo:S,outHeight:j,outWidth:N}=function(e,t,n,r,a,s,i,o,c){let l,d,p;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=u(e,t,n));const s=e[1],i=h((e[0]-t+2*r)/n+1,a),o=h((s-t+2*r)/n+1,a);return[i,o]}([t,n],s,r,e,o);d=a[0],p=a[1]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(p-1)*a+i-n),u=Math.floor(e/2),c=e-u,h=Math.floor(o/2);l={top:u,bottom:c,left:h,right:o-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===c?e[1][0]:e[2][0],f="channelsLast"===c?e[1][1]:e[2][1],m="channelsLast"===c?e[2][0]:e[3][0],b="channelsLast"===c?e[2][1]:e[3][1];l={top:u,bottom:f,left:m,right:b,type:0===u&&0===f&&0===m&&0===b?"VALID":"EXPLICIT"},d=h((t-s+u+f)/r+1,o),p=h((n-i+m+b)/a+1,o)}}return{padInfo:l,outHeight:d,outWidth:p}}(a,p,f,x,v,k,I,s,o),T=i?y*m:y;let C;return"channelsFirst"===o?C=[l,T,j,N]:"channelsLast"===o&&(C=[l,j,N,T]),{batchSize:l,dataFormat:o,inHeight:p,inWidth:f,inChannels:m,outHeight:j,outWidth:N,outChannels:T,padInfo:S,strideHeight:x,strideWidth:v,filterHeight:b,filterWidth:g,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationHeight:w,dilationWidth:O,inShape:e,outShape:C,filterShape:t}}function o(e,t,n,r,a,s=!1,i="channelsLast",o){let[c,p,f,m,b]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[c,p,f,m,b]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[c,b,p,f,m]=e}const[g,y,x,,v]=t,[w,O,k]=l(n),[I,S,j]=l(r),N=d(g,I),T=d(y,S),C=d(x,j),{padInfo:E,outDepth:A,outHeight:$,outWidth:R}=function(e,t,n,r,a,s,i,o,c,l,d){let p,f,m,b;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=u(e,t,r));const i=e[1],o=e[2],c=h((e[0]-t+2*a)/r+1,s),l=h((i-t+2*a)/r+1,s),d=h((o-t+2*a)/r+1,s);return[c,l,d,n]}([t,n,r,1],o,1,a,e,d);f=s[0],m=s[1],b=s[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/s),b=Math.ceil(r/i);const e=(f-1)*a+o-t,u=(m-1)*s+c-n,d=(b-1)*i+l-r,h=Math.floor(e/2),g=e-h,y=Math.floor(u/2),x=u-y,v=Math.floor(d/2);p={top:y,bottom:x,left:v,right:d-v,front:h,back:g,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/a),m=Math.ceil((n-c+1)/s),b=Math.ceil((r-l+1)/i)}return{padInfo:p,outDepth:f,outHeight:m,outWidth:b}}(a,p,f,m,w,O,k,N,T,C,o),D=s?v*b:v;let F;return"channelsFirst"===i?F=[c,D,A,$,R]:"channelsLast"===i&&(F=[c,A,$,R,D]),{batchSize:c,dataFormat:i,inDepth:p,inHeight:f,inWidth:m,inChannels:b,outDepth:A,outHeight:$,outWidth:R,outChannels:D,padInfo:E,strideDepth:w,strideHeight:O,strideWidth:k,filterDepth:g,filterHeight:y,filterWidth:x,effectiveFilterDepth:N,effectiveFilterHeight:T,effectiveFilterWidth:C,dilationDepth:I,dilationHeight:S,dilationWidth:j,inShape:e,outShape:F,filterShape:t}}function u(e,t,n,r=1){const a=d(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function l(e){return"number"==typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function p(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function f(e,t){return p(e)||p(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function b(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)g.b(g.v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{g.b(g.v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}n.d(t,"e",(function(){return r})),n.d(t,"f",(function(){return a})),n.d(t,"g",(function(){return s})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return o})),n.d(t,"d",(function(){return u})),n.d(t,"j",(function(){return p})),n.d(t,"i",(function(){return f})),n.d(t,"h",(function(){return m})),n.d(t,"a",(function(){return b}));var g=n("qCmv")},tH7w:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q");const u=Object(o.b)({unstack_:function(e,t=0){const n=Object(s.a)(e,"x","unstack","string_or_numeric");return i.b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`)),r.a.runKernel(a.hd,{value:n},{axis:t})}})},tZSd:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("VncX"),u=n("6D6q");const c=Object(u.b)({equal_:function(e,t){let n=Object(i.a)(e,"a","equal","string_or_numeric"),u=Object(i.a)(t,"b","equal","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.Z,{a:n,b:u})}})},tmMy:function(e,t,n){"use strict";function r(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");return a.a.runKernel(s.kc,{},{start:e,stop:t,step:n,dtype:r})}n.d(t,"a",(function(){return r}));var a=n("QCRY"),s=n("f7fD")},tnC0:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({elu_:function(e){const t=Object(s.a)(e,"x","elu","float32");return r.a.runKernel(a.X,{x:t})}})},tsju:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({max_:function(e,t=null,n=!1){const i=Object(s.a)(e,"x","max");return r.a.runKernel(a.Jb,{x:i},{reductionIndices:t,keepDims:n})}})},txfa:function(e,t,n){"use strict";(function(e){function r(t,n){const r=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const n=Object(g.Ye)().global;if(void 0!==n.atob)return n.atob(t);if(void 0!==e)return new e(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return n?r:r.toLowerCase()}function a(e,t,n,a=!1){const s=e[t];return null!=s?r(s.s,a):n}function s(e,t,n){const r=e[t];return r?r.b:n}function i(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function o(e){switch("string"==typeof e&&(e=y.a[e]),e){case y.a.DT_FLOAT:case y.a.DT_HALF:return"float32";case y.a.DT_INT32:case y.a.DT_INT64:case y.a.DT_INT8:case y.a.DT_UINT8:return"int32";case y.a.DT_BOOL:return"bool";case y.a.DT_DOUBLE:return"float32";case y.a.DT_STRING:return"string";default:return null}}function u(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function c(e,t,n){const r=e[t];return r&&r.type?o(r.type):n}function l(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>o(e))):n}function d(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function h(e,t,n){const r=e[t];return r&&r.shape?d(r.shape):n}function p(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function f(e,t,n,a=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>r(e,a))):n}function m(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>d(e))):n}function b(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}n.d(t,"a",(function(){return P})),n.d(t,"i",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"f",(function(){return i})),n.d(t,"e",(function(){return c})),n.d(t,"d",(function(){return l})),n.d(t,"k",(function(){return h})),n.d(t,"g",(function(){return p})),n.d(t,"h",(function(){return f})),n.d(t,"j",(function(){return m})),n.d(t,"b",(function(){return b}));var g=n("HIu9"),y=n("ff9U"),x=n("Ukiz"),v=n("GhFD"),w=n("xHJS"),O=n("ITmW"),k=n("7Uyg"),I=n("ANbN"),S=n("EYoY"),j=n("fihT"),N=n("mqsn"),T=n("/Exp"),C=n("ZWjI"),E=n("wtXJ"),A=n("41DX"),$=n("hscW"),R=n("KeJg"),D=n("jeM6"),F=n("a4Lf"),_=n("BRAv"),M=n("Vjgs"),z=n("PddD"),L=n("ExgN");class P{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[w,O,k,I,S,j,N,T,C,E,A,$,R,D,F,_,M,z,L].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=[],r=[],a=[],s=e.node.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?n.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let i=[];const o=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const l=Object.keys(s);l.forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=Object(v.b)(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){t.inputNames[n]=`${r}:${e}`}}t.inputs.push(i),i.children.push(t)}))})),0===Object.keys(c).length?l.forEach((e=>{const t=s[e];0===t.children.length&&o.push(t)})):Object.keys(c).forEach((e=>{const[t]=Object(v.b)(e),n=s[t];null!=n&&(n.signatureKey=c[e],o.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=Object(v.b)(e),n=s[t];n&&(n.signatureKey=u[e],i.push(n))})):i=n;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:s,inputs:i,outputs:o,weights:r,placeholders:n,signature:t,functions:d};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Object(x.b)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let o;switch(n.type){case"string":o=a(e.attr,n.tfName,n.defaultValue),void 0===o&&n.tfDeprecatedName&&(o=a(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":o=f(e.attr,n.tfName,n.defaultValue),void 0===o&&n.tfDeprecatedName&&(o=f(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":o=i(e.attr,n.tfName,n.defaultValue||0),void 0===o&&n.tfDeprecatedName&&(o=i(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":o=p(e.attr,n.tfName,n.defaultValue),void 0===o&&n.tfDeprecatedName&&(o=p(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":o=s(e.attr,n.tfName,n.defaultValue),void 0===o&&n.tfDeprecatedName&&(o=s(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":o=b(e.attr,n.tfName,n.defaultValue),void 0===o&&n.tfDeprecatedName&&(o=b(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":o=h(e.attr,n.tfName,n.defaultValue),void 0===o&&n.tfDeprecatedName&&(o=h(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":o=m(e.attr,n.tfName,n.defaultValue),void 0===o&&n.tfDeprecatedName&&(o=m(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":o=c(e.attr,n.tfName,n.defaultValue),void 0===o&&n.tfDeprecatedName&&(o=c(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":o=l(e.attr,n.tfName,n.defaultValue),void 0===o&&n.tfDeprecatedName&&(o=l(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":o=u(e.attr,n.tfName,n.defaultValue),void 0===o&&n.tfDeprecatedName&&(o=u(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:o,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=Object(v.b)(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:o(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=Object(v.b)(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){t.inputNames[n]=`${a}:${e}`}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Object(v.b)(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const u=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}}).call(this,n("qykS").Buffer)},tzXg:function(e,t,n){"use strict";function r(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Object(E.a)(e,"x","meshgrid",e instanceof lt.a?e.dtype:"float32");if(void 0===t)return[r];let a=Object(E.a)(t,"y","meshgrid",t instanceof lt.a?t.dtype:"float32");const s=Object(B.O)(r.shape),i=Object(B.O)(a.shape);return"xy"===n?(r=Object(Ee.a)(r,[1,-1]),a=Object(Ee.a)(a,[-1,1]),[Object($.a)(Object(ct.a)([i,1],r.dtype),r),Object($.a)(a,Object(ct.a)([1,s],a.dtype))]):(r=Object(Ee.a)(r,[-1,1]),a=Object(Ee.a)(a,[1,-1]),[Object($.a)(r,Object(ct.a)([1,i],r.dtype)),Object($.a)(Object(ct.a)([s,1],a.dtype),a)])}function a(e,t,n){if(Object(B.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(E.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Cn.a)(e,t,r,n)}function s(e,t,n){if(Object(B.d)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(E.c)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(Cn.a)(e,t,r,n)}function i(e,t,n){if(Object(B.d)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(E.c)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(Cn.a)(e,t,r,n)}function o(e,t,n){if(Object(B.d)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(E.c)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(Cn.a)(e,t,r,n)}function u(e,t=!0,n,r){return be.a.makeVariable(e,t,n,r)}function c(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function l(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Object(Tn.a)(a,"float32")}function d(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),B.b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),B.b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),B.b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),B.b(1===t.rank,(()=>"scores must be a 1D tensor")),B.b(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),B.b(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function h(e,t=!1){return be.a.tidy((()=>{Object(B.b)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=$e(n),i=Object(Q.a)(e);const o=a([[1]],[1,1]);let u=Object(Q.a)(o);const c=n>=r?r:n;for(let e=0;e<c;++e){const t=i,c=u,l=s;[u,i,s]=be.a.tidy((()=>{const t=Object(_.a)(i,[e,e],[n-e,1]),c=Object(Vn.a)(t),l=Object(_.a)(i,[e,e],[1,1]),d=Object(_n.a)(Object(Me.a)(l,0),a([[-1]]),a([[1]])),h=Object(gt.a)(l,Object(R.a)(d,c)),p=Object(ve.a)(t,h);u=1===p.shape[0]?Object(Q.a)(o):Object(A.a)([o,Object(_.a)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const f=Object(wt.a)(Object(ve.a)(Object($.a)(d,h),c)),m=Object(_.a)(i,[e,0],[n-e,r]),b=Object(R.a)(f,u),g=Object(Bn.a)(u);if(0===e)i=Object(gt.a)(m,Object($.a)(b,Object($.a)(g,m)));else{const t=Object(gt.a)(m,Object($.a)(b,Object($.a)(g,m)));i=Object(A.a)([Object(_.a)(i,[0,0],[e,r]),t],0)}const y=Object(Bn.a)(b),x=Object(_.a)(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Object(gt.a)(x,Object($.a)(Object($.a)(x,u),y));else{const t=Object(gt.a)(x,Object($.a)(Object($.a)(x,u),y));s=Object(A.a)([Object(_.a)(s,[0,0],[n,e]),t],1)}return[u,i,s]})),Object(Tr.d)([t,c,l])}return!t&&n>r&&(s=Object(_.a)(s,[0,0],[n,r]),i=Object(_.a)(i,[0,0],[r,r])),[s,i]}))}n.d(t,"b",(function(){return f.a})),n.d(t,"c",(function(){return m.a})),n.d(t,"d",(function(){return b.a})),n.d(t,"e",(function(){return g.a})),n.d(t,"f",(function(){return y.a})),n.d(t,"g",(function(){return x.a})),n.d(t,"h",(function(){return v.a})),n.d(t,"i",(function(){return w.a})),n.d(t,"j",(function(){return O.a})),n.d(t,"k",(function(){return k.a})),n.d(t,"l",(function(){return I.a})),n.d(t,"m",(function(){return S.a})),n.d(t,"n",(function(){return j.a})),n.d(t,"o",(function(){return N.a})),n.d(t,"p",(function(){return T.a})),n.d(t,"q",(function(){return C.a})),n.d(t,"r",(function(){return z})),n.d(t,"w",(function(){return L.a})),n.d(t,"s",(function(){return P.a})),n.d(t,"t",(function(){return V})),n.d(t,"u",(function(){return W})),n.d(t,"v",(function(){return U})),n.d(t,"x",(function(){return G.a})),n.d(t,"z",(function(){return q.a})),n.d(t,"A",(function(){return H.a})),n.d(t,"B",(function(){return Y.a})),n.d(t,"C",(function(){return K.a})),n.d(t,"D",(function(){return X.a})),n.d(t,"E",(function(){return Z.a})),n.d(t,"F",(function(){return Q.a})),n.d(t,"G",(function(){return J.a})),n.d(t,"H",(function(){return A.a})),n.d(t,"I",(function(){return ee})),n.d(t,"J",(function(){return te})),n.d(t,"K",(function(){return ne})),n.d(t,"L",(function(){return re})),n.d(t,"M",(function(){return ae.a})),n.d(t,"N",(function(){return se.a})),n.d(t,"O",(function(){return ie.a})),n.d(t,"P",(function(){return oe.a})),n.d(t,"Q",(function(){return ce})),n.d(t,"R",(function(){return le.a})),n.d(t,"S",(function(){return de.a})),n.d(t,"U",(function(){return he.a})),n.d(t,"V",(function(){return pe.a})),n.d(t,"W",(function(){return fe.a})),n.d(t,"X",(function(){return me.a})),n.d(t,"Y",(function(){return ye})),n.d(t,"Z",(function(){return xe.a})),n.d(t,"ab",(function(){return ve.a})),n.d(t,"bb",(function(){return we.a})),n.d(t,"cb",(function(){return Oe.a})),n.d(t,"eb",(function(){return ke.a})),n.d(t,"fb",(function(){return Ie.a})),n.d(t,"hb",(function(){return Se.a})),n.d(t,"ib",(function(){return je.a})),n.d(t,"jb",(function(){return Ne.a})),n.d(t,"kb",(function(){return Te.a})),n.d(t,"lb",(function(){return Ce.a})),n.d(t,"mb",(function(){return $e})),n.d(t,"ob",(function(){return Re.a})),n.d(t,"pb",(function(){return De.a})),n.d(t,"qb",(function(){return Fe.a})),n.d(t,"sb",(function(){return _e.a})),n.d(t,"ub",(function(){return Me.a})),n.d(t,"vb",(function(){return ze.a})),n.d(t,"xb",(function(){return Le.a})),n.d(t,"Bb",(function(){return Pe.a})),n.d(t,"Cb",(function(){return Be.a})),n.d(t,"Db",(function(){return Ve.a})),n.d(t,"Eb",(function(){return We.a})),n.d(t,"Fb",(function(){return Ue.a})),n.d(t,"Gb",(function(){return Ge.a})),n.d(t,"Ib",(function(){return qe.a})),n.d(t,"Jb",(function(){return He.a})),n.d(t,"Kb",(function(){return Ye.a})),n.d(t,"Lb",(function(){return Ke.a})),n.d(t,"Mb",(function(){return Xe.a})),n.d(t,"Nb",(function(){return Ze.a})),n.d(t,"Ob",(function(){return Qe.a})),n.d(t,"Pb",(function(){return Je.a})),n.d(t,"Qb",(function(){return et.a})),n.d(t,"Rb",(function(){return tt.a})),n.d(t,"Sb",(function(){return nt.a})),n.d(t,"Ub",(function(){return $.a})),n.d(t,"Vb",(function(){return rt.a})),n.d(t,"Wb",(function(){return at.a})),n.d(t,"Xb",(function(){return st.a})),n.d(t,"Yb",(function(){return it.a})),n.d(t,"Zb",(function(){return ot.a})),n.d(t,"ac",(function(){return ut.a})),n.d(t,"bc",(function(){return r})),n.d(t,"cc",(function(){return dt.a})),n.d(t,"dc",(function(){return ht.a})),n.d(t,"ec",(function(){return pt.a})),n.d(t,"fc",(function(){return ft.a})),n.d(t,"gc",(function(){return yt})),n.d(t,"ic",(function(){return R.a})),n.d(t,"jc",(function(){return xt})),n.d(t,"kc",(function(){return vt.a})),n.d(t,"lc",(function(){return wt.a})),n.d(t,"nc",(function(){return Ot.a})),n.d(t,"oc",(function(){return kt.a})),n.d(t,"pc",(function(){return ct.a})),n.d(t,"qc",(function(){return It.a})),n.d(t,"sc",(function(){return St})),n.d(t,"tc",(function(){return jt.a})),n.d(t,"uc",(function(){return Nt})),n.d(t,"vc",(function(){return Tt})),n.d(t,"wc",(function(){return Ct})),n.d(t,"xc",(function(){return Et})),n.d(t,"yc",(function(){return At.a})),n.d(t,"zc",(function(){return $t.a})),n.d(t,"Ac",(function(){return Rt.a})),n.d(t,"Bc",(function(){return Dt.a})),n.d(t,"Cc",(function(){return Ft.a})),n.d(t,"Dc",(function(){return _t})),n.d(t,"Ec",(function(){return zt})),n.d(t,"Fc",(function(){return Lt})),n.d(t,"Gc",(function(){return Pt.a})),n.d(t,"Hc",(function(){return Bt.a})),n.d(t,"Ic",(function(){return Vt.a})),n.d(t,"Jc",(function(){return Wt.a})),n.d(t,"Kc",(function(){return Ut.a})),n.d(t,"Lc",(function(){return Gt.a})),n.d(t,"Mc",(function(){return Ee.a})),n.d(t,"Nc",(function(){return qt.a})),n.d(t,"Oc",(function(){return Ht})),n.d(t,"Pc",(function(){return Yt})),n.d(t,"Qc",(function(){return Kt})),n.d(t,"Rc",(function(){return Xt})),n.d(t,"Tc",(function(){return Zt.a})),n.d(t,"Uc",(function(){return Qt.a})),n.d(t,"Vc",(function(){return Jt.a})),n.d(t,"Xc",(function(){return en.a})),n.d(t,"Yc",(function(){return tn.a})),n.d(t,"Zc",(function(){return nn.a})),n.d(t,"ad",(function(){return F.a})),n.d(t,"bd",(function(){return rn.a})),n.d(t,"dd",(function(){return an.a})),n.d(t,"ed",(function(){return sn.a})),n.d(t,"fd",(function(){return _.a})),n.d(t,"gd",(function(){return on})),n.d(t,"hd",(function(){return un})),n.d(t,"id",(function(){return cn})),n.d(t,"jd",(function(){return ln})),n.d(t,"kd",(function(){return dn.a})),n.d(t,"ld",(function(){return hn.a})),n.d(t,"md",(function(){return pn.a})),n.d(t,"nb",(function(){return fn.a})),n.d(t,"wb",(function(){return mn.a})),n.d(t,"Ab",(function(){return bn.a})),n.d(t,"Sc",(function(){return gn.a})),n.d(t,"qd",(function(){return yn.a})),n.d(t,"rd",(function(){return xn.a})),n.d(t,"sd",(function(){return bt.a})),n.d(t,"td",(function(){return vn.a})),n.d(t,"ud",(function(){return wn.a})),n.d(t,"vd",(function(){return On.a})),n.d(t,"wd",(function(){return kn.a})),n.d(t,"xd",(function(){return In.a})),n.d(t,"zd",(function(){return gt.a})),n.d(t,"Ad",(function(){return Sn.a})),n.d(t,"Bd",(function(){return jn.a})),n.d(t,"Cd",(function(){return M.a})),n.d(t,"Dd",(function(){return Nn.a})),n.d(t,"Ed",(function(){return Tn.a})),n.d(t,"Fd",(function(){return a})),n.d(t,"Gd",(function(){return En.a})),n.d(t,"Hd",(function(){return s})),n.d(t,"Id",(function(){return i})),n.d(t,"Jd",(function(){return o})),n.d(t,"Kd",(function(){return Ae.a})),n.d(t,"Ld",(function(){return An.a})),n.d(t,"Nd",(function(){return $n.a})),n.d(t,"Od",(function(){return Rn.a})),n.d(t,"Pd",(function(){return Dn.a})),n.d(t,"Qd",(function(){return Fn.a})),n.d(t,"Rd",(function(){return u})),n.d(t,"Sd",(function(){return _n.a})),n.d(t,"Td",(function(){return Mn.a})),n.d(t,"Ud",(function(){return zn.a})),n.d(t,"Vd",(function(){return Ln.a})),n.d(t,"y",(function(){return Pn})),n.d(t,"Md",(function(){return Bn.a})),n.d(t,"mc",(function(){return Vn.a})),n.d(t,"hc",(function(){return Un})),n.d(t,"Wc",(function(){return Gn.a})),n.d(t,"od",(function(){return qn.a})),n.d(t,"tb",(function(){return Hn.a})),n.d(t,"db",(function(){return Yn})),n.d(t,"gb",(function(){return c})),n.d(t,"T",(function(){return l})),n.d(t,"zb",(function(){return Kn})),n.d(t,"rc",(function(){return D.b})),n.d(t,"a",(function(){return D.a})),n.d(t,"yb",(function(){return Kr})),n.d(t,"Hb",(function(){return Xr})),n.d(t,"Tb",(function(){return Zr})),n.d(t,"pd",(function(){return Hr})),n.d(t,"rb",(function(){return p})),n.d(t,"cd",(function(){return Yr})),n.d(t,"nd",(function(){return Qr})),n.d(t,"yd",(function(){return Jr}));var p={};n.r(p),n.d(p,"conv2d",(function(){return nr})),n.d(p,"depthwiseConv2d",(function(){return sr})),n.d(p,"matMul",(function(){return ir}));var f=n("/nzz"),m=n("T0gV"),b=n("2pXM"),g=n("IjOl"),y=n("QLnx"),x=n("BMWi"),v=n("H9TD"),w=n("81bp"),O=n("i2y0"),k=n("DQih"),I=n("jyGP"),S=n("y5x8"),j=n("stJV"),N=n("BQvL"),T=n("zCKB"),C=n("YJlT"),E=n("beMT"),A=n("PurG"),$=n("vTEK"),R=n("TvjY"),D=n("6D6q"),F=n("PRjJ"),_=n("O7pG"),M=n("z2op");const z=Object(D.b)({basicLSTMCell_:function(e,t,n,r,a,s){const i=Object(E.a)(e,"forgetBias","basicLSTMCell"),o=Object(E.a)(t,"lstmKernel","basicLSTMCell"),u=Object(E.a)(n,"lstmBias","basicLSTMCell"),c=Object(E.a)(r,"data","basicLSTMCell"),l=Object(E.a)(a,"c","basicLSTMCell"),d=Object(E.a)(s,"h","basicLSTMCell"),h=Object(A.a)([c,d],1),p=Object($.a)(h,o),f=Object(g.a)(p,u),m=f.shape[1]/4,b=[f.shape[0],m],y=Object(_.a)(f,[0,0],b),x=Object(_.a)(f,[0,m],b),v=Object(_.a)(f,[0,2*m],b),w=Object(_.a)(f,[0,3*m],b),O=Object(g.a)(Object(R.a)(Object(F.a)(y),Object(M.a)(x)),Object(R.a)(l,Object(F.a)(Object(g.a)(i,v))));return[O,Object(R.a)(Object(M.a)(O),Object(F.a)(w))]}});var L=n("nF6w"),P=n("BKSR"),B=n("qCmv");const V=Object(D.b)({batchNorm2d_:function(e,t,n,r,a,s){const i=Object(E.a)(e,"x","batchNorm"),o=Object(E.a)(t,"mean","batchNorm"),u=Object(E.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(E.a)(a,"scale","batchNorm")),null!=r&&(l=Object(E.a)(r,"offset","batchNorm")),B.b(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),B.b(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),B.b(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&B.b(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=l&&B.b(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`)),Object(P.a)(i,o,u,l,c,s)}}),W=Object(D.b)({batchNorm3d_:function(e,t,n,r,a,s){const i=Object(E.a)(e,"x","batchNorm"),o=Object(E.a)(t,"mean","batchNorm"),u=Object(E.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(E.a)(a,"scale","batchNorm")),null!=r&&(l=Object(E.a)(r,"offset","batchNorm")),B.b(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),B.b(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),B.b(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&B.b(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=l&&B.b(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`)),Object(P.a)(i,o,u,l,c,s)}}),U=Object(D.b)({batchNorm4d_:function(e,t,n,r,a,s){const i=Object(E.a)(e,"x","batchNorm"),o=Object(E.a)(t,"mean","batchNorm"),u=Object(E.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(E.a)(a,"scale","batchNorm")),null!=r&&(l=Object(E.a)(r,"offset","batchNorm")),B.b(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),B.b(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),B.b(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&B.b(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=l&&B.b(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`)),Object(P.a)(i,o,u,l,c,s)}});var G=n("jtlB"),q=n("+gnc"),H=n("Myfv"),Y=n("JjZs"),K=n("VWKH"),X=n("GkXz"),Z=n("o8ld"),Q=n("ZQ8H"),J=n("bsxM");const ee=Object(D.b)({concat1d_:function(e){return Object(A.a)(e,0)}}),te=Object(D.b)({concat2d_:function(e,t){return Object(A.a)(e,t)}}),ne=Object(D.b)({concat3d_:function(e,t){return Object(A.a)(e,t)}}),re=Object(D.b)({concat4d_:function(e,t){return Object(A.a)(e,t)}});var ae=n("4px1"),se=n("UY8A"),ie=n("EOdB"),oe=n("1ncO"),ue=n("zgTD");const ce=Object(D.b)({conv3dTranspose_:function(e,t,n,r,a){const s=Object(E.a)(e,"x","conv3dTranspose"),i=Object(E.a)(t,"filter","conv3dTranspose");return Object(ue.a)(n,s,i,r,a)}});var le=n("s144"),de=n("MvpJ"),he=n("ZGBu"),pe=n("FZ96"),fe=n("TTC5"),me=n("b/7Q"),be=n("QCRY"),ge=n("f7fD");const ye=Object(D.b)({diag_:function(e){const t=Object(E.a)(e,"x","diag");return be.a.runKernel(ge.S,{x:t})}});var xe=n("9O3H"),ve=n("J/Nb"),we=n("E2tP"),Oe=n("h5te"),ke=n("J7Up"),Ie=n("tnC0"),Se=n("tZSd"),je=n("KZu2"),Ne=n("pI0a"),Te=n("dKcc"),Ce=n("oRLg"),Ee=n("6RbH"),Ae=n("5oWy");const $e=Object(D.b)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Object(Y.a)([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Object(Ee.a)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Object(Ae.a)(Object(Te.a)(i,0),[n[0],1,1]);if(2===n.length)return Object(Ae.a)(Object(Te.a)(Object(Te.a)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(Ae.a)(Object(Te.a)(Object(Te.a)(Object(Te.a)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Re=n("3hN3"),De=n("/0Av"),Fe=n("a4Y6"),_e=n("DSJG"),Me=n("L2At"),ze=n("LIhl"),Le=n("393e"),Pe=n("izwh"),Be=n("V0g5"),Ve=n("f62m"),We=n("F/nV"),Ue=n("+VIV"),Ge=n("hYe0"),qe=n("xJ83"),He=n("CGXl"),Ye=n("V7pg"),Ke=n("B4Jo"),Xe=n("zunn"),Ze=n("Klcu"),Qe=n("f1WP"),Je=n("axJg"),et=n("XjY9"),tt=n("jyi7"),nt=n("28uj"),rt=n("tsju"),at=n("PJQw"),st=n("MLUI"),it=n("s/7G"),ot=n("ZuVY"),ut=n("f/sF"),ct=n("sxV+"),lt=n("Vloo"),dt=n("I4Wd"),ht=n("IbvB"),pt=n("TKdW"),ft=n("jSy6"),mt=n("By71"),bt=n("9rnT"),gt=n("7JZ3");const yt=Object(D.b)({moments_:function(e,t=null,n=!1){e=Object(E.a)(e,"x","moments");const r=Object(B.I)(t,e.shape),a=Object(ut.a)(e,r,n);let s=a.shape;n||(s=Object(mt.e)(a.shape,r));const i=Object(bt.a)(Object(gt.a)(Object(K.a)(e,"float32"),Object(Ee.a)(a,s)));return{mean:a,variance:Object(ut.a)(i,r,n)}}}),xt=Object(D.b)({multiRNNCell_:function(e,t,n,r){const a=Object(E.a)(t,"data","multiRNNCell"),s=Object(E.b)(n,"c","multiRNNCell"),i=Object(E.b)(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const c=[],l=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),l.push(u[e+1]);return[c,l]}});var vt=n("dMGs"),wt=n("uiqz"),Ot=n("zz8d"),kt=n("Jd0k"),It=n("i9Yk");const St=Object(D.b)({outerProduct_:function(e,t){const n=Object(E.a)(e,"v1","outerProduct"),r=Object(E.a)(t,"v2","outerProduct");B.b(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=Object(Ee.a)(n,[-1,1]),s=Object(Ee.a)(r,[1,-1]);return Object($.a)(a,s)}});var jt=n("bhue");const Nt=Object(D.b)({pad1d_:function(e,t,n=0){return Object(B.b)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Object(jt.a)(e,[t],n)}}),Tt=Object(D.b)({pad2d_:function(e,t,n=0){return Object(B.b)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Object(jt.a)(e,t,n)}}),Ct=Object(D.b)({pad3d_:function(e,t,n=0){return Object(B.b)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Object(jt.a)(e,t,n)}}),Et=Object(D.b)({pad4d_:function(e,t,n=0){return Object(B.b)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Object(jt.a)(e,t,n)}});var At=n("s8iC"),$t=n("0vIi"),Rt=n("6RlV"),Dt=n("7wfN"),Ft=n("GeDt");const _t=Object(D.b)({rand_:function(e,t,n){const r=Object(B.O)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return be.a.makeTensor(a,e,n)}});var Mt=n("c2T0");const zt=Object(D.b)({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Mt.b(t,n,r,a),i=Object(Y.a)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Lt=Object(D.b)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Mt.a(t,n,r,!1,a),i=Object(Y.a)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Pt=n("qdaq"),Bt=n("tmMy"),Vt=n("9oR1"),Wt=n("zRhu"),Ut=n("Kc3e"),Gt=n("WpCK"),qt=n("5gGe");const Ht=Object(D.b)({reverse1d_:function(e){const t=Object(E.a)(e,"x","reverse");return B.b(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Object(qt.a)(t,0)}}),Yt=Object(D.b)({reverse2d_:function(e,t){const n=Object(E.a)(e,"x","reverse");return B.b(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Object(qt.a)(n,t)}}),Kt=Object(D.b)({reverse3d_:function(e,t){const n=Object(E.a)(e,"x","reverse");return B.b(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Object(qt.a)(n,t)}}),Xt=Object(D.b)({reverse4d_:function(e,t){const n=Object(E.a)(e,"x","reverse");return B.b(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Object(qt.a)(n,t)}});var Zt=n("dRLb"),Qt=n("dsom"),Jt=n("pRRN"),en=n("C683"),tn=n("YLoS"),nn=n("QWbY"),rn=n("yGDk"),an=n("G/uF"),sn=n("FGFg");const on=Object(D.b)({slice1d_:function(e,t,n){const r=Object(E.a)(e,"x","slice1d");return B.b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Object(_.a)(r,[t],[n])}}),un=Object(D.b)({slice2d_:function(e,t,n){const r=Object(E.a)(e,"x","slice2d");return B.b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Object(_.a)(r,t,n)}}),cn=Object(D.b)({slice3d_:function(e,t,n){const r=Object(E.a)(e,"x","slice3d");return B.b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Object(_.a)(r,t,n)}}),ln=Object(D.b)({slice4d_:function(e,t,n){const r=Object(E.a)(e,"x","slice4d");return B.b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Object(_.a)(r,t,n)}});var dn=n("Qo3Y"),hn=n("sWob"),pn=n("TbFj"),fn=n("Vs/U"),mn=n("qzbf"),bn=n("ZLVG"),gn=n("/2Wz"),yn=n("Km0G"),xn=n("2qJO"),vn=n("s49F"),wn=n("3IVC"),On=n("7exT"),kn=n("IBm2"),In=n("v+nw"),Sn=n("zFAV"),jn=n("VYYy"),Nn=n("29Vw"),Tn=n("wFwg"),Cn=n("/en9"),En=n("JJn/"),An=n("9+YK"),$n=n("Qr1B"),Rn=n("Cn86"),Dn=n("Uom0"),Fn=n("tH7w"),_n=n("XL4q"),Mn=n("9MFc"),zn=n("cuXz"),Ln=n("ZRUZ");const Pn=async function(e,t,n){const r=Object(E.a)(e,"tensor","boolMask"),a=Object(E.a)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;B.b(i>0,(()=>"mask cannot be scalar")),B.e(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const c=o.slice(0,s).concat([u],o.slice(s+i)),l=Object(Ee.a)(r,c),d=Object(Ee.a)(a,[-1]),h=await Object(Mn.a)(d),p=Object(wn.a)(h,[1]),f=Object(_e.a)(l,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f};var Bn=n("koUT"),Vn=n("Q4qi"),Wn=n("0L9A");const Un=Object(D.b)({movingAverage_:function(e,t,n,r,a=!0){const s=Object(E.a)(e,"v","movingAverage"),i=Object(E.a)(t,"x","movingAverage"),o=Object(E.a)(n,"decay","movingAverage");Object(Wn.assertTypesMatch)(s,i),B.b(B.a(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=Object(Jt.a)(1),c=Object(gt.a)(u,o);let l=Object(R.a)(Object(gt.a)(i,s),c);if(a){B.b(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Object(E.a)(r,"step","movingAverage");l=Object(ve.a)(l,Object(gt.a)(u,Object($t.a)(o,e)))}return Object(g.a)(s,l)}});var Gn=n("u3dQ"),qn=n("MZyz"),Hn=n("6o7b");const Yn=Object(D.b)({dropout_:function(e,t,n,r){const a=Object(E.a)(e,"x","dropout");if(B.b("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),B.b(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof lt.a?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(B.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)n.push(null==t[r]&&null!=e.shape[r]?e.shape[r]:t[r]);return n}return t}(a,n),i=1-t,o=Object(ve.a)(Object(De.a)(Object(g.a)(Object(Pt.a)(s,0,1,"float32",r),i)),i);return Object(R.a)(a,o)}}),Kn=async function(e,t,n=1){const r=Object(E.a)(e,"predictions","inTopK"),a=Object(E.a)(t,"targets","inTopK");Object(B.b)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Object(B.b)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Object(B.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(B.b)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,c]=[i.length/s,s],l=Object(B.o)("bool",u);for(let e=0;e<u;e++){const t=e*c,r=i.subarray(t,t+c),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),l[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){l[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(Nn.a)(l,a.shape,"bool")};var Xn=n("ckYy"),Zn=n("VncX"),Qn=n("pAYp"),Jn=n("h6Fb"),er=n("tFNL"),tr=n("xuGi");const nr=Object(D.b)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",!1===Object(tr.d)(be.a.state.gradientDepth,u)){let d=Object(se.a)(e,t,n,r,a,s,i);return null!=o&&(d=Object(g.a)(d,o)),Object(tr.a)(d,u,c,l)}const d=Object(E.a)(e,"x","conv2d","float32"),h=Object(E.a)(t,"filter","conv2d","float32");let p=d,f=!1;3===d.rank&&(f=!0,p=Object(Ee.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),B.b(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),B.b(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),er.a("fused conv2d",r,i),B.b(p.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),B.b(er.i(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),B.b("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=er.b(p.shape,h.shape,n,s,r,i);let b,y;null!=o&&(b=Object(E.a)(o,"bias","fused conv2d"),[b]=Object(Wn.makeTypesMatch)(b,d),Zn.assertAndGetBroadcastShape(m.outShape,b.shape)),null!=c&&(y=Object(E.a)(c,"prelu weights","fused conv2d"));const x=(e,t)=>{const[a,i,o,c]=t,l=Object(tr.c)(e,o,u);B.b(er.j(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const d=[Object(Jn.a)(i.shape,l,a,n,r),Object(Qn.a)(i,l,a.shape,n,r)];if(null!=c){const e=Object(tr.b)(c,l);d.push(e)}return d},v={x:p,filter:h,bias:b,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};if(null==o){const e=Object(Xn.a)(((e,t,n)=>{let r=be.a.runKernel(ge.lb,v,w);return n([t,e,r]),f&&(r=Object(Ee.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(p,h)}{const e=Object(Xn.a)(((e,t,n,r)=>{let a=be.a.runKernel(ge.lb,v,w);return r([t,e,a,n]),f&&(a=Object(Ee.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(p,h,b)}}});var rr=n("q9rs"),ar=n("/TlD");const sr=Object(D.b)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(!1===Object(tr.d)(be.a.state.gradientDepth,u)){let d=Object(me.a)(e,t,n,r,a,s,i);return null!=o&&(d=Object(g.a)(d,o)),Object(tr.a)(d,u,c,l)}const d=Object(E.a)(e,"x","depthwiseConv2d","float32"),h=Object(E.a)(t,"filter","depthwiseConv2d","float32");let p=d,f=!1;3===d.rank&&(f=!0,p=Object(Ee.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),B.b(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),B.b(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),B.b(p.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==s&&(s=[1,1]),B.b(er.i(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),er.a("fused depthwiseConv2d",r,i);const m=er.b(p.shape,h.shape,n,s,r,i,!0);let b,y;null!=o&&(b=Object(E.a)(o,"bias","fused conv2d"),[b]=Object(Wn.makeTypesMatch)(b,d),Zn.assertAndGetBroadcastShape(m.outShape,b.shape)),null!=c&&(y=Object(E.a)(c,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{B.b(er.j(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,c,l]=t,d=Object(tr.c)(e,c,u),h=Object(ar.a)(o.shape,d,a,n,r,s,i),p=Object(rr.a)(o,d,a.shape,n,r,s,i);if(null!=l){return[h,p,Object(tr.b)(b,d)]}return[h,p]},v={x:p,filter:h,bias:b,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};if(null==o){const e=Object(Xn.a)(((e,t,n)=>{let r=be.a.runKernel(ge.mb,v,w);return n([t,e,r]),f&&(r=Object(Ee.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(p,h)}{const e=Object(Xn.a)(((e,t,n,r)=>{let a=be.a.runKernel(ge.mb,v,w);return r([t,e,a,n]),f&&(a=Object(Ee.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(p,h,b)}}}),ir=Object(D.b)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Object(tr.d)(be.a.state.gradientDepth,s)){let u=Object($.a)(e,t,n,r);return null!=a&&(u=Object(g.a)(u,a)),Object(tr.a)(u,s,i,o)}let u=Object(E.a)(e,"a","fused matMul"),c=Object(E.a)(t,"b","fused matMul");[u,c]=Object(Wn.makeTypesMatch)(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),b=B.O(f),y=B.O(m);B.b(l===d,(()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=Zn.assertAndGetBroadcastShape(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,p]),v=n?Object(Ee.a)(u,[b,l,h]):Object(Ee.a)(u,[b,h,l]),w=r?Object(Ee.a)(c,[y,p,d]):Object(Ee.a)(c,[y,d,p]);let O,k;null!=a&&(O=Object(E.a)(a,"bias","fused matMul"),[O]=Object(Wn.makeTypesMatch)(O,u),Zn.assertAndGetBroadcastShape(x,O.shape)),null!=i&&(k=Object(E.a)(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,c]=t,l=Object(tr.c)(Object(Ee.a)(e,u.shape),u,s);let d,h;if(n||r?!n&&r?(d=Object($.a)(l,o,!1,!1),h=Object($.a)(l,i,!0,!1)):n&&!r?(d=Object($.a)(o,l,!1,!0),h=Object($.a)(i,l,!1,!1)):(d=Object($.a)(o,l,!0,!0),h=Object($.a)(l,i,!0,!0)):(d=Object($.a)(l,o,!1,!0),h=Object($.a)(i,l,!0,!1)),null!=a){return[d,h,Object(tr.b)(c,l)]}return[d,h]},S={a:v,b:w,bias:O,preluActivationWeights:k},j={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){const e=Object(Xn.a)(((e,t,n)=>{const r=be.a.runKernel(ge.kd,S,j);return n([e,t,r]),{value:Object(Ee.a)(r,x),gradFunc:I}}));return e(v,w)}{const e=Object(Xn.a)(((e,t,n,r)=>{const a=be.a.runKernel(ge.kd,S,j);return r([e,t,a,n]),{value:Object(Ee.a)(a,x),gradFunc:I}}));return e(v,w,O)}}}),or=Object(D.b)({hammingWindow_:function(e){return l(e,.54,.46)}}),ur=Object(D.b)({hannWindow_:function(e){return l(e,.5,.5)}}),cr=Object(D.b)({frame_:function(e,t,n,r=!1,s=0){let i=0;const o=[];for(;i+t<=e.size;)o.push(Object(_.a)(e,i,t)),i+=n;if(r)for(;i<e.size;){const r=i+t-e.size,a=Object(A.a)([Object(_.a)(e,i,t-r),Object(Re.a)([r],s)]);o.push(a),i+=n}return 0===o.length?a([],[0,t]):Object(Ee.a)(Object(A.a)(o),[o.length,t])}}),lr=Object(D.b)({stft_:function(e,t,n,r,a=ur){null==r&&(r=c(t));const s=cr(e,t,n),i=Object(R.a)(s,a(t));return Object(gn.a)(i,r)}}),dr=Object(D.b)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=Object(E.a)(e,"image","cropAndResize"),o=Object(E.a)(t,"boxes","cropAndResize","float32"),u=Object(E.a)(n,"boxInd","cropAndResize","int32"),c=o.shape[0];return B.b(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),B.b(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`)),B.b(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`)),B.b(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),B.b(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),B.b("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`)),be.a.runKernel(ge.L,{image:i,boxes:o,boxInd:u},{method:a,extrapolationValue:s,cropSize:r})}}),hr=Object(D.b)({flipLeftRight_:function(e){const t=Object(E.a)(e,"image","flipLeftRight","float32");return B.b(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`)),be.a.runKernel(ge.gb,{image:t},{})}}),pr=Object(D.b)({grayscaleToRGB_:function(e){const t=Object(E.a)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];B.b(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),B.b(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Object(Ae.a)(t,a)}}),fr=Object(D.b)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Object(E.a)(e,"image","rotateWithOffset","float32");return B.b(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`)),be.a.runKernel(ge.wc,{image:a},{radians:t,fillValue:n,center:r})}}),mr=Object(D.b)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(E.a)(e,"boxes","nonMaxSuppression","float32"),i=Object(E.a)(t,"scores","nonMaxSuppression","float32"),o=d(s,i,n,r,a);return be.a.runKernel(ge.Yb,{boxes:s,scores:i},{maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold})}});var br=n("fr4c");const gr=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(E.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(E.a)(t,"scores","nonMaxSuppressionAsync"),o=d(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:h}=Object(br.a)(c,l,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Object(Tn.a)(h,"int32")},yr=Object(D.b)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(E.a)(e,"boxes","nonMaxSuppression"),o=Object(E.a)(t,"scores","nonMaxSuppression"),u=d(i,o,n,r,a,s),c=be.a.runKernel(ge.ac,{boxes:i,scores:o},{maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma});return{selectedIndices:c[0],selectedScores:c[1]}}}),xr=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(E.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(E.a)(t,"scores","nonMaxSuppressionAsync"),u=d(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],h=c[1],{selectedIndices:p,selectedScores:f}=Object(br.c)(l,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Object(Tn.a)(p,"int32"),selectedScores:Object(Tn.a)(f)}},vr=Object(D.b)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(E.a)(e,"boxes","nonMaxSuppression"),o=Object(E.a)(t,"scores","nonMaxSuppression"),u=d(i,o,n,r,a,null),c=be.a.runKernel(ge.Zb,{boxes:i,scores:o},{maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s});return{selectedIndices:c[0],validOutputs:c[1]}}}),wr=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(E.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(E.a)(t,"scores","nonMaxSuppressionAsync"),u=d(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[p,f]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:b}=Object(br.b)(p,f,c,l,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Object(Tn.a)(m,"int32"),validOutputs:Object(Jt.a)(b,"int32")}};var Or=n("i5X8"),kr=n("xSKm");const Ir=Object(D.b)({threshold_:function(e,t="binary",n=!1,r=.5){const a=Object(E.a)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,c,l=Object(R.a)(Object(Tn.a)([r]),255);if(B.b(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),B.b(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),B.b("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),B.b("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,u]=Object(yn.a)(a,[1,1,1],-1);const e=Object(R.a)(i,.2989),t=Object(R.a)(o,.587),n=Object(R.a)(u,.114);c=Object(g.a)(Object(g.a)(e,t),n)}else c=e;if("otsu"===t){l=function(e,t){let n,r,a,s,i,o,u=Object(Tn.a)([-1]),c=Object(Tn.a)([0]),l=Object(Tn.a)([0]);for(let d=0;d<e.size-1;d++){n=Object(_.a)(e,0,d+1),r=Object(_.a)(e,d+1),i=Object(ve.a)(Object(Sn.a)(n),t),o=Object(ve.a)(Object(Sn.a)(r),t);const h=Object(Sn.a)(Object(R.a)(n,Object(Bt.a)(0,n.size)));a=Object(ve.a)(h,Object(Sn.a)(n));const p=Object(Re.a)(r.shape,n.size),f=Object(g.a)(Object(Bt.a)(0,r.size),p),m=Object(R.a)(r,f);s=Object(ve.a)(Object(Sn.a)(m),Object(Sn.a)(r));const b=Object(gt.a)(a,s),y=Object(gt.a)(a,s),x=Object(R.a)(i,o);l=Object(R.a)(Object(R.a)(x,b),y);const v=Object(Me.a)(l,c);c=Object(_n.a)(v,l,c),u=Object(_n.a)(v,Object(Tn.a)([d]),u)}return u}(Object(G.a)(Object(K.a)(Object(Zt.a)(c),"int32"),Object(Nn.a)([]),256),s)}const d=n?Object(Ge.a)(c,l):Object(Me.a)(c,l);return Object(K.a)(Object(R.a)(d,255),"int32")}}),Sr=Object(D.b)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=Object(E.a)(e,"image","transform","float32"),o=Object(E.a)(t,"transforms","transform","float32");return B.b(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),B.b(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),B.b(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`)),be.a.runKernel(ge.ed,{image:i,transforms:o},{interpolation:n,fillMode:r,fillValue:a,outputShape:s})}}),jr=Object(D.b)({bandPart_:function(e,t,n){Object(B.b)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Object(B.b)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Object(E.a)(e,"a","bandPart");Object(B.b)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Object(Ee.a)(Object(Bt.a)(0,s,1,"int32"),[-1,1]),u=Object(Bt.a)(0,i,1,"int32"),c=Object(gt.a)(o,u),l=Object(Je.a)(Object(Ge.a)(c,Object(Jt.a)(+t,"int32")),Object(ze.a)(c,Object(Jt.a)(-n,"int32"))),d=Object(zn.a)([s,i],r.dtype);return Object(Ee.a)(Object(On.a)(Object(Fn.a)(Object(Ee.a)(r,[-1,s,i])).map((e=>Object(_n.a)(l,e,d)))),a)}}),Nr=Object(D.b)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(B.b)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(B.b)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Object(yn.a)(e,e.shape[0],0).map((e=>Object(wn.a)(e,[0])));Object(B.b)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(be.a.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Object(R.a)(Object(Sn.a)(Object(R.a)(n[r],e)),n[r]);e=Object(gt.a)(e,t)}return Object(ve.a)(e,Object(Vn.a)(e,"euclidean"))})));return t?Object(On.a)(n,0):n}});var Tr=n("i6xT");const Cr=Object(D.b)({qr_:function(e,t=!1){if(Object(B.b)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return h(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Object(Fn.a)(Object(Ee.a)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{const[n,r]=h(e,t);a.push(n),s.push(r)}));return[Object(Ee.a)(Object(On.a)(a,0),e.shape),Object(Ee.a)(Object(On.a)(s,0),e.shape)]}}});var Er=n("oWI0");const Ar=Object(D.b)({computeWeightedLoss_:function(e,t,n=Er.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(E.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(E.a)(t,"weights","computeWeightedLoss"));const s=null==a?r:Object(R.a)(r,a);if(n===Er.a.NONE)return s;if(n===Er.a.SUM)return Object(Sn.a)(s);if(n===Er.a.MEAN){if(null==a)return Object(ut.a)(s);{const e=r.size/a.size,t=Object(ve.a)(Object(Sn.a)(s),Object(Sn.a)(a));return e>1?Object(ve.a)(t,Object(Jt.a)(e)):t}}if(n===Er.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(ve.a)(Object(Sn.a)(s),Object(Jt.a)(r.size));{const e=Object(R.a)(a,Object(ct.a)(r.shape)),t=Object(K.a)(Object(Sn.a)(Object(Ot.a)(e,Object(Jt.a)(0))),"float32");return Object(ve.a)(Object(Sn.a)(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),$r=Object(D.b)({absoluteDifference_:function(e,t,n,r=Er.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(E.a)(e,"labels","absoluteDifference"),s=Object(E.a)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(E.a)(n,"weights","absoluteDifference")),Object(B.e)(a.shape,s.shape,"Error in absoluteDifference: ");const o=Object(f.a)(Object(gt.a)(a,s));return Ar(o,i,r)}}),Rr=Object(D.b)({cosineDistance_:function(e,t,n,r,a=Er.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(E.a)(e,"labels","cosineDistance"),i=Object(E.a)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(E.a)(r,"weights","cosineDistance")),Object(B.e)(s.shape,i.shape,"Error in cosineDistance: ");const u=Object(Jt.a)(1),c=Object(gt.a)(u,Object(Sn.a)(Object(R.a)(s,i),n,!0));return Ar(c,o,a)}}),Dr=Object(D.b)({hingeLoss_:function(e,t,n,r=Er.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(E.a)(e,"labels","hingeLoss");const s=Object(E.a)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(E.a)(n,"weights","hingeLoss")),Object(B.e)(a.shape,s.shape,"Error in hingeLoss: ");const o=Object(Jt.a)(1);a=Object(gt.a)(Object(R.a)(Object(Jt.a)(2),a),o);const u=Object(Ut.a)(Object(gt.a)(o,Object(R.a)(a,s)));return Ar(u,i,r)}}),Fr=Object(D.b)({huberLoss_:function(e,t,n,r=1,a=Er.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(E.a)(e,"labels","huberLoss"),i=Object(E.a)(t,"predictions","huberLoss");let o=null;null!=n&&(o=Object(E.a)(n,"weights","huberLoss")),Object(B.e)(s.shape,i.shape,"Error in huberLoss: ");const u=Object(Jt.a)(r),c=Object(f.a)(Object(gt.a)(i,s)),l=Object(ht.a)(c,u),d=Object(gt.a)(c,l),h=Object(g.a)(Object(R.a)(Object(Jt.a)(.5),Object(bt.a)(l)),Object(R.a)(u,d));return Ar(h,o,a)}}),_r=Object(D.b)({logLoss_:function(e,t,n,r=1e-7,a=Er.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(E.a)(e,"labels","logLoss"),i=Object(E.a)(t,"predictions","logLoss");let o=null;null!=n&&(o=Object(E.a)(n,"weights","logLoss")),Object(B.e)(s.shape,i.shape,"Error in logLoss: ");const u=Object(Jt.a)(1),c=Object(Jt.a)(r),l=Object(wt.a)(Object(R.a)(s,Object(Ye.a)(Object(g.a)(i,c)))),d=Object(R.a)(Object(gt.a)(u,s),Object(Ye.a)(Object(g.a)(Object(gt.a)(u,i),c))),h=Object(gt.a)(l,d);return Ar(h,o,a)}}),Mr=Object(D.b)({meanSquaredError_:function(e,t,n,r=Er.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(E.a)(e,"labels","meanSquaredError"),s=Object(E.a)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(E.a)(n,"weights","meanSquaredError")),Object(B.e)(a.shape,s.shape,"Error in meanSquaredError: ");const o=Object(vn.a)(a,s);return Ar(o,i,r)}}),zr=Object(D.b)({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Er.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(E.a)(e,"multiClassLabels","sigmoidCrossEntropy");const i=Object(E.a)(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Object(E.a)(n,"weights","sigmoidCrossEntropy")),Object(B.e)(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(Jt.a)(r),t=Object(Jt.a)(1),n=Object(Jt.a)(.5);s=Object(g.a)(Object(R.a)(s,Object(gt.a)(t,e)),Object(R.a)(n,e))}const u=function(e,t){const n=Object(E.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(E.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(B.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Object(Ut.a)(r),s=Object(R.a)(r,n),i=Object(Ke.a)(Object(Ne.a)(Object(wt.a)(Object(f.a)(r))));return Object(g.a)(Object(gt.a)(a,s),i)}(s,i);return Ar(u,o,a)}}),Lr=Object(D.b)({softmaxCrossEntropy_:function(e,t,n,r=0,a=Er.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(E.a)(e,"onehotLabels","softmaxCrossEntropy");const i=Object(E.a)(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Object(E.a)(n,"weights","softmaxCrossEntropy")),Object(B.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(Jt.a)(r),t=Object(Jt.a)(1),n=Object(Jt.a)(s.shape[1]);s=Object(g.a)(Object(R.a)(s,Object(gt.a)(t,e)),Object(ve.a)(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Object(Xn.a)(((e,t,r)=>{const a=Object(Qe.a)(t,[n],!0),s=Object(gt.a)(Object(K.a)(t,"float32"),a);r([e,s]);const i=Object(wt.a)(Object(R.a)(s,e));return{value:Object(Sn.a)(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Object(mt.e)(e.shape,[n]);return[Object(R.a)(Object(Ee.a)(e,s),Object(gt.a)(Object(K.a)(r,"float32"),Object(Ne.a)(a))),Object(R.a)(Object(Ee.a)(e,s),Object(gt.a)(Object(Ne.a)(a),Object(K.a)(r,"float32")))]}}}));return r(e,t)}(s,i);return Ar(u,o,a)}}),Pr=Object(D.b)({sparseFillEmptyRows_:function(e,t,n,r){const a=Object(E.a)(e,"indices","sparseFillEmptyRows","int32"),s=Object(E.a)(t,"values","sparseFillEmptyRows"),i=Object(E.a)(n,"denseShape","sparseFillEmptyRows","int32"),o=Object(E.a)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u=be.a.runKernel(ge.Kc,{indices:a,values:s,denseShape:i,defaultValue:o});return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Br=Object(D.b)({sparseReshape_:function(e,t,n){const r=Object(E.a)(e,"inputIndices","sparseReshape","int32"),a=Object(E.a)(t,"inputShape","sparseReshape","int32"),s=Object(E.a)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i=be.a.runKernel(ge.Lc,{inputIndices:r,inputShape:a,newShape:s});return{outputIndices:i[0],outputShape:i[1]}}}),Vr=Object(D.b)({sparseSegmentMean_:function(e,t,n){const r=Object(E.a)(e,"data","sparseSegmentMean"),a=Object(E.a)(t,"indices","sparseSegmentMean","int32"),s=Object(E.a)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);return be.a.runKernel(ge.Mc,{data:r,indices:a,segmentIds:s})}}),Wr=Object(D.b)({sparseSegmentSum_:function(e,t,n){const r=Object(E.a)(e,"data","sparseSegmentSum"),a=Object(E.a)(t,"indices","sparseSegmentSum","int32"),s=Object(E.a)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);return be.a.runKernel(ge.Nc,{data:r,indices:a,segmentIds:s})}}),Ur=Object(D.b)({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=Object(E.a)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=Object(E.a)(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l=be.a.runKernel(ge.Vc,{data:u,dataSplits:c},{separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o});return{nGrams:l[0],nGramsSplits:l[1]}}}),Gr=Object(D.b)({stringSplit_:function(e,t,n=!0){const r=Object(E.a)(e,"input","stringSplit","string"),a=Object(E.a)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s=be.a.runKernel(ge.Wc,{input:r,delimiter:a},{skipEmpty:n});return{indices:s[0],values:s[1],shape:s[2]}}}),qr=Object(D.b)({stringToHashBucketFast_:function(e,t){const n=Object(E.a)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return be.a.runKernel(ge.Xc,{input:n},r)}}),Hr={fft:fn.a,ifft:mn.a,rfft:gn.a,irfft:bn.a},Yr={hammingWindow:or,hannWindow:ur,frame:cr,stft:lr},Kr={flipLeftRight:hr,grayscaleToRGB:pr,resizeNearestNeighbor:kr.a,resizeBilinear:Or.a,rotateWithOffset:fr,cropAndResize:dr,nonMaxSuppression:mr,nonMaxSuppressionAsync:gr,nonMaxSuppressionWithScore:yr,nonMaxSuppressionWithScoreAsync:xr,nonMaxSuppressionPadded:vr,nonMaxSuppressionPaddedAsync:wr,threshold:Ir,transform:Sr},Xr={bandPart:jr,gramSchmidt:Nr,qr:Cr},Zr={absoluteDifference:$r,computeWeightedLoss:Ar,cosineDistance:Rr,hingeLoss:Dr,huberLoss:Fr,logLoss:_r,meanSquaredError:Mr,sigmoidCrossEntropy:zr,softmaxCrossEntropy:Lr},Qr={sparseFillEmptyRows:Pr,sparseReshape:Br,sparseSegmentMean:Vr,sparseSegmentSum:Wr},Jr={stringNGrams:Ur,stringSplit:Gr,stringToHashBucketFast:qr}},u3dQ:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q"),o=n("3o7l");const u=Object(i.b)({scatterND_:function(e,t,n){const i=Object(s.a)(e,"indices","scatterND","int32"),u=Object(s.a)(t,"updates","scatterND");return o.validateInput(u,i,n),r.a.runKernel(a.zc,{indices:i,updates:u},{shape:n})}})},uWjN:function(e,t,n){(function(e){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n("Z66Z")&&n("K2jg")?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e,n("Z66Z"))}).call(this,n("RoC8")(e))},uiqz:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({neg_:function(e){const t=Object(s.a)(e,"x","neg");return r.a.runKernel(a.Xb,{x:t})}})},"v+nw":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({stridedSlice_:function(e,t,n,i,o=0,u=0,c=0,l=0,d=0){const h=Object(s.a)(e,"x","stridedSlice","string_or_numeric");return r.a.runKernel(a.Uc,{x:h},{begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d})}})},vTEK:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("6D6q");const u=Object(o.b)({matMul_:function(e,t,n=!1,o=!1){let u=Object(i.a)(e,"a","matMul"),c=Object(i.a)(t,"b","matMul");return[u,c]=Object(s.makeTypesMatch)(u,c),r.a.runKernel(a.s,{a:u,b:c},{transposeA:n,transposeB:o})}})},wFwg:function(e,t,n){"use strict";function r(e,t){Object(s.d)(e);const n=Object(a.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(i.a)(e,null,n,t)}n.d(t,"a",(function(){return r}));var a=n("beMT"),s=n("qCmv"),i=n("/en9")},wG3K:function(e,t,n){"use strict";function r(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s}));class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return r("refCount")}incRef(e){return r("incRef")}timerAvailable(){return!0}time(e){return r("time")}read(e){return r("read")}readSync(e){return r("readSync")}readToGPU(e,t){return r("readToGPU")}numDataIds(){return r("numDataIds")}disposeData(e,t){return r("disposeData")}write(e,t,n){return r("write")}move(e,t,n,a,s){return r("move")}memory(){return r("memory")}floatPrecision(){return r("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return r("dispose")}}},wtXJ:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},wuGp:function(e,t,n){"use strict";function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},r.apply(this,arguments)}function a(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function s(){return l}function i(e){l=e}n.d(t,"b",(function(){return c})),n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return l})),n.d(t,"d",(function(){return i}));var o=n("qCmv");const u="tfjsflags";class c{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=a,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(s().getBool("IS_TEST")||s().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];s().getBool("IS_TEST")||s().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(o.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=r({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(u in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}let l=null},xHJS:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},xJ83:function(e,t,n){"use strict";function r(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return a.a.runKernel(s.Cb,{},{start:e,stop:t,num:n})}n.d(t,"a",(function(){return r}));var a=n("QCRY"),s=n("f7fD")},xSKm:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("6D6q"),u=n("6RbH");const c=Object(o.b)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const c=Object(s.a)(e,"images","resizeNearestNeighbor");i.b(3===c.rank||4===c.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`)),i.b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.b("float32"===c.dtype||"int32"===c.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.b(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,h=r.a.runKernel(a.tc,{images:l},{alignCorners:n,halfPixelCenters:o,size:t});return d?Object(u.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},xuGi:function(e,t,n){"use strict";function r(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(c.a)(e,Object(m.a)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function a(e,t){let n=t;const r=i.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=Object(b.a)(n,r)),Object(p.a)(n,e.shape)}function s(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(d.a)(e);if("elu"===t)return Object(o.a)(e);if("relu6"===t)return Object(h.a)(e);if("prelu"===t)return Object(l.a)(e,n);if("leakyrelu"===t)return Object(u.a)(e,r);if("sigmoid"===t)return Object(f.a)(e);throw new Error(`Unknown fused activation ${t}.`)}n.d(t,"c",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return s})),n.d(t,"d",(function(){return g}));var i=n("VncX"),o=n("tnC0"),u=n("F/nV"),c=n("TvjY"),l=n("6RlV"),d=n("Kc3e"),h=n("WpCK"),p=n("6RbH"),f=n("PRjJ"),m=n("IBm2"),b=n("zFAV");const g=(e,t)=>!(e>0)||"linear"===t},y5x8:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({atan_:function(e){const t=Object(s.a)(e,"x","atan");return r.a.runKernel(a.l,{x:t})}})},yGDk:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({sign_:function(e){const t=Object(s.a)(e,"x","sign");return r.a.runKernel(a.Dc,{x:t})}})},z2op:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({tanh_:function(e){const t=Object(s.a)(e,"x","tanh","float32");return r.a.runKernel(a.bd,{x:t})}})},zCKB:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("qCmv"),o=n("VWKH"),u=n("tFNL"),c=n("6D6q"),l=n("6RbH");const d=Object(c.b)({avgPool_:function(e,t,n,c,d){const h=Object(s.a)(e,"x","avgPool","float32");i.b(u.i(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let p=h,f=!1;3===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===p.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`)),u.a("avgPool",c,d);let m=r.a.runKernel(a.o,{x:p},{filterSize:t,strides:n,pad:c,dimRoundingMode:d});return m=Object(o.a)(m,h.dtype),f?Object(l.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},zFAV:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("VWKH"),o=n("6D6q");const u=Object(o.b)({sum_:function(e,t=null,n=!1){let o=Object(s.a)(e,"x","sum");return"bool"===o.dtype&&(o=Object(i.a)(o,"int32")),r.a.runKernel(a.Zc,{x:o},{axis:t,keepDims:n})}})},zOuG:function(e,t,n){var r;!function(a,s){function i(e,t,n){var r=[],i=l(c((t=1==t?{entropy:!0}:t||{}).entropy?[e,d(a)]:null==e?function(){try{var e;return h&&(e=h.randomBytes)?e=e(f):(e=new Uint8Array(f),(p.crypto||p.msCrypto).getRandomValues(e)),d(e)}catch(e){var t=p.navigator,n=t&&t.plugins;return[+new Date,p,n,p.screen,d(a)]}}():e,3),r),y=new o(r),x=function(){for(var e=y.g(6),t=m,n=0;e<b;)e=(e+n)*f,t*=f,n=y.g(1);for(;e>=g;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|y.g(4)},x.quick=function(){return y.g(4)/4294967296},x.double=x,l(d(y.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&u(r,y),e.state=function(){return u(y,{})}),n?(s.random=e,t):e})(x,i,"global"in t?t.global:this==s,t.state)}function o(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<f;)i[a]=a++;for(a=0;a<f;a++)i[a]=i[s=y&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=y&a+1],n=n*f+i[y&(i[a]=i[s=y&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(f)}function u(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function c(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(c(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function l(e,t){for(var n,r=e+"",a=0;a<r.length;)t[y&a]=y&(n^=19*t[y&a])+r.charCodeAt(a++);return d(t)}function d(e){return String.fromCharCode.apply(0,e)}var h,p=this,f=256,m=s.pow(f,6),b=s.pow(2,52),g=2*b,y=255;if(s.seedrandom=i,l(s.random(),a),e.exports){e.exports=i;try{h=n(7)}catch(e){}}else void 0===(r=function(){return i}.call(t,n,t,e))||(e.exports=r)}([],Math)},zRhu:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("QCRY"),a=n("f7fD"),s=n("beMT"),i=n("6D6q");const o=Object(i.b)({reciprocal_:function(e){const t=Object(s.a)(e,"x","reciprocal");return r.a.runKernel(a.nc,{x:t})}})},zgTD:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("QCRY"),a=n("f7fD"),s=n("qCmv"),i=n("6D6q"),o=n("6RbH");const u=Object(i.b)({conv3DBackpropInput_:function(e,t,n,i,u){s.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let c=e,l=t,d=!1;4===t.rank&&(d=!0,l=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),c=[1,e[0],e[1],e[2],e[3]]);const h=c[4],p=l.shape[4];s.b(5===c.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${c.length}.`)),s.b(5===l.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${l.rank}`)),s.b(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),s.b(h===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`)),s.b(p===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`));const f=r.a.runKernel(a.I,{dy:l,filter:n},{pad:u,strides:i,inputShape:c});return d?Object(o.a)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}})},zqkP:function(e,t,n){var r;!function(a,s){function i(e,t,n){var r=[],i=l(c((t=1==t?{entropy:!0}:t||{}).entropy?[e,d(a)]:null==e?function(){try{var e;return h&&(e=h.randomBytes)?e=e(f):(e=new Uint8Array(f),(p.crypto||p.msCrypto).getRandomValues(e)),d(e)}catch(e){var t=p.navigator,n=t&&t.plugins;return[+new Date,p,n,p.screen,d(a)]}}():e,3),r),y=new o(r),x=function(){for(var e=y.g(6),t=m,n=0;e<b;)e=(e+n)*f,t*=f,n=y.g(1);for(;e>=g;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|y.g(4)},x.quick=function(){return y.g(4)/4294967296},x.double=x,l(d(y.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&u(r,y),e.state=function(){return u(y,{})}),n?(s.random=e,t):e})(x,i,"global"in t?t.global:this==s,t.state)}function o(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<f;)i[a]=a++;for(a=0;a<f;a++)i[a]=i[s=y&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=y&a+1],n=n*f+i[y&(i[a]=i[s=y&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(f)}function u(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function c(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(c(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function l(e,t){for(var n,r=e+"",a=0;a<r.length;)t[y&a]=y&(n^=19*t[y&a])+r.charCodeAt(a++);return d(t)}function d(e){return String.fromCharCode.apply(0,e)}var h,p=this,f=256,m=s.pow(f,6),b=s.pow(2,52),g=2*b,y=255;if(s.seedrandom=i,l(s.random(),a),e.exports){e.exports=i;try{h=n(2)}catch(e){}}else void 0===(r=function(){return i}.call(t,n,t,e))||(e.exports=r)}([],Math)},zunn:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("ckYy"),a=n("beMT"),s=n("TvjY"),i=n("uiqz"),o=n("6D6q"),u=n("PRjJ"),c=n("sWob");const l=Object(o.b)({logSigmoid_:function(e){const t=Object(a.a)(e,"x","logSigmoid"),n=Object(r.a)((e=>({value:Object(i.a)(Object(c.a)(Object(i.a)(e))),gradFunc:t=>Object(s.a)(t,Object(u.a)(Object(i.a)(e)))})));return n(t)}})},zz8d:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("QCRY"),a=n("f7fD"),s=n("0L9A"),i=n("beMT"),o=n("VncX"),u=n("6D6q");const c=Object(u.b)({notEqual_:function(e,t){let n=Object(i.a)(e,"a","notEqual","string_or_numeric"),u=Object(i.a)(t,"b","notEqual","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.bc,{a:n,b:u})}})}}]);
//# sourceMappingURL=route-home.chunk.24942.esm.js.map